{
  "components": {
    "ds18x20": [
      {
        "id": "ds18b20",
        "name": "ds18b20",
        "description": "",
        "category": "ds18x20",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "ds18b20_hi_temp_waterproof",
        "name": "ds18b20_hi_temp_waterproof",
        "description": "",
        "category": "ds18x20",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "ds18b20_waterproof",
        "name": "ds18b20_waterproof",
        "description": "",
        "category": "ds18x20",
        "dataTypes": [],
        "image": null
      }
    ],
    "i2c": [
      {
        "id": "adt7410",
        "name": "adt7410",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "aht20",
        "name": "aht20",
        "description": "Inexpensive temperature and humidity sensor for I2C-capable boards.",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "aht21",
        "name": "aht21",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": "components/i2c/aht21/image.jpg"
      },
      {
        "id": "am2301b",
        "name": "am2301b",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "am2315c",
        "name": "am2315c",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "bh1750",
        "name": "bh1750",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "bme280",
        "name": "bme280",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "bme680",
        "name": "bme680",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "bme688",
        "name": "bme688",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "bmp280",
        "name": "bmp280",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "bmp388",
        "name": "bmp388",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "bmp390",
        "name": "bmp390",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "dht20",
        "name": "dht20",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "dps310",
        "name": "dps310",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "ds2484",
        "name": "ds2484",
        "description": "Adafruit DS2484 I2C to 1-Wire Bus Adapter Breakout - Converts a single DS18b20 temperature sensor to I2C",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "ens160",
        "name": "ens160",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": "components/i2c/ens160/image.jpg"
      },
      {
        "id": "hdc302x",
        "name": "hdc302x",
        "description": "Precision temperature (\u00c2\u00b10.1\u00c2\u00b0C typical) and humidity sensors (\u00c2\u00b10.5% typ). HDC3020 / HDC3021 / HDC3022",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "hts221",
        "name": "hts221",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "htu21d",
        "name": "htu21d",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "htu31d",
        "name": "htu31d",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "ina219",
        "name": "ina219",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "lc709203f",
        "name": "lc709203f",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "lps22hb",
        "name": "lps22hb",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "lps25hb",
        "name": "lps25hb",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": "components/i2c/lps25hb/image.jpg"
      },
      {
        "id": "lps28dfw",
        "name": "lps28dfw",
        "description": "From 260 to 4060 hPa, this is our largest range pressure sensor (24bit).",
        "category": "i2c",
        "dataTypes": [],
        "image": "components/i2c/lps28dfw/image.jpg"
      },
      {
        "id": "lps33hw",
        "name": "lps33hw",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": "components/i2c/lps33hw/image.jpg"
      },
      {
        "id": "lps35hw",
        "name": "lps35hw",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "ltr303",
        "name": "ltr303",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": "components/i2c/ltr303/image.jpg"
      },
      {
        "id": "ltr329",
        "name": "ltr329",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": "components/i2c/ltr329/image.jpg"
      },
      {
        "id": "ltr390",
        "name": "ltr390",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": "components/i2c/ltr390/image.jpg"
      },
      {
        "id": "max17048",
        "name": "max17048",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "mcp3421",
        "name": "mcp3421",
        "description": "18-bit ADC. Great for Strain Gauges, Thermocouples and Pressure sensors, between 0 and 2.048 volts",
        "category": "i2c",
        "dataTypes": [],
        "image": "components/i2c/mcp3421/image.jpg"
      },
      {
        "id": "mcp9601",
        "name": "mcp9601",
        "description": "Thermocouple / ambient temperature sensor. *Note* Needs hotplugging after i2c scans + selecting component!",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "mcp9808",
        "name": "mcp9808",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "mpl115a2",
        "name": "mpl115a2",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "mprls",
        "name": "mprls",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "ms8607",
        "name": "ms8607",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "nau7802",
        "name": "nau7802",
        "description": "24-bit ADC with 128x gain, used with a load cell for weight/force sensing",
        "category": "i2c",
        "dataTypes": [],
        "image": "components/i2c/nau7802/image.jpg"
      },
      {
        "id": "pct2075",
        "name": "pct2075",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": "components/i2c/pct2075/image.jpg"
      },
      {
        "id": "pmsa003i",
        "name": "pmsa003i",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "rotary_encoder",
        "name": "rotary_encoder",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": "components/i2c/rotary_encoder/image.jpeg"
      },
      {
        "id": "scd30",
        "name": "scd30",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "scd40",
        "name": "scd40",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "sen50",
        "name": "sen50",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": "components/i2c/sen50/image.png"
      },
      {
        "id": "sen54",
        "name": "sen54",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": "components/i2c/sen54/image.png"
      },
      {
        "id": "sen55",
        "name": "sen55",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": "components/i2c/sen55/image.png"
      },
      {
        "id": "sen5x",
        "name": "sen5x",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": "components/i2c/sen5x/image.png"
      },
      {
        "id": "sen66",
        "name": "sen66",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": "components/i2c/sen66/image.png"
      },
      {
        "id": "sgp30",
        "name": "sgp30",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "sgp40",
        "name": "sgp40",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "sht20",
        "name": "sht20",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": "components/i2c/sht20/image.jpg"
      },
      {
        "id": "sht30_mesh",
        "name": "sht30_mesh",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "sht30_shell",
        "name": "sht30_shell",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "sht3x",
        "name": "sht3x",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "sht40",
        "name": "sht40",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "sht41",
        "name": "sht41",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "sht45",
        "name": "sht45",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "shtc3",
        "name": "shtc3",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "si7021",
        "name": "si7021",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "stemma_soil",
        "name": "stemma_soil",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "tc74a0",
        "name": "tc74a0",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "tmp117",
        "name": "tmp117",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": "components/i2c/tmp117/image.jpg"
      },
      {
        "id": "tsl2591",
        "name": "tsl2591",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "vcnl4020",
        "name": "vcnl4020",
        "description": "Proximity sensor works from 0 to 200mm (about 7.5 inches) & light sensor with range of 0.26 to 16,000 lux.",
        "category": "i2c",
        "dataTypes": [],
        "image": "components/i2c/vcnl4020/image.jpg"
      },
      {
        "id": "vcnl4040",
        "name": "vcnl4040",
        "description": "Proximity sensor works from 0 to 200mm (about 7.5 inches) & light sensor with range of 0.0125 to 6,553.5 lux",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "vcnl4200",
        "name": "vcnl4200",
        "description": "Proximity sensor works from 0 to 1.5m (about 59 inches) & light sensor with range of 0.003 to 1570 lux",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "veml7700",
        "name": "veml7700",
        "description": "",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "vl53l0x",
        "name": "vl53l0x",
        "description": "Time of Flight (ToF) distance sensor with about ~50 to 1200mm range",
        "category": "i2c",
        "dataTypes": [],
        "image": "components/i2c/vl53l0x/image.jpg"
      },
      {
        "id": "vl53l1x",
        "name": "vl53l1x",
        "description": "Time of Flight (ToF) distance sensor with about ~30 to 4000mm range",
        "category": "i2c",
        "dataTypes": [],
        "image": "components/i2c/vl53l1x/image.jpg"
      },
      {
        "id": "vl53l4cd",
        "name": "vl53l4cd",
        "description": "Time of Flight (ToF) distance sensor with about ~1 to 1300mm range",
        "category": "i2c",
        "dataTypes": [],
        "image": "components/i2c/vl53l4cd/image.jpg"
      },
      {
        "id": "vl53l4cx",
        "name": "vl53l4cx",
        "description": "Time of Flight (ToF) distance sensor with about ~1 to 6000mm range + 'multi object detection'",
        "category": "i2c",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "vl6180x",
        "name": "vl6180x",
        "description": "Time of Flight (ToF) distance sensor with about ~5 to 200mm range",
        "category": "i2c",
        "dataTypes": [],
        "image": "components/i2c/vl6180x/image.jpg"
      }
    ],
    "pin": [
      {
        "id": "analog_pin",
        "name": "analog_pin",
        "description": "",
        "category": "pin",
        "dataTypes": [],
        "image": "components/pin/analog_pin/image.png"
      },
      {
        "id": "beam_break_sensor",
        "name": "beam_break_sensor",
        "description": "",
        "category": "pin",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "buzzer_5v",
        "name": "buzzer_5v",
        "description": "",
        "category": "pin",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "etape_liquid_level_sensor",
        "name": "etape_liquid_level_sensor",
        "description": "",
        "category": "pin",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "flat_vibration_switch",
        "name": "flat_vibration_switch",
        "description": "",
        "category": "pin",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "hall_effect_sensor",
        "name": "hall_effect_sensor",
        "description": "",
        "category": "pin",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "led",
        "name": "led",
        "description": "",
        "category": "pin",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "light_sensor",
        "name": "light_sensor",
        "description": "",
        "category": "pin",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "mosfet_driver",
        "name": "mosfet_driver",
        "description": "",
        "category": "pin",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "non_latching_relay",
        "name": "non_latching_relay",
        "description": "",
        "category": "pin",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "pir_sensor",
        "name": "pir_sensor",
        "description": "",
        "category": "pin",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "potentiometer",
        "name": "potentiometer",
        "description": "",
        "category": "pin",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "power_switch_tail",
        "name": "power_switch_tail",
        "description": "",
        "category": "pin",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "push_button",
        "name": "push_button",
        "description": "",
        "category": "pin",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "reed_switch",
        "name": "reed_switch",
        "description": "",
        "category": "pin",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "tctr1000",
        "name": "tctr1000",
        "description": "Optical reflective sensor with digital output, 1-30mm range, and adjustable LED emitter brightness",
        "category": "pin",
        "dataTypes": [],
        "image": "components/pin/tctr1000/image.jpg"
      },
      {
        "id": "toggle_switch",
        "name": "toggle_switch",
        "description": "",
        "category": "pin",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "water_sensor",
        "name": "water_sensor",
        "description": "",
        "category": "pin",
        "dataTypes": [],
        "image": null
      }
    ],
    "pixel": [
      {
        "id": "dotstar",
        "name": "dotstar",
        "description": "",
        "category": "pixel",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "neopixel",
        "name": "neopixel",
        "description": "",
        "category": "pixel",
        "dataTypes": [],
        "image": "components/pixel/neopixel/image.jpg"
      },
      {
        "id": "neorgb",
        "name": "neorgb",
        "description": "Speak NeoPixel to your RGB strips! Treat PWM-able common-anode LEDs as a NeoPixel [16V/3A/channel]",
        "category": "pixel",
        "dataTypes": [],
        "image": null
      }
    ],
    "pwm": [
      {
        "id": "dimmable_led",
        "name": "dimmable_led",
        "description": "",
        "category": "pwm",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "piezo_buzzer",
        "name": "piezo_buzzer",
        "description": "",
        "category": "pwm",
        "dataTypes": [],
        "image": null
      },
      {
        "id": "rgb_led",
        "name": "rgb_led",
        "description": "",
        "category": "pwm",
        "dataTypes": [],
        "image": null
      }
    ],
    "servo": [
      {
        "id": "servo",
        "name": "servo",
        "description": "",
        "category": "servo",
        "dataTypes": [],
        "image": null
      }
    ],
    "uart": [
      {
        "id": "pm1006",
        "name": "pm1006",
        "description": "",
        "category": "uart",
        "dataTypes": [],
        "image": "components/uart/pm1006/image.png"
      },
      {
        "id": "pms5003",
        "name": "pms5003",
        "description": "",
        "category": "uart",
        "dataTypes": [],
        "image": null
      }
    ],
    "ds18x20_metadata": {
      "title": "DS18X20 Component Definition",
      "description": "A DS18X20 WipperSnapper component for use in Adafruit IO",
      "required": [
        "displayName",
        "vendor",
        "subcomponents",
        "sensorResolution"
      ],
      "properties": {
        "displayName": {
          "description": "The human-friendly name of this component.",
          "type": "string",
          "minLength": 3,
          "maxLength": 30
        },
        "published": {
          "description": "If true, this component is supported by the current firmware version and will be displayed to all users. If false, it is hidden behind a developer toggle so that contributors can still work on it against the production site.",
          "type": "boolean"
        },
        "description": {
          "description": "A brief description describing this component's capabilities.",
          "type": "string",
          "minLength": 3,
          "maxLength": 255
        },
        "productURL": {
          "description": "Link to this component's homepage.",
          "type": "string",
          "format": "uri"
        },
        "documentationURL": {
          "description": "Link to this component's documentation.",
          "type": "string",
          "format": "uri"
        },
        "vendor": {
          "description": "Name of the company that makes this component.",
          "type": "string",
          "minLength": 3,
          "maxLength": 24
        },
        "subcomponents": {
          "description": "The ambient temperature sensor (and its fahrenheit counterpart) standard on DS18X20 Components",
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^ambient-temp(-fahrenheit)?$"
          }
        },
        "sensorResolution": {
          "description": "The DS18X20's desired sensor read resolution, in bits.",
          "type": "number",
          "minimum": 9,
          "maximum": 12
        }
      }
    },
    "i2c_metadata": {
      "title": "I2C Component Definition",
      "description": "An I2C-based WipperSnapper component for use in Adafruit IO",
      "required": [
        "displayName",
        "vendor",
        "i2cAddresses",
        "subcomponents"
      ],
      "properties": {
        "displayName": {
          "description": "The human-friendly name of this component.",
          "type": "string",
          "minLength": 3,
          "maxLength": 24
        },
        "published": {
          "description": "If true, this component is supported by the current firmware version and will be displayed to all users. If false, it is hidden behind a developer toggle so that contributors can still work on it against the production site.",
          "type": "boolean"
        },
        "description": {
          "description": "A brief description describing this component's capabilities.",
          "type": "string",
          "minLength": 3,
          "maxLength": 255
        },
        "productURL": {
          "description": "Link to this component's homepage.",
          "type": "string",
          "format": "uri"
        },
        "documentationURL": {
          "description": "Link to this component's documentation.",
          "type": "string",
          "format": "uri"
        },
        "vendor": {
          "description": "Name of the company that makes this component.",
          "type": "string",
          "minLength": 3,
          "maxLength": 24
        },
        "i2cAddresses": {
          "description": "List of I2C addresses (as hex string, like \"0x38\") this component can appear on.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subcomponents": {
          "description": "List of sensors on this I2C component.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/subcomponent"
          }
        }
      }
    },
    "pin_metadata": {
      "title": "Pin Component Definition",
      "description": "A pin-based WipperSnapper component for use in Adafruit IO",
      "required": [
        "displayName",
        "vendor",
        "mode",
        "direction"
      ],
      "properties": {
        "displayName": {
          "description": "The human-friendly name of this component.",
          "type": "string",
          "minLength": 3,
          "maxLength": 24
        },
        "published": {
          "description": "If true, this component is supported by the current firmware version and will be displayed to all users. If false, it is hidden behind a developer toggle so that contributors can still work on it against the production site.",
          "type": "boolean"
        },
        "description": {
          "description": "A brief description describing this component's capabilities.",
          "type": "string",
          "minLength": 3,
          "maxLength": 255
        },
        "productURL": {
          "description": "Link to this component's homepage.",
          "type": "string",
          "format": "uri"
        },
        "documentationURL": {
          "description": "Link to this component's documentation.",
          "type": "string",
          "format": "uri"
        },
        "vendor": {
          "description": "Name of the company that makes this component.",
          "type": "string",
          "minLength": 3,
          "maxLength": 24
        },
        "mode": {
          "description": "This component's mode, either DIGITAL or ANALOG.",
          "type": "string",
          "pattern": "^(DIGITAL|ANALOG)$"
        },
        "direction": {
          "description": "This component's direction, either INPUT or OUTPUT.",
          "type": "string",
          "pattern": "^(INPUT|OUTPUT)$"
        },
        "autoSelectString": {
          "description": "A hint for automatically looking up pin names that may be appropriate for this kind of component.",
          "type": "string",
          "minLength": 3,
          "maxLength": 24
        },
        "selectPullUp": {
          "description": "If true, the user will be able to select pull up or down options.",
          "type": "boolean"
        },
        "pull": {
          "description": "This component's pull setting, either UP or DOWN.",
          "type": "string",
          "pattern": "^(UP|DOWN)$"
        },
        "selectReadMode": {
          "description": "If true, the user will be able to select the read mode between pin and voltage options.",
          "type": "boolean"
        },
        "analogReadMode": {
          "description": "For ANALOG mode components, specifies whether to read values (PIN_VALUE) or voltages (PIN_VOLTAGE). Will be a default if `selectReadMode` option is true.",
          "type": "string",
          "pattern": "^(PIN_VALUE|PIN_VOLTAGE)$"
        },
        "defaultPeriod": {
          "description": "If present, the component form will allow the user to set its period, with this value as the default (in seconds)",
          "type": "number",
          "minimum": 30,
          "maximum": 86400
        },
        "forceOnPeriod": {
          "description": "If true, the user must specify a period (won't be optional in the form).",
          "type": "boolean"
        },
        "visualization": {
          "description": "Specifies which visual component to use in the WipperSnapper interface and how to configure it",
          "type": "object",
          "discriminator": {
            "propertyName": "type"
          },
          "required": [
            "type"
          ],
          "oneOf": [
            {
              "properties": {
                "type": {
                  "const": "switch"
                },
                "offLabel": {
                  "type": "string"
                },
                "offIcon": {
                  "type": "string"
                },
                "onLabel": {
                  "type": "string"
                },
                "onIcon": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            {
              "properties": {
                "type": {
                  "const": "button"
                },
                "pressedLabel": {
                  "type": "string"
                },
                "unpressedLabel": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            {
              "properties": {
                "type": {
                  "const": "slider"
                }
              },
              "additionalProperties": false
            }
          ]
        }
      }
    },
    "pixel_metadata": {
      "title": "Pixel Component Definition",
      "description": "Addressable Pixel WipperSnapper component for use in Adafruit IO",
      "required": [
        "displayName",
        "vendor",
        "pixelsType",
        "defaultPixelsOrder"
      ],
      "properties": {
        "displayName": {
          "description": "The human-friendly name of this component.",
          "type": "string",
          "minLength": 3,
          "maxLength": 24
        },
        "published": {
          "description": "If True, this component is supported by the current firmware version and will be displayed to all users. Otherwise, it is hidden behind a developer toggle so that contributors can still work on it against the production site.",
          "type": "boolean"
        },
        "description": {
          "description": "A brief description describing this component's capabilities.",
          "type": "string",
          "minLength": 3,
          "maxLength": 255
        },
        "productURL": {
          "description": "Link to this component's homepage.",
          "type": "string",
          "format": "uri"
        },
        "documentationURL": {
          "description": "Link to this component's documentation.",
          "type": "string",
          "format": "uri"
        },
        "vendor": {
          "description": "Name of the company that makes this component.",
          "type": "string",
          "minLength": 3,
          "maxLength": 24
        },
        "pixelsType": {
          "description": "The type of addressable pixel: NEOPIXEL or DOTSTAR. Corresponds to `PixelsType` in pixels.proto",
          "type": "string",
          "pattern": "^(NEOPIXEL|DOTSTAR)$"
        },
        "defaultPixelsOrder": {
          "description": "The pixel strand's color ordering. Corresponds to `PixelsOrder` in pixels.proto.",
          "type": "string",
          "pattern": "^(GRB|GRBW|RGB|RGBW|BRG)$"
        },
        "autoSelectString": {
          "description": "A hint for automatically looking up pin names that may be appropriate for this kind of component.",
          "type": "string",
          "minLength": 3,
          "maxLength": 24
        }
      }
    },
    "pwm_metadata": {
      "title": "PWM Component Definition",
      "description": "A PWM WipperSnapper component for use in Adafruit IO",
      "required": [
        "displayName",
        "vendor",
        "pwmSetting"
      ],
      "properties": {
        "displayName": {
          "description": "The human-friendly name of this component.",
          "type": "string",
          "minLength": 3,
          "maxLength": 24
        },
        "published": {
          "description": "If true, this component is supported by the current firmware version and will be displayed to all users. If false, it is hidden behind a developer toggle so that contributors can still work on it against the production site.",
          "type": "boolean"
        },
        "description": {
          "description": "A brief description describing this component's capabilities.",
          "type": "string",
          "minLength": 3,
          "maxLength": 255
        },
        "productURL": {
          "description": "Link to this component's homepage.",
          "type": "string",
          "format": "uri"
        },
        "documentationURL": {
          "description": "Link to this component's documentation.",
          "type": "string",
          "format": "uri"
        },
        "vendor": {
          "description": "Name of the company that makes this component.",
          "type": "string",
          "minLength": 3,
          "maxLength": 24
        },
        "pwmSetting": {
          "description": "The component's pulse-width modulation setting. Either fixed frequency (variable duty cycle) or variable frequency (fixed duty cycle)",
          "type": "string",
          "pattern": "^(fixed|variable)Frequency$"
        },
        "visualization": {
          "description": "Specifies which visual component to use in the WipperSnapper interface and how to configure it",
          "type": "object",
          "discriminator": {
            "propertyName": "type"
          },
          "required": [
            "type"
          ],
          "oneOf": [
            {
              "properties": {
                "type": {
                  "const": "switch-pwm"
                },
                "offLabel": {
                  "type": "string"
                },
                "offIcon": {
                  "type": "string"
                },
                "onLabel": {
                  "type": "string"
                },
                "onIcon": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            {
              "properties": {
                "type": {
                  "const": "button"
                },
                "pressedLabel": {
                  "type": "string"
                },
                "unpressedLabel": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            {
              "properties": {
                "type": {
                  "const": "slider-pwm"
                }
              },
              "additionalProperties": false
            },
            {
              "properties": {
                "type": {
                  "const": "color-picker"
                }
              },
              "additionalProperties": false
            }
          ]
        }
      }
    },
    "servo_metadata": {
      "title": "Servo Component Definition",
      "description": "A servo motor WipperSnapper component for use in Adafruit IO",
      "required": [
        "displayName",
        "vendor",
        "frequency",
        "minPulseWidth",
        "maxPulseWidth"
      ],
      "properties": {
        "displayName": {
          "description": "The human-friendly name of the servo component.",
          "type": "string",
          "minLength": 3,
          "maxLength": 24
        },
        "published": {
          "description": "If true, this component is supported by the current firmware version and will be displayed to all users. If false, it is hidden behind a developer toggle so that contributors can still work on it against the production site.",
          "type": "boolean"
        },
        "description": {
          "description": "A brief description describing this component's capabilities.",
          "type": "string",
          "minLength": 3,
          "maxLength": 255
        },
        "productURL": {
          "description": "Link to this component's homepage.",
          "type": "string",
          "format": "uri"
        },
        "documentationURL": {
          "description": "Link to this component's documentation.",
          "type": "string",
          "format": "uri"
        },
        "vendor": {
          "description": "Name of the company that makes this component.",
          "type": "string",
          "minLength": 3,
          "maxLength": 24
        },
        "frequency": {
          "description": "The desired frequency of the PWM signal, in Hz.",
          "type": "number",
          "default": 50,
          "minimum": 40,
          "maximum": 200
        },
        "minPulseWidth": {
          "description": "The minimum pulse width of the servo, in uS.",
          "type": "number"
        },
        "maxPulseWidth": {
          "description": "The maximum pulse width of the servo, in uS.",
          "type": "number"
        },
        "visualization": {
          "description": "Specifies the servo's specific visualization.",
          "type": "object",
          "required": [
            "type"
          ],
          "additionalProperties": false,
          "properties": {
            "type": {
              "const": "slider-servo"
            }
          }
        }
      }
    },
    "uart_metadata": {
      "title": "UART Component Definition",
      "description": "A UART WipperSnapper component for use in Adafruit IO",
      "required": [
        "displayName",
        "vendor",
        "subcomponents",
        "baudRate"
      ],
      "properties": {
        "displayName": {
          "description": "The human-friendly name of this component.",
          "type": "string",
          "minLength": 3,
          "maxLength": 30
        },
        "published": {
          "description": "If True, this component is supported by the current firmware version and will be displayed to all users. Otherwise, it is hidden behind a developer toggle so that contributors can still work on it against the production site.",
          "type": "boolean"
        },
        "description": {
          "description": "A brief description describing this component's capabilities.",
          "type": "string",
          "minLength": 3,
          "maxLength": 255
        },
        "productURL": {
          "description": "Link to this component's homepage.",
          "type": "string",
          "format": "uri"
        },
        "documentationURL": {
          "description": "Link to this component's documentation.",
          "type": "string",
          "format": "uri"
        },
        "vendor": {
          "description": "Name of the company that makes this component.",
          "type": "string",
          "minLength": 3,
          "maxLength": 24
        },
        "subcomponents": {
          "description": "List of sensor subcomponents comprising the primary UART component.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/subcomponent"
          }
        },
        "baudRate": {
          "description": "The desired UART bus baud rate, in bps.",
          "type": "number",
          "minimum": 1200,
          "maximum": 256000
        },
        "inverted": {
          "description": "When True, this component will invert TX/RX signals on the UART bus.",
          "type": "boolean"
        }
      }
    }
  }
}