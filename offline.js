const BOARDS_JSON_URL="https://raw.githubusercontent.com/tyeth/Adafruit_Wippersnapper_Offline_Configurator/refs/heads/main/wippersnapper_boards.json",COMPONENTS_JSON_URL="https://raw.githubusercontent.com/tyeth/Adafruit_Wippersnapper_Offline_Configurator/refs/heads/main/wippersnapper_components.json",appState={boardsData:null,componentsData:null,isLoading:!1,loadError:null,selectedBoard:null,companionBoard:null,sdCardCS:null,rtcType:"soft",statusLEDBrightness:.5,i2cBuses:[],i2cMultiplexers:[],selectedComponents:[],usedPins:new Set,nextComponentId:1};async function loadWippersnapperData(){try{appState.isLoading=!0,console.log("Loading Wippersnapper data from local file copy");const e=document.createElement("script");e.id="jsonBoardObject",e.src="wippersnapper_boards.js",document.body.appendChild(e),console.log("Loaded boards data from local file copy");const a=document.createElement("script");a.id="jsonComponentsObject",a.src="wippersnapper_components.js",document.body.appendChild(a),console.log("Loaded components data from local file copy"),await new Promise(e=>setTimeout(e,1e3));const s=window.jsonBoardObject,t=window.jsonComponentsObject;return appState.boardsData=s.boards,appState.componentsData=t.components,document.body.removeChild(a),document.body.removeChild(e),appState.componentsData.i2c&&(appState.componentsData.i2c.push({id:"pca9546",name:"PCA9546 I2C Multiplexer",address:"0x70",addresses:["0x70","0x71","0x72","0x73","0x74","0x75","0x76","0x77"],dataTypes:[],channels:4}),appState.componentsData.i2c.push({id:"pca9548",name:"PCA9548 I2C Multiplexer",address:"0x70",addresses:["0x70","0x71","0x72","0x73","0x74","0x75","0x76","0x77"],dataTypes:[],channels:8}),appState.componentsData.i2c.push({id:"tca9546",name:"TCA9546 I2C Multiplexer",address:"0x70",addresses:["0x70","0x71","0x72","0x73","0x74","0x75","0x76","0x77"],dataTypes:[],channels:4}),appState.componentsData.i2c.push({id:"tca9548",name:"TCA9548 I2C Multiplexer",address:"0x70",addresses:["0x70","0x71","0x72","0x73","0x74","0x75","0x76","0x77"],dataTypes:[],channels:8})),initializeUI(),console.log("Successfully loaded Wippersnapper data",{boards:Object.keys(appState.boardsData).length,components:Object.keys(appState.componentsData).filter(e=>!e.endsWith("_metadata")).reduce((e,a)=>e+appState.componentsData[a].length,0)}),appState.isLoading=!1,!0}catch(e){return console.error("Error loading Wippersnapper data:",e),appState.loadError=e.message,appState.isLoading=!1,showLoadError(e.message),!1}}function initializeUI(){populateBoardSelect(),attachEventListeners()}function populateBoardSelect(){const e=document.getElementById("board-select");e.innerHTML="<option value=\"\">-- Select a Board --</option>";const a=Object.entries(appState.boardsData).filter(([e,a])=>["uf2","web-native-usb"].includes(a.installMethod)),s=a.sort((e,a)=>{const s=e[1].vendor||"",t=a[1].vendor||"";return s===t?e[1].displayName.localeCompare(a[1].displayName):s.localeCompare(t)}),t={};s.forEach(([e,a])=>{const s=a.vendor||"Other";t[s]||(t[s]=[]),t[s].push([e,a])}),Object.entries(t).forEach(([a,s])=>{const t=document.createElement("optgroup");t.label=a,s.forEach(([e,a])=>{const s=document.createElement("option");s.value=e,s.textContent=a.displayName,t.appendChild(s)}),e.appendChild(t)})}function convertBoardDataToConfig(e){const a=appState.boardsData[e];if(!a)return null;const s=a.pins.map(e=>e.number).filter(e=>!isNaN(e)),t={referenceVoltage:a.referenceVoltage,totalGPIOPins:a.totalGPIOPins,totalAnalogPins:a.totalAnalogPins||0,defaultI2C:{scl:a.defaultI2C.SCL,sda:a.defaultI2C.SDA},pins:s,displayName:a.displayName,image:a.image};return t}function convertComponentsDataToConfig(){const e={i2c:[],ds18x20:[],pin:[],pixel:[],pwm:[],servo:[],uart:[]};return appState.componentsData.i2c&&appState.componentsData.i2c.forEach(a=>{e.i2c.push({id:a.id,name:a.name,address:a.address||"0x00",addresses:a.addresses||[a.address||"0x00"],dataTypes:a.dataTypes||[],channels:a.channels||0})}),appState.componentsData.ds18x20&&appState.componentsData.ds18x20.forEach(a=>{e.ds18x20.push({id:a.id,name:a.name,dataTypes:a.dataTypes||[]})}),appState.componentsData.pin&&appState.componentsData.pin.forEach(a=>{e.pin.push({id:a.id,name:a.name,dataTypes:a.dataTypes||[]})}),appState.componentsData.pixel&&appState.componentsData.pixel.forEach(a=>{e.pixel.push({id:a.id,name:a.name,dataTypes:a.dataTypes||[]})}),appState.componentsData.pwm&&appState.componentsData.pwm.forEach(a=>{e.pwm.push({id:a.id,name:a.name,dataTypes:a.dataTypes||[]})}),appState.componentsData.servo&&appState.componentsData.servo.forEach(a=>{e.servo.push({id:a.id,name:a.name,dataTypes:a.dataTypes||[]})}),appState.componentsData.uart&&appState.componentsData.uart.forEach(a=>{e.uart.push({id:a.id,name:a.name,dataTypes:a.dataTypes||[]})}),e}function attachEventListeners(){document.getElementById("board-select").addEventListener("change",function(){const e=this.value;if(!e)return document.getElementById("board-details").classList.add("hidden"),void hideSubsequentSections();const a=convertBoardDataToConfig(e);appState.selectedBoard={id:e,...a},document.getElementById("ref-voltage").textContent=a.referenceVoltage,document.getElementById("total-gpio").textContent=a.totalGPIOPins,document.getElementById("total-analog").textContent=a.totalAnalogPins,document.getElementById("default-scl").textContent=a.defaultI2C.scl,document.getElementById("default-sda").textContent=a.defaultI2C.sda,document.getElementById("board-details").classList.remove("hidden");const s=document.getElementById("board-image");s&&(a.image?(s.src=a.image.startsWith("http")?a.image:"https://raw.githubusercontent.com/adafruit/Wippersnapper_Boards/refs/heads/main/"+a.image,s.classList.remove("hidden")):s.classList.add("hidden")),appState.i2cBuses=[{id:"default",scl:a.defaultI2C.scl,sda:a.defaultI2C.sda}],document.getElementById("default-i2c-scl").textContent=a.defaultI2C.scl,document.getElementById("default-i2c-sda").textContent=a.defaultI2C.sda,appState.usedPins.add(a.defaultI2C.scl),appState.usedPins.add(a.defaultI2C.sda),document.getElementById("companion-board-section").classList.remove("hidden"),resetSubsequentSelections(),initializeManualConfig(),populatePinsLists();const t=convertComponentsDataToConfig();populateComponentLists(t)})}function showLoadError(e){let a=document.getElementById("load-error");a||(a=document.createElement("div"),a.id="load-error",a.style.backgroundColor="#ffdddd",a.style.color="#cc0000",a.style.padding="15px",a.style.margin="15px 0",a.style.borderRadius="5px",document.body.insertBefore(a,document.body.firstChild)),a.innerHTML=`
        <h3>Error Loading Data</h3>
        <p>${e}</p>
        <p>Please check that the JSON files are available and properly formatted.</p>
        <button onclick="retryLoading()">Retry</button>
    `}function retryLoading(){const e=document.getElementById("load-error");e&&e.remove(),loadWippersnapperData()}document.addEventListener("DOMContentLoaded",function(){loadWippersnapperData()});window.jsonBoardObject={boards:{"feather-esp32":{boardName:"feather-esp32",mcuName:"ESP32",referenceVoltage:3.3,displayName:"Adafruit Feather HUZZAH ESP32",vendor:"Adafruit",productURL:"https://www.adafruit.com/product/3405",documentationURL:"https://learn.adafruit.com/adafruit-huzzah32-esp32-feather",installMethod:"web",pins:[{number:13,name:"D13",displayName:"D13 (LED BUILT-IN)",hasPWM:!0,hasServo:!1},{number:12,name:"D12",displayName:"D12",hasPWM:!0,hasServo:!0},{number:27,name:"D27",displayName:"D27",hasPWM:!0,hasServo:!0},{number:33,name:"D33",displayName:"D33",hasPWM:!0,hasServo:!0},{number:15,name:"D15",displayName:"D15",hasPWM:!0,hasServo:!0},{number:32,name:"D32",displayName:"D32",hasPWM:!0,hasServo:!0},{number:14,name:"D14",displayName:"D14",hasPWM:!0,hasServo:!0},{number:26,name:"D26",displayName:"D26 (A0)",hasPWM:!0,hasServo:!0},{number:25,name:"D25",displayName:"D25 (A1)",hasPWM:!0,hasServo:!0},{number:34,name:"D34",displayName:"D34 (A2)",hasPWM:!1,hasServo:!1},{number:39,name:"D39",displayName:"D39 (A3)",hasPWM:!1,hasServo:!1},{number:36,name:"D36",displayName:"D36 (A4)",hasPWM:!1,hasServo:!1},{number:4,name:"D4",displayName:"D4 (A5)",hasPWM:!0,hasServo:!0},{number:16,name:"D16",displayName:"D16 (UART RX)",hasPWM:!1,hasServo:!1},{number:17,name:"D17",displayName:"D17 (UART TX)",hasPWM:!1,hasServo:!1}],analogPins:[{name:"A26",displayName:"A0",direction:"INPUT"},{name:"A25",displayName:"A1",direction:"INPUT"},{name:"A34",displayName:"A2",direction:"INPUT"},{name:"A39",displayName:"A3",direction:"INPUT"},{name:"A36",displayName:"A4",direction:"INPUT"},{name:"A4",displayName:"A5",direction:"INPUT"},{name:"A14",displayName:"A6",direction:"INPUT"},{name:"A32",displayName:"A7",direction:"INPUT"},{name:"A15",displayName:"A8",direction:"INPUT"},{name:"A33",displayName:"A9",direction:"INPUT"},{name:"A27",displayName:"A10",direction:"INPUT"},{name:"A12",displayName:"A11",direction:"INPUT"},{name:"A13",displayName:"A12",direction:"INPUT"},{name:"A35",displayName:"A13 (VBAT)",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:22,SDA:23},image:"boards/feather-esp32/image.svg",totalAnalogPins:14,i2cPorts:[{i2cPortId:0,SDA:23,SCL:22}],totalGPIOPins:15},"feather-esp32-v2":{boardName:"feather-esp32-v2",mcuName:"ESP32",referenceVoltage:3.3,displayName:"Adafruit Feather ESP32 V2",vendor:"Adafruit",productURL:"https://www.adafruit.com/product/5400",documentationURL:"https://learn.adafruit.com/adafruit-esp32-feather-v2",installMethod:"web",pins:[{number:0,name:"D0",displayName:"D0 (NeoPixel)",hasPWM:!1,hasServo:!1},{number:7,name:"D7",displayName:"D7 (UART RX)",hasPWM:!1,hasServo:!1},{number:8,name:"D8",displayName:"D8 (UART TX)",hasPWM:!1,hasServo:!1},{number:13,name:"D13",displayName:"D13 (LED BUILT-IN)",hasPWM:!0,hasServo:!1},{number:12,name:"D12",displayName:"D12",hasPWM:!0,hasServo:!0},{number:27,name:"D27",displayName:"D27",hasPWM:!0,hasServo:!0},{number:33,name:"D33",displayName:"D33",hasPWM:!0,hasServo:!0},{number:15,name:"D15",displayName:"D15",hasPWM:!0,hasServo:!0},{number:32,name:"D32",displayName:"D32",hasPWM:!0,hasServo:!0},{number:14,name:"D14",displayName:"D14",hasPWM:!0,hasServo:!0},{number:26,name:"D26",displayName:"D26 (A0)",hasPWM:!0,hasServo:!0},{number:25,name:"D25",displayName:"D25 (A1)",hasPWM:!0,hasServo:!0},{number:34,name:"D34",displayName:"D34 (A2)",hasPWM:!0,hasServo:!0},{number:39,name:"D39",displayName:"D39 (A3)",hasPWM:!0,hasServo:!0},{number:36,name:"D36",displayName:"D36 (A4)",hasPWM:!0,hasServo:!0},{number:4,name:"D4",displayName:"D4 (A5)",hasPWM:!0,hasServo:!0},{number:5,name:"D5",displayName:"D5 (SCK)",hasPWM:!0,hasServo:!0},{number:19,name:"D19",displayName:"D19 (MOSI)",hasPWM:!0,hasServo:!0},{number:21,name:"D21",displayName:"D21 (MISO)",hasPWM:!0,hasServo:!0},{number:37,name:"D37",displayName:"D37",hasPWM:!1,hasServo:!1},{number:38,name:"D38",displayName:"Button Switch (SW38)",hasPWM:!1,hasServo:!1}],analogPins:[{name:"A26",displayName:"A0",direction:"INPUT"},{name:"A25",displayName:"A1",direction:"INPUT"},{name:"A34",displayName:"A2",direction:"INPUT"},{name:"A39",displayName:"A3",direction:"INPUT"},{name:"A36",displayName:"A4",direction:"INPUT"},{name:"A4",displayName:"A5",direction:"INPUT"},{name:"A35",displayName:"VBat Monitor",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:20,SDA:22},image:"boards/feather-esp32-v2/image.svg",totalAnalogPins:7,i2cPorts:[{i2cPortId:0,SDA:22,SCL:20}],totalGPIOPins:21},"feather-esp32c6":{boardName:"feather-esp32c6",mcuName:"esp32c6",referenceVoltage:1.1,displayName:"Adafruit Feather ESP32-C6",vendor:"Adafruit",productURL:"https://www.adafruit.com/product/5933",documentationURL:"https://learn.adafruit.com/adafruit-esp32-c6-feather",installMethod:"web",pins:[{number:1,name:"D1",displayName:"IO1 (A0)",hasPWM:!0,hasServo:!0},{number:4,name:"D4",displayName:"IO4 (A1)",hasPWM:!0,hasServo:!0},{number:6,name:"D6",displayName:"IO6 (A2/D6)",hasPWM:!0,hasServo:!0},{number:5,name:"D5",displayName:"IO5 (A3/D5)",hasPWM:!0,hasServo:!0},{number:3,name:"D3",displayName:"IO3 (A4)",hasPWM:!0,hasServo:!0},{number:2,name:"D2",displayName:"IO2 (A5)",hasPWM:!0,hasServo:!0},{number:21,name:"D21",displayName:"IO21 (SCK)",hasPWM:!0,hasServo:!0},{number:22,name:"D22",displayName:"IO22 (MO)",hasPWM:!0,hasServo:!0},{number:23,name:"D23",displayName:"IO23 (MI)",hasPWM:!0,hasServo:!0},{number:17,name:"D17",displayName:"IO17 (UART RX)",hasPWM:!0,hasServo:!0},{number:16,name:"D16",displayName:"IO16 (UART TX)",hasPWM:!0,hasServo:!0},{number:9,name:"D9",displayName:"IO9 (NeoPixel)",hasPWM:!0,hasServo:!0},{number:15,name:"D15",displayName:"IO15 (LED)",hasPWM:!0,hasServo:!0},{number:14,name:"D14",displayName:"IO14",hasPWM:!0,hasServo:!0},{number:0,name:"D0",displayName:"IO0",hasPWM:!0,hasServo:!0},{number:8,name:"D8",displayName:"IO8",hasPWM:!0,hasServo:!0},{number:7,name:"D7",displayName:"IO7",hasPWM:!0,hasServo:!0},{number:18,name:"D18",displayName:"IO18 (SCL)",hasPWM:!0,hasServo:!0},{number:19,name:"D19",displayName:"IO19 (SDA)",hasPWM:!0,hasServo:!0},{number:20,name:"D20",displayName:"IO20 (I2C Power)",hasPWM:!0,hasServo:!0}],analogPins:[{name:"A1",displayName:"A0",direction:"INPUT"},{name:"A4",displayName:"A1",direction:"INPUT"},{name:"A6",displayName:"A2",direction:"INPUT"},{name:"A5",displayName:"A3",direction:"INPUT"},{name:"A3",displayName:"A4",direction:"INPUT"},{name:"A2",displayName:"A5",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:18,SDA:19},image:"boards/feather-esp32c6/image.png",totalAnalogPins:6,i2cPorts:[{i2cPortId:0,SDA:19,SCL:18}],totalGPIOPins:20},"feather-esp32s2":{boardName:"feather-esp32s2",mcuName:"esp32s2",referenceVoltage:2.6,displayName:"Adafruit ESP32-S2 Feather",vendor:"Adafruit",productURL:"https://www.adafruit.com/product/5000",documentationURL:"https://learn.adafruit.com/adafruit-esp32-s2-feather",installMethod:"uf2",pins:[{number:0,name:"D0",displayName:"D0 (Boot Push Button)",hasPWM:!1,hasServo:!1},{number:1,name:"D1",displayName:"D1",hasPWM:!0,hasServo:!0},{number:2,name:"D2",displayName:"D2",hasPWM:!0,hasServo:!0},{number:3,name:"D3",displayName:"D3",hasPWM:!0,hasServo:!0},{number:4,name:"D4",displayName:"D4",hasPWM:!0,hasServo:!0},{number:5,name:"D5",displayName:"D5",hasPWM:!0,hasServo:!0},{number:6,name:"D6",displayName:"D6",hasPWM:!0,hasServo:!0},{number:7,name:"D7",displayName:"D7 (I2C Power)",hasPWM:!1,hasServo:!1},{number:9,name:"D9",displayName:"D9",hasPWM:!0,hasServo:!0},{number:10,name:"D10",displayName:"D10",hasPWM:!0,hasServo:!0},{number:11,name:"D11",displayName:"D11",hasPWM:!0,hasServo:!0},{number:12,name:"D12",displayName:"D12",hasPWM:!0,hasServo:!0},{number:13,name:"D13",displayName:"D13 (LED)",hasPWM:!0,hasServo:!1},{number:33,name:"D33",displayName:"D33 (NeoPixel)",hasPWM:!1,hasServo:!1},{number:38,name:"D38",displayName:"D38 (UART RX)",hasPWM:!1,hasServo:!1},{number:39,name:"D39",displayName:"D39 (UART TX)",hasPWM:!1,hasServo:!1}],analogPins:[{name:"A18",displayName:"A0",direction:"INPUT"},{name:"A17",displayName:"A1",direction:"INPUT"},{name:"A16",displayName:"A2",direction:"INPUT"},{name:"A15",displayName:"A3",direction:"INPUT"},{name:"A14",displayName:"A4",direction:"INPUT"},{name:"A8",displayName:"A5",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:4,SDA:3},image:"boards/feather-esp32s2/image.png",totalAnalogPins:6,i2cPorts:[{i2cPortId:0,SDA:3,SCL:4}],totalGPIOPins:16},"feather-esp32s2-reverse-tft":{boardName:"feather-esp32s2-reverse-tft",mcuName:"esp32s2",referenceVoltage:2.6,displayName:"ESP32-S2 Reverse TFT Feather",vendor:"Adafruit",productURL:"https://www.adafruit.com/product/5345",documentationURL:"https://learn.adafruit.com/esp32-s2-reverse-tft-feather",installMethod:"uf2",pins:[{number:0,name:"D0",displayName:"D0 (Boot Push Button)",hasPWM:!1,hasServo:!1},{number:1,name:"D1",displayName:"D1 Push Button",hasPWM:!1,hasServo:!1},{number:2,name:"D2",displayName:"D2 Push Button",hasPWM:!1,hasServo:!1},{number:5,name:"D5",displayName:"D5",hasPWM:!0,hasServo:!0},{number:6,name:"D6",displayName:"D6",hasPWM:!0,hasServo:!0},{number:9,name:"D9",displayName:"D9",hasPWM:!0,hasServo:!0},{number:10,name:"D10",displayName:"D10",hasPWM:!0,hasServo:!0},{number:11,name:"D11",displayName:"D11",hasPWM:!0,hasServo:!0},{number:12,name:"D12",displayName:"D12",hasPWM:!0,hasServo:!0},{number:13,name:"D13",displayName:"D13 (LED)",hasPWM:!0,hasServo:!1},{number:33,name:"D33",displayName:"D33 (NeoPixel)",hasPWM:!1,hasServo:!1},{number:21,name:"D21",displayName:"D21 (NeoPixel Power Pin)",hasPWM:!1,hasServo:!1},{number:38,name:"D38",displayName:"D38 (UART RX)",hasPWM:!1,hasServo:!1},{number:39,name:"D39",displayName:"D39 (UART TX)",hasPWM:!1,hasServo:!1}],analogPins:[{name:"A18",displayName:"A0",direction:"INPUT"},{name:"A17",displayName:"A1",direction:"INPUT"},{name:"A16",displayName:"A2",direction:"INPUT"},{name:"A15",displayName:"A3",direction:"INPUT"},{name:"A14",displayName:"A4",direction:"INPUT"},{name:"A8",displayName:"A5",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:4,SDA:3},image:"boards/feather-esp32s2-reverse-tft/image.svg",totalAnalogPins:6,i2cPorts:[{i2cPortId:0,SDA:3,SCL:4}],totalGPIOPins:14},"feather-esp32s2-tft":{boardName:"feather-esp32s2-tft",mcuName:"esp32s2",referenceVoltage:2.6,displayName:"Adafruit ESP32-S2 TFT Feather",vendor:"Adafruit",productURL:"https://www.adafruit.com/product/5300",documentationURL:"https://learn.adafruit.com/adafruit-esp32-s2-tft-feather",installMethod:"uf2",pins:[{number:0,name:"D0",displayName:"D0 (Boot Push Button)",hasPWM:!1,hasServo:!1},{number:1,name:"D1",displayName:"D1 (UART TX)",hasPWM:!0,hasServo:!0},{number:2,name:"D2",displayName:"D2 (UART RX)",hasPWM:!0,hasServo:!0},{number:3,name:"D3",displayName:"D3",hasPWM:!0,hasServo:!0},{number:4,name:"D4",displayName:"D4",hasPWM:!0,hasServo:!0},{number:5,name:"D5",displayName:"D5",hasPWM:!0,hasServo:!0},{number:6,name:"D6",displayName:"D6",hasPWM:!0,hasServo:!0},{number:9,name:"D9",displayName:"D9",hasPWM:!0,hasServo:!0},{number:10,name:"D10",displayName:"D10",hasPWM:!0,hasServo:!0},{number:11,name:"D11",displayName:"D11",hasPWM:!0,hasServo:!0},{number:12,name:"D12",displayName:"D12",hasPWM:!0,hasServo:!0},{number:13,name:"D13",displayName:"D13 (LED)",hasPWM:!0,hasServo:!1},{number:33,name:"D33",displayName:"D33 (NeoPixel)",hasPWM:!1,hasServo:!1},{number:38,name:"D38",displayName:"D38 (UART RX)",hasPWM:!1,hasServo:!1},{number:39,name:"D39",displayName:"D39 (UART TX)",hasPWM:!1,hasServo:!1}],analogPins:[{name:"A18",displayName:"A0",direction:"INPUT"},{name:"A17",displayName:"A1",direction:"INPUT"},{name:"A16",displayName:"A2",direction:"INPUT"},{name:"A15",displayName:"A3",direction:"INPUT"},{name:"A14",displayName:"A4",direction:"INPUT"},{name:"A8",displayName:"A5",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:41,SDA:42},image:"boards/feather-esp32s2-tft/image.svg",totalAnalogPins:6,i2cPorts:[{i2cPortId:0,SDA:42,SCL:41}],totalGPIOPins:15},"feather-esp32s3":{boardName:"feather-esp32s3",mcuName:"esp32s3",referenceVoltage:2.6,displayName:"Adafruit Feather ESP32-S3 No PSRAM",vendor:"Adafruit",productURL:"https://www.adafruit.com/product/5000",documentationURL:"https://learn.adafruit.com/adafruit-esp32-s3-feather",installMethod:"uf2",pins:[{number:0,name:"D0",displayName:"D0 (Boot Push Button)",hasPWM:!1,hasServo:!1},{number:1,name:"D1",displayName:"D1",hasPWM:!0,hasServo:!0},{number:2,name:"D2",displayName:"D2",hasPWM:!0,hasServo:!0},{number:3,name:"D3",displayName:"D3",hasPWM:!0,hasServo:!0},{number:4,name:"D4",displayName:"D4",hasPWM:!0,hasServo:!0},{number:5,name:"D5",displayName:"D5",hasPWM:!0,hasServo:!0},{number:6,name:"D6",displayName:"D6",hasPWM:!0,hasServo:!0},{number:7,name:"D7",displayName:"D7",hasPWM:!0,hasServo:!0},{number:8,name:"D8",displayName:"D8",hasPWM:!0,hasServo:!0},{number:9,name:"D9",displayName:"D9",hasPWM:!0,hasServo:!0},{number:10,name:"D10",displayName:"D10",hasPWM:!0,hasServo:!0},{number:11,name:"D11",displayName:"D11",hasPWM:!0,hasServo:!0},{number:12,name:"D12",displayName:"D12",hasPWM:!0,hasServo:!0},{number:13,name:"D13",displayName:"D13 (LED)",hasPWM:!0,hasServo:!0},{number:14,name:"D14",displayName:"D14",hasPWM:!0,hasServo:!0},{number:33,name:"D33",displayName:"D33 (NeoPixel)",hasPWM:!1,hasServo:!1},{number:38,name:"D38",displayName:"D38 (UART RX)",hasPWM:!1,hasServo:!1},{number:39,name:"D39",displayName:"D39 (UART TX)",hasPWM:!1,hasServo:!1}],analogPins:[{name:"A18",displayName:"A0",direction:"INPUT"},{name:"A17",displayName:"A1",direction:"INPUT"},{name:"A16",displayName:"A2",direction:"INPUT"},{name:"A15",displayName:"A3",direction:"INPUT"},{name:"A14",displayName:"A4",direction:"INPUT"},{name:"A8",displayName:"A5",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:4,SDA:3},image:"boards/feather-esp32s3/image.svg",totalAnalogPins:6,i2cPorts:[{i2cPortId:0,SDA:3,SCL:4}],totalGPIOPins:18},"feather-esp32s3-4mbflash-2mbpsram":{boardName:"feather-esp32s3-4mbflash-2mbpsram",mcuName:"esp32s3",referenceVoltage:2.6,displayName:"Adafruit ESP32-S3 Feather with 4MB Flash 2MB PSRAM",vendor:"Adafruit",productURL:"https://www.adafruit.com/product/5477",documentationURL:"https://learn.adafruit.com/adafruit-esp32-s3-feather",installMethod:"uf2",pins:[{number:0,name:"D0",displayName:"D0 (Boot Push Button)",hasPWM:!1,hasServo:!1},{number:1,name:"D1",displayName:"D1",hasPWM:!0,hasServo:!0},{number:2,name:"D2",displayName:"D2",hasPWM:!0,hasServo:!0},{number:3,name:"D3",displayName:"D3",hasPWM:!0,hasServo:!0},{number:4,name:"D4",displayName:"D4",hasPWM:!0,hasServo:!0},{number:5,name:"D5",displayName:"D5",hasPWM:!0,hasServo:!0},{number:6,name:"D6",displayName:"D6",hasPWM:!0,hasServo:!0},{number:7,name:"D7",displayName:"D7",hasPWM:!0,hasServo:!0},{number:8,name:"D8",displayName:"D8",hasPWM:!0,hasServo:!0},{number:9,name:"D9",displayName:"D9",hasPWM:!0,hasServo:!0},{number:10,name:"D10",displayName:"D10",hasPWM:!0,hasServo:!0},{number:11,name:"D11",displayName:"D11",hasPWM:!0,hasServo:!0},{number:12,name:"D12",displayName:"D12",hasPWM:!0,hasServo:!0},{number:13,name:"D13",displayName:"D13 (LED)",hasPWM:!0,hasServo:!1},{number:14,name:"D14",displayName:"D14",hasPWM:!0,hasServo:!0},{number:33,name:"D33",displayName:"D33 (NeoPixel)",hasPWM:!1,hasServo:!1},{number:38,name:"D38",displayName:"D38 (UART RX)",hasPWM:!1,hasServo:!1},{number:39,name:"D39",displayName:"D39 (UART TX)",hasPWM:!1,hasServo:!1}],analogPins:[{name:"A18",displayName:"A0",direction:"INPUT"},{name:"A17",displayName:"A1",direction:"INPUT"},{name:"A16",displayName:"A2",direction:"INPUT"},{name:"A15",displayName:"A3",direction:"INPUT"},{name:"A14",displayName:"A4",direction:"INPUT"},{name:"A8",displayName:"A5",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:4,SDA:3},image:"boards/feather-esp32s3-4mbflash-2mbpsram/image.svg",totalAnalogPins:6,i2cPorts:[{i2cPortId:0,SDA:3,SCL:4}],totalGPIOPins:18},"feather-esp32s3-reverse-tft":{boardName:"feather-esp32s3-reverse-tft",mcuName:"esp32s3",referenceVoltage:2.6,displayName:"ESP32-S3 Reverse TFT Feather",vendor:"Adafruit",productURL:"https://www.adafruit.com/product/5691",documentationURL:"https://learn.adafruit.com/esp32-s3-reverse-tft-feather",installMethod:"uf2",pins:[{number:0,name:"D0",displayName:"D0 (Boot Push Button)",hasPWM:!1,hasServo:!1},{number:1,name:"D1",displayName:"D1 Push Button",hasPWM:!1,hasServo:!1},{number:2,name:"D2",displayName:"D2 Push Button",hasPWM:!1,hasServo:!1},{number:5,name:"D5",displayName:"D5",hasPWM:!0,hasServo:!0},{number:6,name:"D6",displayName:"D6",hasPWM:!0,hasServo:!0},{number:9,name:"D9",displayName:"D9",hasPWM:!0,hasServo:!0},{number:10,name:"D10",displayName:"D10",hasPWM:!0,hasServo:!0},{number:11,name:"D11",displayName:"D11",hasPWM:!0,hasServo:!0},{number:12,name:"D12",displayName:"D12",hasPWM:!0,hasServo:!0},{number:13,name:"D13",displayName:"D13 (LED)",hasPWM:!0,hasServo:!1},{number:33,name:"D33",displayName:"D33 (NeoPixel)",hasPWM:!1,hasServo:!1},{number:38,name:"D38",displayName:"D38 (UART RX)",hasPWM:!1,hasServo:!1},{number:39,name:"D39",displayName:"D39 (UART TX)",hasPWM:!1,hasServo:!1}],analogPins:[{name:"A18",displayName:"A0",direction:"INPUT"},{name:"A17",displayName:"A1",direction:"INPUT"},{name:"A16",displayName:"A2",direction:"INPUT"},{name:"A15",displayName:"A3",direction:"INPUT"},{name:"A14",displayName:"A4",direction:"INPUT"},{name:"A8",displayName:"A5",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:4,SDA:3},image:"boards/feather-esp32s3-reverse-tft/image.svg",totalAnalogPins:6,i2cPorts:[{i2cPortId:0,SDA:3,SCL:4}],totalGPIOPins:13},"feather-esp32s3-tft":{boardName:"feather-esp32s3-tft",mcuName:"esp32s3",referenceVoltage:2.6,displayName:"Adafruit ESP32-S3 TFT Feather",vendor:"Adafruit",productURL:"https://www.adafruit.com/product/5483",documentationURL:"https://learn.adafruit.com/adafruit-esp32-s3-tft-feather",installMethod:"uf2",pins:[{number:0,name:"D0",displayName:"D0 (Boot Btn)",hasPWM:!1,hasServo:!1},{number:1,name:"D1",displayName:"D1 (UART TX)",hasPWM:!0,hasServo:!0},{number:2,name:"D2",displayName:"D2 (UART RX)",hasPWM:!0,hasServo:!0},{number:3,name:"D3",displayName:"D3",hasPWM:!0,hasServo:!0},{number:4,name:"D4",displayName:"D4",hasPWM:!0,hasServo:!0},{number:5,name:"D5",displayName:"D5",hasPWM:!0,hasServo:!0},{number:6,name:"D6",displayName:"D6",hasPWM:!0,hasServo:!0},{number:7,name:"D7",displayName:"D7",hasPWM:!0,hasServo:!0},{number:8,name:"D8",displayName:"D8",hasPWM:!0,hasServo:!0},{number:9,name:"D9",displayName:"D9",hasPWM:!0,hasServo:!0},{number:10,name:"D10",displayName:"D10",hasPWM:!0,hasServo:!0},{number:11,name:"D11",displayName:"D11",hasPWM:!0,hasServo:!0},{number:12,name:"D12",displayName:"D12",hasPWM:!0,hasServo:!0},{number:13,name:"D13",displayName:"D13 (LED)",hasPWM:!0,hasServo:!1},{number:14,name:"D14",displayName:"D14",hasPWM:!0,hasServo:!0},{number:33,name:"D33",displayName:"D33 (NeoPixel)",hasPWM:!1,hasServo:!1}],analogPins:[{name:"A18",displayName:"A0",direction:"INPUT"},{name:"A17",displayName:"A1",direction:"INPUT"},{name:"A16",displayName:"A2",direction:"INPUT"},{name:"A15",displayName:"A3",direction:"INPUT"},{name:"A14",displayName:"A4",direction:"INPUT"},{name:"A8",displayName:"A5",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:41,SDA:42},image:"boards/feather-esp32s3-tft/image.svg",totalAnalogPins:6,i2cPorts:[{i2cPortId:0,SDA:42,SCL:41}],totalGPIOPins:16},"feather-esp8266":{boardName:"feather-esp8266",mcuName:"esp8266",referenceVoltage:1.1,displayName:"Feather Huzzah ESP8266",vendor:"Adafruit",productURL:"https://www.adafruit.com/product/2821",documentationURL:"https://learn.adafruit.com/adafruit-feather-huzzah-esp8266",installMethod:"web",pins:[{number:0,name:"D0",displayName:"D0 (Red LED)",hasPWM:!0,hasServo:!1},{number:1,name:"D1",displayName:"D1",hasPWM:!0,hasServo:!0},{number:2,name:"D2",displayName:"D2 (Blue LED)",hasPWM:!0,hasServo:!1},{number:4,name:"D4",displayName:"D4",hasPWM:!0,hasServo:!0},{number:5,name:"D5",displayName:"D5",hasPWM:!0,hasServo:!0},{number:12,name:"D12",displayName:"D12 (UART RX)",hasPWM:!0,hasServo:!0},{number:13,name:"D13",displayName:"D13",hasPWM:!0,hasServo:!0},{number:14,name:"D14",displayName:"D14 (UART TX)",hasPWM:!0,hasServo:!0},{number:15,name:"D15",displayName:"D15",hasPWM:!0,hasServo:!0},{number:16,name:"D16",displayName:"D16 - Deep Sleep Wake Pin",hasPWM:!0,hasServo:!0}],analogPins:[{name:"A0",displayName:"A0",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:5,SDA:4},image:"boards/feather-esp8266/image.png",totalAnalogPins:1,i2cPorts:[{i2cPortId:0,SDA:4,SCL:5}],totalGPIOPins:10},funhouse:{boardName:"funhouse",mcuName:"esp32s2",referenceVoltage:2.6,displayName:"Adafruit Funhouse ESP32-S2",vendor:"Adafruit",productURL:"https://www.adafruit.com/product/4985",documentationURL:"https://learn.adafruit.com/adafruit-funhouse",installMethod:"web-native-usb",pins:[{number:5,name:"D5",displayName:"Button Up",hasPWM:!1,hasServo:!1},{number:3,name:"D3",displayName:"Button Down",hasPWM:!1,hasServo:!1},{number:4,name:"D4",displayName:"Button Select",hasPWM:!1,hasServo:!1},{number:17,name:"D17",displayName:"D17 (A0)",hasPWM:!0,hasServo:!0},{number:2,name:"D2",displayName:"D2 (A1)",hasPWM:!0,hasServo:!0},{number:1,name:"D1",displayName:"D1 (A2)",hasPWM:!0,hasServo:!0},{number:6,name:"D6",displayName:"D6",hasPWM:!1,hasServo:!1},{number:7,name:"D7",displayName:"D7",hasPWM:!1,hasServo:!1},{number:8,name:"D8",displayName:"D8",hasPWM:!1,hasServo:!1},{number:9,name:"D9",displayName:"D9",hasPWM:!1,hasServo:!1},{number:10,name:"D10",displayName:"D10",hasPWM:!1,hasServo:!1},{number:11,name:"D11",displayName:"D11",hasPWM:!1,hasServo:!1},{number:12,name:"D12",displayName:"D12",hasPWM:!1,hasServo:!1},{number:13,name:"D13",displayName:"D13",hasPWM:!1,hasServo:!1},{number:14,name:"D14",displayName:"D14 (DotStar Data)",hasPWM:!1,hasServo:!1},{number:15,name:"D15",displayName:"D15 (DotStar Clock)",hasPWM:!1,hasServo:!1},{number:16,name:"D16",displayName:"PIR Sensor",hasPWM:!1,hasServo:!1},{number:42,name:"D42",displayName:"Speaker/Piezo",hasPWM:!0,hasServo:!1},{number:44,name:"D44",displayName:"D44 (UART RX)",hasPWM:!1,hasServo:!1},{number:43,name:"D43",displayName:"D43 (UART TX)",hasPWM:!1,hasServo:!1}],analogPins:[{name:"A17",displayName:"A0",direction:"INPUT"},{name:"A2",displayName:"A1",direction:"INPUT"},{name:"A1",displayName:"A2",direction:"INPUT"},{name:"A18",displayName:"Light Sensor",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:33,SDA:34},image:"boards/funhouse/image.svg",totalAnalogPins:4,i2cPorts:[{i2cPortId:0,SDA:34,SCL:33}],totalGPIOPins:20},"itsybitsy-esp32":{boardName:"itsybitsy-esp32",mcuName:"ESP32",referenceVoltage:3.3,displayName:"Adafruit ItsyBitsy ESP32",vendor:"Adafruit",productURL:"https://www.adafruit.com/product/5890",documentationURL:"https://learn.adafruit.com/adafruit-itsybitsy-esp32",installMethod:"web",pins:[{number:0,name:"D0",displayName:"D0 (NeoPixel)",hasPWM:!0,hasServo:!0},{number:35,name:"D35",displayName:"D35 (User BUTTON)",hasPWM:!1,hasServo:!1},{number:13,name:"D13",displayName:"D13 (LED BUILT-IN)",hasPWM:!0,hasServo:!0},{number:12,name:"D12",displayName:"D12",hasPWM:!0,hasServo:!0},{number:14,name:"D14",displayName:"D14",hasPWM:!0,hasServo:!0},{number:33,name:"D33",displayName:"D33",hasPWM:!0,hasServo:!0},{number:32,name:"D32",displayName:"D32",hasPWM:!0,hasServo:!0},{number:7,name:"D7",displayName:"D7",hasPWM:!0,hasServo:!0},{number:5,name:"D5",displayName:"D5 (!Vhi)",hasPWM:!0,hasServo:!0},{number:27,name:"D27",displayName:"SCL",hasPWM:!0,hasServo:!0},{number:15,name:"D15",displayName:"SDA",hasPWM:!0,hasServo:!0},{number:8,name:"D8",displayName:"RX (UART Receive)",hasPWM:!0,hasServo:!0},{number:20,name:"D20",displayName:"TX (UART Transmit)",hasPWM:!0,hasServo:!0},{number:25,name:"D25",displayName:"A0",hasPWM:!0,hasServo:!0},{number:26,name:"D26",displayName:"A1",hasPWM:!0,hasServo:!0},{number:4,name:"D4",displayName:"A2",hasPWM:!0,hasServo:!0},{number:38,name:"D38",displayName:"A3",hasPWM:!1,hasServo:!1},{number:37,name:"D37",displayName:"A4",hasPWM:!1,hasServo:!1},{number:36,name:"D36",displayName:"A5",hasPWM:!1,hasServo:!1},{number:19,name:"D19",displayName:"SCK",hasPWM:!0,hasServo:!0},{number:21,name:"D21",displayName:"MOSI / PICO",hasPWM:!0,hasServo:!0},{number:22,name:"D22",displayName:"MISO / POCI",hasPWM:!0,hasServo:!0}],analogPins:[{name:"A35",displayName:"D35 (User BUTTON)",direction:"INPUT"},{name:"A33",displayName:"D33",direction:"INPUT"},{name:"A32",displayName:"D32",direction:"INPUT"},{name:"A38",displayName:"A3",direction:"INPUT"},{name:"A37",displayName:"A4",direction:"INPUT"},{name:"A36",displayName:"A5",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:27,SDA:15},image:"boards/itsybitsy-esp32/image.svg",totalAnalogPins:6,i2cPorts:[{i2cPortId:0,SDA:15,SCL:27}],totalGPIOPins:22},magtag:{boardName:"magtag",mcuName:"esp32s2",referenceVoltage:2.6,displayName:"Adafruit MagTag \"2.9\"",vendor:"Adafruit",productURL:"https://www.adafruit.com/product/4800",documentationURL:"https://learn.adafruit.com/adafruit-magtag",installMethod:"uf2",pins:[{number:1,name:"D1",displayName:"D1 (NeoPixel)",hasPWM:!1,hasServo:!1},{number:15,name:"D15",displayName:"Button A",hasPWM:!1,hasServo:!1},{number:14,name:"D14",displayName:"Button B",hasPWM:!1,hasServo:!1},{number:12,name:"D12",displayName:"Button C",hasPWM:!1,hasServo:!1},{number:11,name:"D11",displayName:"Button D",hasPWM:!1,hasServo:!1},{number:10,name:"D10",displayName:"D10",hasPWM:!0,hasServo:!0},{number:18,name:"D18",displayName:"D18 (A1)",hasPWM:!0,hasServo:!0},{number:13,name:"D13",displayName:"Built-in LED",hasPWM:!0,hasServo:!1},{number:43,name:"D43",displayName:"D43 (UART TX)",hasPWM:!1,hasServo:!1},{number:44,name:"D44",displayName:"D44 (UART RX)",hasPWM:!1,hasServo:!1}],analogPins:[{name:"A17",displayName:"Piezo Speaker (A0)",direction:"INPUT"},{name:"A10",displayName:"D10",direction:"INPUT"},{name:"A18",displayName:"A1 (D18)",direction:"INPUT"},{name:"A3",displayName:"Light Sensor (A3)",direction:"INPUT"},{name:"A4",displayName:"Voltage Monitor (A4)",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:34,SDA:33},image:"boards/magtag/image.svg",totalAnalogPins:5,i2cPorts:[{i2cPortId:0,SDA:33,SCL:34}],totalGPIOPins:10},"metro-m4-airliftlite-tinyusb":{boardName:"metro-m4-airliftlite-tinyusb",mcuName:"samd51j20",referenceVoltage:3.3,displayName:"Metro M4 Airlift Lite",vendor:"Adafruit",productURL:"https://www.adafruit.com/product/4000",documentationURL:"https://learn.adafruit.com/adafruit-metro-m4-express-airlift-wifi",installMethod:"uf2",pins:[{number:0,name:"D0",displayName:"D0 (UART RX)",hasPWM:!0,hasServo:!0},{number:1,name:"D1",displayName:"D1 (UART TX)",hasPWM:!0,hasServo:!0},{number:2,name:"D2",displayName:"D2",hasPWM:!0,hasServo:!0},{number:3,name:"D3",displayName:"D3",hasPWM:!0,hasServo:!0},{number:4,name:"D4",displayName:"D4",hasPWM:!0,hasServo:!0},{number:5,name:"D5",displayName:"D5",hasPWM:!0,hasServo:!0},{number:6,name:"D6",displayName:"D6",hasPWM:!0,hasServo:!0},{number:7,name:"D7",displayName:"D7",hasPWM:!0,hasServo:!0},{number:8,name:"D8",displayName:"D8",hasPWM:!0,hasServo:!0},{number:9,name:"D9",displayName:"D9",hasPWM:!0,hasServo:!0},{number:10,name:"D10",displayName:"D10",hasPWM:!0,hasServo:!0},{number:11,name:"D11",displayName:"D11",hasPWM:!0,hasServo:!0},{number:12,name:"D12",displayName:"D12",hasPWM:!0,hasServo:!0},{number:13,name:"D13",displayName:"D13 LED",hasPWM:!0,hasServo:!0},{number:40,name:"D40",displayName:"D40 (NeoPixel)",hasPWM:!1,hasServo:!1}],analogPins:[{name:"A0",displayName:"A0",direction:"INPUT"},{name:"A1",displayName:"A1",direction:"INPUT"},{name:"A2",displayName:"A2",direction:"INPUT"},{name:"A3",displayName:"A3",direction:"INPUT"},{name:"A4",displayName:"A4",direction:"INPUT"},{name:"A5",displayName:"A5",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:23,SDA:22},image:"boards/metro-m4-airliftlite-tinyusb/image.png",totalAnalogPins:6,i2cPorts:[{i2cPortId:0,SDA:22,SCL:23}],totalGPIOPins:15},metroesp32s2:{boardName:"metroesp32s2",mcuName:"esp32s2",referenceVoltage:2.6,displayName:"Adafruit Metro ESP32-S2",vendor:"Adafruit",productURL:"https://www.adafruit.com/product/4775",documentationURL:"https://learn.adafruit.com/adafruit-metro-esp32-s2",installMethod:"uf2",pins:[{number:0,name:"D0",displayName:"D0 (Boot0 Push Button)",hasPWM:!1,hasServo:!1},{number:1,name:"D1",displayName:"D1",hasPWM:!0,hasServo:!0},{number:2,name:"D2",displayName:"D2",hasPWM:!0,hasServo:!0},{number:3,name:"D3",displayName:"D3",hasPWM:!0,hasServo:!0},{number:4,name:"D4",displayName:"D4",hasPWM:!0,hasServo:!0},{number:5,name:"D5",displayName:"D5 (UART TX)",hasPWM:!0,hasServo:!0},{number:6,name:"D6",displayName:"D6 (UART RX)",hasPWM:!0,hasServo:!0},{number:7,name:"D7",displayName:"D7",hasPWM:!0,hasServo:!0},{number:8,name:"D8",displayName:"D8",hasPWM:!0,hasServo:!0},{number:9,name:"D9",displayName:"D9",hasPWM:!0,hasServo:!0},{number:10,name:"D10",displayName:"D10",hasPWM:!0,hasServo:!0},{number:11,name:"D11",displayName:"D11",hasPWM:!0,hasServo:!0},{number:12,name:"D12",displayName:"D12",hasPWM:!0,hasServo:!0},{number:13,name:"D13",displayName:"D13",hasPWM:!0,hasServo:!0},{number:14,name:"D14",displayName:"D14",hasPWM:!0,hasServo:!0},{number:15,name:"D15",displayName:"D15",hasPWM:!0,hasServo:!0},{number:16,name:"D16",displayName:"D16",hasPWM:!0,hasServo:!0},{number:21,name:"D21",displayName:"D21",hasPWM:!0,hasServo:!0},{number:42,name:"D42",displayName:"Built-in LED",hasPWM:!0,hasServo:!1},{number:45,name:"D45",displayName:"D45 (NeoPixel)",hasPWM:!1,hasServo:!1}],analogPins:[{name:"A0",displayName:"A0",direction:"INPUT"},{name:"A1",displayName:"A1",direction:"INPUT"},{name:"A2",displayName:"A2",direction:"INPUT"},{name:"A3",displayName:"A3",direction:"INPUT"},{name:"A4",displayName:"A4",direction:"INPUT"},{name:"A5",displayName:"A5 (IO5)",direction:"INPUT"},{name:"A6",displayName:"A6 (IO6)",direction:"INPUT"},{name:"A7",displayName:"A7 (IO7)",direction:"INPUT"},{name:"A8",displayName:"A8 (IO8)",direction:"INPUT"},{name:"A9",displayName:"A9 (IO9)",direction:"INPUT"},{name:"A10",displayName:"A10 (IO10)",direction:"INPUT"},{name:"A11",displayName:"A11 (IO11)",direction:"INPUT"},{name:"A12",displayName:"A12 (IO12)",direction:"INPUT"},{name:"A13",displayName:"A13 (IO13)",direction:"INPUT"},{name:"A14",displayName:"A14 (IO14)",direction:"INPUT"},{name:"A15",displayName:"A15 (IO15)",direction:"INPUT"},{name:"A16",displayName:"A16 (IO16)",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:34,SDA:33},image:"boards/metroesp32s2/image.svg",totalAnalogPins:17,i2cPorts:[{i2cPortId:0,SDA:33,SCL:34}],totalGPIOPins:20},metroesp32s3:{boardName:"metroesp32s3",mcuName:"esp32s3",referenceVoltage:2.6,displayName:"Adafruit Metro ESP32-S3",vendor:"Adafruit",productURL:"https://www.adafruit.com/product/5500",documentationURL:"https://learn.adafruit.com/adafruit-metro-esp32-s3",installMethod:"uf2",pins:[{number:0,name:"D0",displayName:"Built-in Button (Boot0)",hasPWM:!1,hasServo:!1},{number:40,name:"D40",displayName:"D1 (UART TX)",hasPWM:!0,hasServo:!0},{number:41,name:"D41",displayName:"D1 (UART RX)",hasPWM:!0,hasServo:!0},{number:2,name:"D2",displayName:"D2",hasPWM:!0,hasServo:!0},{number:3,name:"D3",displayName:"D3",hasPWM:!0,hasServo:!0},{number:4,name:"D4",displayName:"D4",hasPWM:!0,hasServo:!0},{number:5,name:"D5",displayName:"D5",hasPWM:!0,hasServo:!0},{number:6,name:"D6",displayName:"D6",hasPWM:!0,hasServo:!0},{number:7,name:"D7",displayName:"D7",hasPWM:!0,hasServo:!0},{number:8,name:"D8",displayName:"D8",hasPWM:!0,hasServo:!0},{number:9,name:"D9",displayName:"D9",hasPWM:!0,hasServo:!0},{number:10,name:"D10",displayName:"D10",hasPWM:!0,hasServo:!0},{number:11,name:"D11",displayName:"D11",hasPWM:!0,hasServo:!0},{number:12,name:"D12",displayName:"D12",hasPWM:!0,hasServo:!0},{number:13,name:"D13",displayName:"D13 (Built-in LED)",hasPWM:!0,hasServo:!0},{number:47,name:"D47",displayName:"D47 (SDA)",hasPWM:!0,hasServo:!0},{number:48,name:"D48",displayName:"D48 (SCL)",hasPWM:!0,hasServo:!0},{number:14,name:"D14",displayName:"A0 (GPIO14)",hasPWM:!0,hasServo:!0},{number:15,name:"D15",displayName:"A1 (GPIO15)",hasPWM:!0,hasServo:!0},{number:16,name:"D16",displayName:"A2 (GPIO16)",hasPWM:!0,hasServo:!0},{number:17,name:"D17",displayName:"A3 (GPIO17)",hasPWM:!0,hasServo:!0},{number:18,name:"D18",displayName:"A4 (GPIO18)",hasPWM:!0,hasServo:!0},{number:1,name:"D1",displayName:"A5 (GPIO1)",hasPWM:!0,hasServo:!0},{number:21,name:"D21",displayName:"D21 (MISO)",hasPWM:!0,hasServo:!0},{number:42,name:"D42",displayName:"D42 (MOSI)",hasPWM:!0,hasServo:!0},{number:39,name:"D39",displayName:"D39 (SCK)",hasPWM:!0,hasServo:!0},{number:46,name:"D46",displayName:"D46 (NeoPixel)",hasPWM:!1,hasServo:!1}],analogPins:[{name:"A14",displayName:"A0 (GPIO14)",direction:"INPUT"},{name:"A15",displayName:"A1 (GPIO15)",direction:"INPUT"},{name:"A16",displayName:"A2 (GPIO16)",direction:"INPUT"},{name:"A17",displayName:"A3 (GPIO17)",direction:"INPUT"},{name:"A18",displayName:"A4 (GPIO18)",direction:"INPUT"},{name:"A1",displayName:"A5 (GPIO1)",direction:"INPUT"},{name:"A2",displayName:"D2 (GPIO2)",direction:"INPUT"},{name:"A3",displayName:"D3 (GPIO3)",direction:"INPUT"},{name:"A4",displayName:"D4 (GPIO4)",direction:"INPUT"},{name:"A5",displayName:"D5 (GPIO5)",direction:"INPUT"},{name:"A6",displayName:"D6 (GPIO6)",direction:"INPUT"},{name:"A7",displayName:"D7 (GPIO7)",direction:"INPUT"},{name:"A8",displayName:"D8 (GPIO8)",direction:"INPUT"},{name:"A9",displayName:"D9 (GPIO9)",direction:"INPUT"},{name:"A10",displayName:"D10 (GPIO10)",direction:"INPUT"},{name:"A11",displayName:"D11 (GPIO11)",direction:"INPUT"},{name:"A12",displayName:"D12 (GPIO12)",direction:"INPUT"},{name:"A13",displayName:"D13 (GPIO13)",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:48,SDA:47},image:"boards/metroesp32s3/image.png",totalAnalogPins:18,i2cPorts:[{i2cPortId:0,SDA:47,SCL:48}],totalGPIOPins:27},"microchip-mcp2221":{boardName:"microchip-mcp2221",mcuName:"mcp2221a",referenceVoltage:3.3,displayName:"MCP2221",vendor:"Adafruit",productURL:"https://www.adafruit.com/product/4471",documentationURL:"https://learn.adafruit.com/circuitpython-libraries-on-any-computer-with-mcp2221",installMethod:"python",pins:[],analogPins:[{name:"G1",displayName:"ADC1",direction:"INPUT"},{name:"G2",displayName:"ADC2",direction:"INPUT"},{name:"G3",displayName:"ADC3",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:23,SDA:22},image:"boards/microchip-mcp2221/image.png",totalAnalogPins:3,i2cPorts:[{i2cPortId:0,SDA:22,SCL:23}],totalGPIOPins:0},"pyportal-tinyusb":{boardName:"pyportal-tinyusb",mcuName:"samd51j20",referenceVoltage:3.3,displayName:"PyPortal",vendor:"Adafruit",productURL:"https://www.adafruit.com/product/4116",documentationURL:"https://learn.adafruit.com/adafruit-pyportal",installMethod:"uf2",pins:[{number:3,name:"D3",displayName:"D3",hasPWM:!1,hasServo:!1},{number:4,name:"D4",displayName:"D4",hasPWM:!1,hasServo:!1},{number:13,name:"D13",displayName:"D13 LED",hasPWM:!1,hasServo:!1},{number:25,name:"D25",displayName:"TFT Backlight",hasPWM:!0,hasServo:!1},{number:50,name:"D50",displayName:"Speaker Enable",hasPWM:!1,hasServo:!1},{number:2,name:"D2",displayName:"D2 (NeoPixel)",hasPWM:!1,hasServo:!1}],analogPins:[{name:"A14",displayName:"A0 (Speaker)",direction:"INPUT"},{name:"A15",displayName:"D3 (A1)",direction:"INPUT"},{name:"A16",displayName:"Light Sensor (A2)",direction:"INPUT"},{name:"A17",displayName:"D4 (A3)",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:28,SDA:27},image:"boards/pyportal-tinyusb/image.png",totalAnalogPins:4,i2cPorts:[{i2cPortId:0,SDA:27,SCL:28}],totalGPIOPins:6},"pyportal-titano-tinyusb":{boardName:"pyportal-titano-tinyusb",mcuName:"samd51j20",referenceVoltage:3.3,displayName:"PyPortal Titano",vendor:"Adafruit",productURL:"https://www.adafruit.com/product/4444",documentationURL:"https://learn.adafruit.com/adafruit-pyportal-titano",installMethod:"uf2",pins:[{number:3,name:"D3",displayName:"D3",hasPWM:!1,hasServo:!1},{number:4,name:"D4",displayName:"D4",hasPWM:!1,hasServo:!1},{number:13,name:"D13",displayName:"D13 LED",hasPWM:!1,hasServo:!1},{number:25,name:"D25",displayName:"TFT Backlight",hasPWM:!0,hasServo:!1},{number:50,name:"D50",displayName:"Speaker Enable",hasPWM:!1,hasServo:!1},{number:2,name:"D2",displayName:"D2 (NeoPixel)",hasPWM:!1,hasServo:!1}],analogPins:[{name:"A14",displayName:"A0 (Speaker)",direction:"INPUT"},{name:"A15",displayName:"D3 (A1)",direction:"INPUT"},{name:"A16",displayName:"Light Sensor (A2)",direction:"INPUT"},{name:"A17",displayName:"D4 (A3)",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:28,SDA:27},image:"boards/pyportal-titano-tinyusb/image.png",totalAnalogPins:4,i2cPorts:[{i2cPortId:0,SDA:27,SCL:28}],totalGPIOPins:6},"qtpy-esp32":{boardName:"qtpy-esp32",mcuName:"esp32",referenceVoltage:3.3,displayName:"Adafruit QT Py ESP32 Pico",vendor:"Adafruit",productURL:"https://www.adafruit.com/product/5395",documentationURL:"https://learn.adafruit.com/adafruit-qt-py-esp32-pico",installMethod:"web",pins:[{number:26,name:"D26",displayName:"A0",hasPWM:!0,hasServo:!1},{number:25,name:"D25",displayName:"A1",hasPWM:!0,hasServo:!0},{number:27,name:"D27",displayName:"A2",hasPWM:!0,hasServo:!0},{number:15,name:"D15",displayName:"A3",hasPWM:!0,hasServo:!0},{number:4,name:"D4",displayName:"SDA",hasPWM:!0,hasServo:!0},{number:33,name:"D33",displayName:"SCL",hasPWM:!0,hasServo:!0},{number:32,name:"D32",displayName:"D32 (UART TX)",hasPWM:!0,hasServo:!0},{number:13,name:"D13",displayName:"MOSI",hasPWM:!0,hasServo:!0},{number:12,name:"D12",displayName:"MISO",hasPWM:!0,hasServo:!0},{number:14,name:"D14",displayName:"SCK",hasPWM:!0,hasServo:!0},{number:7,name:"D7",displayName:"D7 (UART RX)",hasPWM:!0,hasServo:!0},{number:0,name:"D0",displayName:"Boot Pushbutton",hasPWM:!1,hasServo:!1},{number:5,name:"D5",displayName:"D5 (NeoPixel)",hasPWM:!1,hasServo:!1}],analogPins:[{name:"A26",displayName:"A0 (OUTPUT ONLY!)",direction:"INPUT"},{name:"A25",displayName:"A1",direction:"INPUT"},{name:"A27",displayName:"A2",direction:"INPUT"},{name:"A15",displayName:"A3",direction:"INPUT"},{name:"A4",displayName:"SDA",direction:"INPUT"},{name:"A33",displayName:"SCL",direction:"INPUT"},{name:"A32",displayName:"A32 (UART TX)",direction:"INPUT"},{name:"A7",displayName:"A7 (UART RX)",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:19,SDA:22},image:"boards/qtpy-esp32/image.svg",totalAnalogPins:8,i2cPorts:[{i2cPortId:0,SDA:22,SCL:19}],totalGPIOPins:13},"qtpy-esp32c3":{boardName:"qtpy-esp32c3",mcuName:"esp32c3",referenceVoltage:2.6,displayName:"Adafruit QT Py ESP32-C3",vendor:"Adafruit",productURL:"https://www.adafruit.com/product/5405",documentationURL:"https://learn.adafruit.com/adafruit-qt-py-esp32-c3-wifi-dev-board",installMethod:"web",pins:[{number:0,name:"D0",displayName:"D0 (A3)",hasPWM:!0,hasServo:!0},{number:1,name:"D1",displayName:"D1 (A2)",hasPWM:!0,hasServo:!0},{number:3,name:"D3",displayName:"D3 (A1)",hasPWM:!0,hasServo:!0},{number:4,name:"D4",displayName:"D0 (A0)",hasPWM:!0,hasServo:!0},{number:5,name:"D5",displayName:"D5 (SDA)",hasPWM:!0,hasServo:!0},{number:6,name:"D6",displayName:"D6 (SCL)",hasPWM:!0,hasServo:!0},{number:7,name:"D7",displayName:"D7 (MO)",hasPWM:!0,hasServo:!0},{number:8,name:"D8",displayName:"D8 (MI)",hasPWM:!0,hasServo:!0},{number:9,name:"D9",displayName:"Push-button (D9)",hasPWM:!1,hasServo:!1},{number:10,name:"D10",displayName:"D10 (SCK)",hasPWM:!0,hasServo:!0},{number:20,name:"D20",displayName:"D20 (UART TX)",hasPWM:!0,hasServo:!0},{number:21,name:"D21",displayName:"D21 (UART RX)",hasPWM:!0,hasServo:!0},{number:2,name:"D2",displayName:"D2 (NeoPixel)",hasPWM:!1,hasServo:!1}],analogPins:[{name:"A0",displayName:"A0",direction:"INPUT"},{name:"A1",displayName:"A1",direction:"INPUT"},{name:"A2",displayName:"A2",direction:"INPUT"},{name:"A3",displayName:"A3",direction:"INPUT"},{name:"A4",displayName:"A4",direction:"INPUT"},{name:"A20",displayName:"A20 (UART TX)",direction:"INPUT"},{name:"A21",displayName:"A21 (UART RX)",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:6,SDA:5},image:"boards/qtpy-esp32c3/image.svg",totalAnalogPins:7,i2cPorts:[{i2cPortId:0,SDA:5,SCL:6}],totalGPIOPins:13},"qtpy-esp32s2":{boardName:"qtpy-esp32s2",mcuName:"esp32s2",referenceVoltage:2.6,displayName:"Adafruit QT Py ESP32-S2",vendor:"Adafruit",productURL:"https://www.adafruit.com/product/5325",documentationURL:"https://learn.adafruit.com/adafruit-qt-py-esp32-s2",installMethod:"uf2",pins:[{number:18,name:"D18",displayName:"A0",hasPWM:!0,hasServo:!0},{number:17,name:"D17",displayName:"A1",hasPWM:!0,hasServo:!0},{number:9,name:"D9",displayName:"A2",hasPWM:!0,hasServo:!0},{number:8,name:"D8",displayName:"A3",hasPWM:!0,hasServo:!0},{number:7,name:"D7",displayName:"SDA",hasPWM:!0,hasServo:!0},{number:6,name:"D6",displayName:"SCL",hasPWM:!0,hasServo:!0},{number:5,name:"D5",displayName:"D5 (UART TX)",hasPWM:!0,hasServo:!0},{number:35,name:"D35",displayName:"MOSI",hasPWM:!0,hasServo:!0},{number:37,name:"D37",displayName:"MISO",hasPWM:!0,hasServo:!0},{number:36,name:"D36",displayName:"SCK",hasPWM:!0,hasServo:!0},{number:16,name:"D16",displayName:"D16 (UART RX)",hasPWM:!0,hasServo:!0},{number:0,name:"D0",displayName:"Boot Pushbutton",hasPWM:!1,hasServo:!1},{number:39,name:"D39",displayName:"D39 (NeoPixel)",hasPWM:!1,hasServo:!1}],analogPins:[{name:"A18",displayName:"A0",direction:"INPUT"},{name:"A17",displayName:"A1",direction:"INPUT"},{name:"A9",displayName:"A2",direction:"INPUT"},{name:"A8",displayName:"A3",direction:"INPUT"},{name:"A7",displayName:"SDA",direction:"INPUT"},{name:"A6",displayName:"SCL",direction:"INPUT"},{name:"A5",displayName:"A5 (UART TX)",direction:"INPUT"},{name:"A16",displayName:"A16 (UART RX)",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:40,SDA:41},image:"boards/qtpy-esp32s2/image.svg",totalAnalogPins:8,i2cPorts:[{i2cPortId:0,SDA:41,SCL:40}],totalGPIOPins:13},"qtpy-esp32s3":{boardName:"qtpy-esp32s3",mcuName:"esp32s3",referenceVoltage:2.6,displayName:"Adafruit QT Py ESP32-S3 (NO PSRAM)",vendor:"Adafruit",productURL:"https://www.adafruit.com/product/5426",documentationURL:"https://learn.adafruit.com/adafruit-qt-py-esp32-s3",installMethod:"uf2",pins:[{number:18,name:"D18",displayName:"A0",hasPWM:!0,hasServo:!0},{number:17,name:"D17",displayName:"A1",hasPWM:!0,hasServo:!0},{number:9,name:"D9",displayName:"A2",hasPWM:!0,hasServo:!0},{number:8,name:"D8",displayName:"A3",hasPWM:!0,hasServo:!0},{number:7,name:"D7",displayName:"SDA",hasPWM:!0,hasServo:!0},{number:6,name:"D6",displayName:"SCL",hasPWM:!0,hasServo:!0},{number:5,name:"D5",displayName:"D5 (UART TX)",hasPWM:!0,hasServo:!0},{number:35,name:"D35",displayName:"MOSI",hasPWM:!0,hasServo:!0},{number:37,name:"D37",displayName:"MISO",hasPWM:!0,hasServo:!0},{number:36,name:"D36",displayName:"SCK",hasPWM:!0,hasServo:!0},{number:16,name:"D16",displayName:"D16 (UART RX)",hasPWM:!0,hasServo:!0},{number:0,name:"D0",displayName:"Boot Pushbutton",hasPWM:!1,hasServo:!1},{number:39,name:"D39",displayName:"D39 (NeoPixel)",hasPWM:!1,hasServo:!1}],analogPins:[{name:"A18",displayName:"A0",direction:"INPUT"},{name:"A17",displayName:"A1",direction:"INPUT"},{name:"A9",displayName:"A2",direction:"INPUT"},{name:"A8",displayName:"A3",direction:"INPUT"},{name:"A7",displayName:"SDA",direction:"INPUT"},{name:"A6",displayName:"SCL",direction:"INPUT"},{name:"A5",displayName:"A5 (UART TX)",direction:"INPUT"},{name:"A16",displayName:"A16 (UART RX)",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:40,SDA:41},image:"boards/qtpy-esp32s3/image.svg",totalAnalogPins:8,i2cPorts:[{i2cPortId:0,SDA:41,SCL:40}],totalGPIOPins:13},"qtpy-esp32s3-n4r2":{boardName:"qtpy-esp32s3-n4r2",mcuName:"esp32s3",referenceVoltage:2.6,displayName:"Adafruit QT Py S3 (2MB PSRAM)",vendor:"Adafruit",productURL:"https://www.adafruit.com/product/5700",documentationURL:"https://learn.adafruit.com/adafruit-qt-py-esp32-s3",installMethod:"uf2",pins:[{number:18,name:"D18",displayName:"A0",hasPWM:!0,hasServo:!0},{number:17,name:"D17",displayName:"A1",hasPWM:!0,hasServo:!0},{number:9,name:"D9",displayName:"A2",hasPWM:!0,hasServo:!0},{number:8,name:"D8",displayName:"A3",hasPWM:!0,hasServo:!0},{number:7,name:"D7",displayName:"SDA",hasPWM:!0,hasServo:!0},{number:6,name:"D6",displayName:"SCL",hasPWM:!0,hasServo:!0},{number:5,name:"D5",displayName:"D5 (UART TX)",hasPWM:!0,hasServo:!0},{number:35,name:"D35",displayName:"MOSI",hasPWM:!0,hasServo:!0},{number:37,name:"D37",displayName:"MISO",hasPWM:!0,hasServo:!0},{number:36,name:"D36",displayName:"SCK",hasPWM:!0,hasServo:!0},{number:16,name:"D16",displayName:"D16 (UART RX)",hasPWM:!0,hasServo:!0},{number:0,name:"D0",displayName:"Boot Pushbutton",hasPWM:!1,hasServo:!1},{number:39,name:"D39",displayName:"D39 (NeoPixel)",hasPWM:!1,hasServo:!1}],analogPins:[{name:"A18",displayName:"A0",direction:"INPUT"},{name:"A17",displayName:"A1",direction:"INPUT"},{name:"A9",displayName:"A2",direction:"INPUT"},{name:"A8",displayName:"A3",direction:"INPUT"},{name:"A7",displayName:"SDA",direction:"INPUT"},{name:"A6",displayName:"SCL",direction:"INPUT"},{name:"A5",displayName:"A5 (UART TX)",direction:"INPUT"},{name:"A16",displayName:"A16 (UART RX)",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:40,SDA:41},image:"boards/qtpy-esp32s3-n4r2/image.svg",totalAnalogPins:8,i2cPorts:[{i2cPortId:0,SDA:41,SCL:40}],totalGPIOPins:13},"rpi-pico-2w":{boardName:"rpi-pico-2w",mcuName:"rp2350",referenceVoltage:3.3,displayName:"Raspberry Pi Pico 2W",vendor:"Raspberry Pi",productURL:"https://www.adafruit.com/product/6087",documentationURL:"https://learn.adafruit.com/quick-start-the-pico-w-with-wippersnapper/overview",installMethod:"uf2",pins:[{number:0,name:"D0",displayName:"GP0 (UART TX)",hasPWM:!0,hasServo:!0},{number:1,name:"D1",displayName:"GP1 (UART RX)",hasPWM:!0,hasServo:!0},{number:2,name:"D2",displayName:"GP2",hasPWM:!0,hasServo:!0},{number:3,name:"D3",displayName:"GP3",hasPWM:!0,hasServo:!0},{number:4,name:"D4",displayName:"GP4",hasPWM:!0,hasServo:!0},{number:5,name:"D5",displayName:"GP5",hasPWM:!0,hasServo:!0},{number:6,name:"D6",displayName:"GP6",hasPWM:!0,hasServo:!0},{number:7,name:"D7",displayName:"GP7",hasPWM:!0,hasServo:!0},{number:8,name:"D8",displayName:"GP8",hasPWM:!0,hasServo:!0},{number:9,name:"D9",displayName:"GP9",hasPWM:!0,hasServo:!0},{number:10,name:"D10",displayName:"GP10",hasPWM:!0,hasServo:!0},{number:11,name:"D11",displayName:"GP11",hasPWM:!0,hasServo:!0},{number:12,name:"D12",displayName:"GP12",hasPWM:!0,hasServo:!0},{number:13,name:"D13",displayName:"GP13",hasPWM:!0,hasServo:!0},{number:14,name:"D14",displayName:"GP14",hasPWM:!0,hasServo:!0},{number:15,name:"D15",displayName:"GP15",hasPWM:!0,hasServo:!0},{number:16,name:"D16",displayName:"GP16",hasPWM:!0,hasServo:!0},{number:17,name:"D17",displayName:"GP17",hasPWM:!0,hasServo:!0},{number:18,name:"D18",displayName:"GP18",hasPWM:!0,hasServo:!0},{number:19,name:"D19",displayName:"GP19",hasPWM:!0,hasServo:!0},{number:20,name:"D20",displayName:"GP20",hasPWM:!0,hasServo:!0},{number:21,name:"D21",displayName:"GP21",hasPWM:!0,hasServo:!0},{number:22,name:"D22",displayName:"GP22",hasPWM:!0,hasServo:!0},{number:23,name:"D23",displayName:"GP23",hasPWM:!0,hasServo:!0},{number:24,name:"D24",displayName:"GP24",hasPWM:!0,hasServo:!0},{number:25,name:"D25",displayName:"GP25",hasPWM:!0,hasServo:!0},{number:26,name:"D26",displayName:"GP26",hasPWM:!0,hasServo:!0},{number:27,name:"D27",displayName:"GP27",hasPWM:!0,hasServo:!0},{number:28,name:"D28",displayName:"GP28",hasPWM:!0,hasServo:!0},{number:29,name:"D29",displayName:"GP29",hasPWM:!0,hasServo:!0},{number:64,name:"D64",displayName:"LED (BUILT-IN)",hasPWM:!1,hasServo:!1}],analogPins:[{name:"A26",displayName:"A0 (GP0)",direction:"INPUT"},{name:"A27",displayName:"A1 (GP1)",direction:"INPUT"},{name:"A28",displayName:"A2 (GP2)",direction:"INPUT"},{name:"A29",displayName:"A3 (GP3)",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:5,SDA:4},image:"boards/rpi-pico-2w/image.jpg",totalAnalogPins:4,i2cPorts:[{i2cPortId:0,SDA:4,SCL:5}],totalGPIOPins:31},"rpi-pico-w":{boardName:"rpi-pico-w",mcuName:"rp2040",referenceVoltage:3.3,displayName:"Raspberry Pi Pico W",vendor:"Raspberry Pi",productURL:"https://www.adafruit.com/product/5526",documentationURL:"https://learn.adafruit.com/quick-start-the-pico-w-with-wippersnapper/",installMethod:"uf2",pins:[{number:0,name:"D0",displayName:"GP0 (UART TX)",hasPWM:!0,hasServo:!0},{number:1,name:"D1",displayName:"GP1 (UART RX)",hasPWM:!0,hasServo:!0},{number:2,name:"D2",displayName:"GP2",hasPWM:!0,hasServo:!0},{number:3,name:"D3",displayName:"GP3",hasPWM:!0,hasServo:!0},{number:4,name:"D4",displayName:"GP4",hasPWM:!0,hasServo:!0},{number:5,name:"D5",displayName:"GP5",hasPWM:!0,hasServo:!0},{number:6,name:"D6",displayName:"GP6",hasPWM:!0,hasServo:!0},{number:7,name:"D7",displayName:"GP7",hasPWM:!0,hasServo:!0},{number:8,name:"D8",displayName:"GP8",hasPWM:!0,hasServo:!0},{number:9,name:"D9",displayName:"GP9",hasPWM:!0,hasServo:!0},{number:10,name:"D10",displayName:"GP10",hasPWM:!0,hasServo:!0},{number:11,name:"D11",displayName:"GP11",hasPWM:!0,hasServo:!0},{number:12,name:"D12",displayName:"GP12",hasPWM:!0,hasServo:!0},{number:13,name:"D13",displayName:"GP13",hasPWM:!0,hasServo:!0},{number:14,name:"D14",displayName:"GP14",hasPWM:!0,hasServo:!0},{number:15,name:"D15",displayName:"GP15",hasPWM:!0,hasServo:!0},{number:16,name:"D16",displayName:"GP16",hasPWM:!0,hasServo:!0},{number:17,name:"D17",displayName:"GP17",hasPWM:!0,hasServo:!0},{number:18,name:"D18",displayName:"GP18",hasPWM:!0,hasServo:!0},{number:19,name:"D19",displayName:"GP19",hasPWM:!0,hasServo:!0},{number:20,name:"D20",displayName:"GP20",hasPWM:!0,hasServo:!0},{number:21,name:"D21",displayName:"GP21",hasPWM:!0,hasServo:!0},{number:22,name:"D22",displayName:"GP22",hasPWM:!0,hasServo:!0},{number:23,name:"D23",displayName:"GP23",hasPWM:!0,hasServo:!0},{number:24,name:"D24",displayName:"GP24",hasPWM:!0,hasServo:!0},{number:25,name:"D25",displayName:"GP25",hasPWM:!0,hasServo:!0},{number:26,name:"D26",displayName:"GP26",hasPWM:!0,hasServo:!0},{number:27,name:"D27",displayName:"GP27",hasPWM:!0,hasServo:!0},{number:28,name:"D28",displayName:"GP28",hasPWM:!0,hasServo:!0},{number:29,name:"D29",displayName:"GP29",hasPWM:!0,hasServo:!0},{number:64,name:"D64",displayName:"LED (BUILT-IN)",hasPWM:!1,hasServo:!1}],analogPins:[{name:"A26",displayName:"A0 (GP0)",direction:"INPUT"},{name:"A27",displayName:"A1 (GP1)",direction:"INPUT"},{name:"A28",displayName:"A2 (GP2)",direction:"INPUT"},{name:"A29",displayName:"A3 (GP3)",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:5,SDA:4},image:"boards/rpi-pico-w/image.png",totalAnalogPins:4,i2cPorts:[{i2cPortId:0,SDA:4,SCL:5}],totalGPIOPins:31},"sparklemotionmini-esp32":{boardName:"sparklemotionmini-esp32",mcuName:"ESP32",referenceVoltage:3.3,displayName:"Adafruit Mini Sparkle Motion",vendor:"Adafruit",productURL:"https://www.adafruit.com/product/6160",documentationURL:"https://learn.adafruit.com/adafruit-sparkle-motion-mini/",installMethod:"web",pins:[{number:0,name:"D0",displayName:"D0 (Button)",hasPWM:!1,hasServo:!1},{number:12,name:"D12",displayName:"D12 (LED BUILT-IN)",hasPWM:!0,hasServo:!1},{number:26,name:"D26",displayName:"D19 (UART RX)",hasPWM:!0,hasServo:!0},{number:25,name:"D25",displayName:"D25 (UART TX)",hasPWM:!0,hasServo:!0},{number:14,name:"D14",displayName:"D14",hasPWM:!0,hasServo:!0},{number:18,name:"D18",displayName:"D18 (NEOPIXEL)",hasPWM:!0,hasServo:!1},{number:27,name:"D27",displayName:"D27",hasPWM:!0,hasServo:!0},{number:13,name:"D13",displayName:"D13 (A0)",hasPWM:!0,hasServo:!0},{number:33,name:"D33",displayName:"D33",hasPWM:!0,hasServo:!0},{number:32,name:"D32",displayName:"D32",hasPWM:!0,hasServo:!0},{number:19,name:"D19",displayName:"D19 (SDA)",hasPWM:!0,hasServo:!0},{number:22,name:"D22",displayName:"D22 (SCL)",hasPWM:!0,hasServo:!0}],analogPins:[{name:"A13",displayName:"A0 (D13)",direction:"INPUT"},{name:"A14",displayName:"D14",direction:"INPUT"},{name:"A27",displayName:"D27",direction:"INPUT"},{name:"A25",displayName:"D25",direction:"INPUT"},{name:"A26",displayName:"D26",direction:"INPUT"},{name:"A32",displayName:"A32",direction:"INPUT"},{name:"A33",displayName:"A33",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:22,SDA:19},image:"boards/sparklemotionmini-esp32/image.svg",totalAnalogPins:7,i2cPorts:[{i2cPortId:0,SDA:19,SCL:22}],totalGPIOPins:12},"feather-rp2040-adalogger":{boardName:"Adafruit Feather RP2040 Adalogger",mcuName:"RP2040",referenceVoltage:3.3,displayName:"Adafruit Feather RP2040 Adalogger",vendor:"Adafruit",productURL:"https://www.adafruit.com/product/5980",documentationURL:"https://learn.adafruit.com/adafruit-feather-rp2040-adalogger",installMethod:"uf2",totalGPIOPins:22,totalAnalogPins:4,pins:[{number:0,name:"D0",displayName:"GPIO0",hasPWM:!0,hasServo:!0},{number:1,name:"D1",displayName:"GPIO1",hasPWM:!0,hasServo:!0},{number:2,name:"D2",displayName:"GPIO2",hasPWM:!0,hasServo:!0},{number:3,name:"D3",displayName:"GPIO3",hasPWM:!0,hasServo:!0},{number:4,name:"D4",displayName:"GPIO4",hasPWM:!0,hasServo:!0},{number:5,name:"D5",displayName:"GPIO5",hasPWM:!0,hasServo:!0},{number:6,name:"D6",displayName:"GPIO6",hasPWM:!0,hasServo:!0},{number:7,name:"D7",displayName:"GPIO7",hasPWM:!0,hasServo:!0},{number:8,name:"D8",displayName:"GPIO8",hasPWM:!0,hasServo:!0},{number:9,name:"D9",displayName:"GPIO9",hasPWM:!0,hasServo:!0},{number:10,name:"D10",displayName:"GPIO10",hasPWM:!0,hasServo:!0},{number:11,name:"D11",displayName:"GPIO11",hasPWM:!0,hasServo:!0},{number:12,name:"D12",displayName:"GPIO12",hasPWM:!0,hasServo:!0},{number:13,name:"D13",displayName:"GPIO13 (LED)",hasPWM:!0,hasServo:!0},{number:16,name:"D16",displayName:"GPIO16 (MOSI)",hasPWM:!0,hasServo:!0},{number:17,name:"D17",displayName:"GPIO17 (A1/SCK/SD CS)",hasPWM:!0,hasServo:!0},{number:18,name:"D18",displayName:"GPIO18 (MISO)",hasPWM:!0,hasServo:!0},{number:19,name:"D19",displayName:"GPIO19",hasPWM:!0,hasServo:!0},{number:20,name:"D20",displayName:"GPIO20",hasPWM:!0,hasServo:!0},{number:24,name:"D24",displayName:"GPIO24 (A0)",hasPWM:!0,hasServo:!0},{number:25,name:"D25",displayName:"GPIO25 (A3)",hasPWM:!0,hasServo:!0},{number:29,name:"D29",displayName:"GPIO29 (A2)",hasPWM:!0,hasServo:!0}],analogPins:[{name:"A0",displayName:"GPIO24 (A0)",direction:"INPUT"},{name:"A1",displayName:"GPIO17 (A1/SD CS)",direction:"INPUT"},{name:"A2",displayName:"GPIO29 (A2)",direction:"INPUT"},{name:"A3",displayName:"GPIO25 (A3)",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:"D3",SDA:"D2"},sdCardCS:17,rtcType:"PCF8523",image:null},"generic-esp32-s2":{boardName:"Generic ESP32-S2",mcuName:"ESP32-S2",referenceVoltage:3.3,displayName:"Generic ESP32-S2 Board",vendor:"Generic",productURL:"",documentationURL:"",installMethod:"uf2",totalGPIOPins:43,totalAnalogPins:20,pins:[{number:1,name:"D1",displayName:"GPIO1",hasPWM:!0,hasServo:!0},{number:2,name:"D2",displayName:"GPIO2",hasPWM:!0,hasServo:!0},{number:3,name:"D3",displayName:"GPIO3",hasPWM:!0,hasServo:!0},{number:4,name:"D4",displayName:"GPIO4",hasPWM:!0,hasServo:!0},{number:5,name:"D5",displayName:"GPIO5",hasPWM:!0,hasServo:!0},{number:6,name:"D6",displayName:"GPIO6",hasPWM:!0,hasServo:!0},{number:7,name:"D7",displayName:"GPIO7",hasPWM:!0,hasServo:!0},{number:8,name:"D8",displayName:"GPIO8",hasPWM:!0,hasServo:!0},{number:9,name:"D9",displayName:"GPIO9",hasPWM:!0,hasServo:!0},{number:10,name:"D10",displayName:"GPIO10",hasPWM:!0,hasServo:!0},{number:11,name:"D11",displayName:"GPIO11",hasPWM:!0,hasServo:!0},{number:12,name:"D12",displayName:"GPIO12",hasPWM:!0,hasServo:!0},{number:13,name:"D13",displayName:"GPIO13",hasPWM:!0,hasServo:!0},{number:14,name:"D14",displayName:"GPIO14",hasPWM:!0,hasServo:!0},{number:15,name:"D15",displayName:"GPIO15",hasPWM:!0,hasServo:!0},{number:16,name:"D16",displayName:"GPIO16",hasPWM:!0,hasServo:!0},{number:17,name:"D17",displayName:"GPIO17",hasPWM:!0,hasServo:!0},{number:18,name:"D18",displayName:"GPIO18",hasPWM:!0,hasServo:!0},{number:21,name:"D21",displayName:"GPIO21",hasPWM:!0,hasServo:!0},{number:33,name:"D33",displayName:"GPIO33",hasPWM:!0,hasServo:!0},{number:34,name:"D34",displayName:"GPIO34",hasPWM:!0,hasServo:!0},{number:35,name:"D35",displayName:"GPIO35",hasPWM:!0,hasServo:!0},{number:36,name:"D36",displayName:"GPIO36",hasPWM:!0,hasServo:!0},{number:37,name:"D37",displayName:"GPIO37",hasPWM:!0,hasServo:!0},{number:38,name:"D38",displayName:"GPIO38",hasPWM:!0,hasServo:!0},{number:39,name:"D39",displayName:"GPIO39",hasPWM:!0,hasServo:!0},{number:40,name:"D40",displayName:"GPIO40",hasPWM:!0,hasServo:!0},{number:41,name:"D41",displayName:"GPIO41",hasPWM:!0,hasServo:!0},{number:42,name:"D42",displayName:"GPIO42",hasPWM:!0,hasServo:!0},{number:43,name:"D43",displayName:"GPIO43",hasPWM:!0,hasServo:!0},{number:44,name:"D44",displayName:"GPIO44",hasPWM:!0,hasServo:!0},{number:45,name:"D45",displayName:"GPIO45",hasPWM:!0,hasServo:!0},{number:46,name:"D46",displayName:"GPIO46",hasPWM:!0,hasServo:!0}],analogPins:[{name:"A0",displayName:"ADC1_CH0",direction:"INPUT"},{name:"A1",displayName:"ADC1_CH1",direction:"INPUT"},{name:"A2",displayName:"ADC1_CH2",direction:"INPUT"},{name:"A3",displayName:"ADC1_CH3",direction:"INPUT"},{name:"A4",displayName:"ADC1_CH4",direction:"INPUT"},{name:"A5",displayName:"ADC1_CH5",direction:"INPUT"},{name:"A6",displayName:"ADC1_CH6",direction:"INPUT"},{name:"A7",displayName:"ADC1_CH7",direction:"INPUT"},{name:"A8",displayName:"ADC1_CH8",direction:"INPUT"},{name:"A9",displayName:"ADC1_CH9",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:"D9",SDA:"D8"},image:null},"generic-esp32-s3":{boardName:"Generic ESP32-S3",mcuName:"ESP32-S3",referenceVoltage:3.3,displayName:"Generic ESP32-S3 Board",vendor:"Generic",productURL:"",documentationURL:"",installMethod:"uf2",totalGPIOPins:48,totalAnalogPins:20,pins:[{number:1,name:"D1",displayName:"GPIO1",hasPWM:!0,hasServo:!0},{number:2,name:"D2",displayName:"GPIO2",hasPWM:!0,hasServo:!0},{number:3,name:"D3",displayName:"GPIO3",hasPWM:!0,hasServo:!0},{number:4,name:"D4",displayName:"GPIO4",hasPWM:!0,hasServo:!0},{number:5,name:"D5",displayName:"GPIO5",hasPWM:!0,hasServo:!0},{number:6,name:"D6",displayName:"GPIO6",hasPWM:!0,hasServo:!0},{number:7,name:"D7",displayName:"GPIO7",hasPWM:!0,hasServo:!0},{number:8,name:"D8",displayName:"GPIO8",hasPWM:!0,hasServo:!0},{number:9,name:"D9",displayName:"GPIO9",hasPWM:!0,hasServo:!0},{number:10,name:"D10",displayName:"GPIO10",hasPWM:!0,hasServo:!0},{number:11,name:"D11",displayName:"GPIO11",hasPWM:!0,hasServo:!0},{number:12,name:"D12",displayName:"GPIO12",hasPWM:!0,hasServo:!0},{number:13,name:"D13",displayName:"GPIO13",hasPWM:!0,hasServo:!0},{number:14,name:"D14",displayName:"GPIO14",hasPWM:!0,hasServo:!0},{number:15,name:"D15",displayName:"GPIO15",hasPWM:!0,hasServo:!0},{number:16,name:"D16",displayName:"GPIO16",hasPWM:!0,hasServo:!0},{number:17,name:"D17",displayName:"GPIO17",hasPWM:!0,hasServo:!0},{number:18,name:"D18",displayName:"GPIO18",hasPWM:!0,hasServo:!0},{number:19,name:"D19",displayName:"GPIO19",hasPWM:!0,hasServo:!0},{number:20,name:"D20",displayName:"GPIO20",hasPWM:!0,hasServo:!0},{number:21,name:"D21",displayName:"GPIO21",hasPWM:!0,hasServo:!0},{number:35,name:"D35",displayName:"GPIO35",hasPWM:!0,hasServo:!0},{number:36,name:"D36",displayName:"GPIO36",hasPWM:!0,hasServo:!0},{number:37,name:"D37",displayName:"GPIO37",hasPWM:!0,hasServo:!0},{number:38,name:"D38",displayName:"GPIO38",hasPWM:!0,hasServo:!0},{number:39,name:"D39",displayName:"GPIO39",hasPWM:!0,hasServo:!0},{number:40,name:"D40",displayName:"GPIO40",hasPWM:!0,hasServo:!0},{number:41,name:"D41",displayName:"GPIO41",hasPWM:!0,hasServo:!0},{number:42,name:"D42",displayName:"GPIO42",hasPWM:!0,hasServo:!0},{number:43,name:"D43",displayName:"GPIO43",hasPWM:!0,hasServo:!0},{number:44,name:"D44",displayName:"GPIO44",hasPWM:!0,hasServo:!0},{number:45,name:"D45",displayName:"GPIO45",hasPWM:!0,hasServo:!0},{number:46,name:"D46",displayName:"GPIO46",hasPWM:!0,hasServo:!0},{number:47,name:"D47",displayName:"GPIO47",hasPWM:!0,hasServo:!0},{number:48,name:"D48",displayName:"GPIO48",hasPWM:!0,hasServo:!0}],analogPins:[{name:"A0",displayName:"ADC1_CH0",direction:"INPUT"},{name:"A1",displayName:"ADC1_CH1",direction:"INPUT"},{name:"A2",displayName:"ADC1_CH2",direction:"INPUT"},{name:"A3",displayName:"ADC1_CH3",direction:"INPUT"},{name:"A4",displayName:"ADC1_CH4",direction:"INPUT"},{name:"A5",displayName:"ADC1_CH5",direction:"INPUT"},{name:"A6",displayName:"ADC1_CH6",direction:"INPUT"},{name:"A7",displayName:"ADC1_CH7",direction:"INPUT"},{name:"A8",displayName:"ADC1_CH8",direction:"INPUT"},{name:"A9",displayName:"ADC1_CH9",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:"D9",SDA:"D8"},image:null},"generic-rp2040":{boardName:"Generic RP2040",mcuName:"RP2040",referenceVoltage:3.3,displayName:"Generic RP2040 Board",vendor:"Generic",productURL:"",documentationURL:"",installMethod:"uf2",totalGPIOPins:30,totalAnalogPins:4,pins:[{number:0,name:"D0",displayName:"GPIO0",hasPWM:!0,hasServo:!0},{number:1,name:"D1",displayName:"GPIO1",hasPWM:!0,hasServo:!0},{number:2,name:"D2",displayName:"GPIO2",hasPWM:!0,hasServo:!0},{number:3,name:"D3",displayName:"GPIO3",hasPWM:!0,hasServo:!0},{number:4,name:"D4",displayName:"GPIO4",hasPWM:!0,hasServo:!0},{number:5,name:"D5",displayName:"GPIO5",hasPWM:!0,hasServo:!0},{number:6,name:"D6",displayName:"GPIO6",hasPWM:!0,hasServo:!0},{number:7,name:"D7",displayName:"GPIO7",hasPWM:!0,hasServo:!0},{number:8,name:"D8",displayName:"GPIO8",hasPWM:!0,hasServo:!0},{number:9,name:"D9",displayName:"GPIO9",hasPWM:!0,hasServo:!0},{number:10,name:"D10",displayName:"GPIO10",hasPWM:!0,hasServo:!0},{number:11,name:"D11",displayName:"GPIO11",hasPWM:!0,hasServo:!0},{number:12,name:"D12",displayName:"GPIO12",hasPWM:!0,hasServo:!0},{number:13,name:"D13",displayName:"GPIO13",hasPWM:!0,hasServo:!0},{number:14,name:"D14",displayName:"GPIO14",hasPWM:!0,hasServo:!0},{number:15,name:"D15",displayName:"GPIO15",hasPWM:!0,hasServo:!0},{number:16,name:"D16",displayName:"GPIO16",hasPWM:!0,hasServo:!0},{number:17,name:"D17",displayName:"GPIO17",hasPWM:!0,hasServo:!0},{number:18,name:"D18",displayName:"GPIO18",hasPWM:!0,hasServo:!0},{number:19,name:"D19",displayName:"GPIO19",hasPWM:!0,hasServo:!0},{number:20,name:"D20",displayName:"GPIO20",hasPWM:!0,hasServo:!0},{number:21,name:"D21",displayName:"GPIO21",hasPWM:!0,hasServo:!0},{number:22,name:"D22",displayName:"GPIO22",hasPWM:!0,hasServo:!0},{number:23,name:"D23",displayName:"GPIO23",hasPWM:!0,hasServo:!0},{number:24,name:"D24",displayName:"GPIO24",hasPWM:!0,hasServo:!0},{number:25,name:"D25",displayName:"GPIO25",hasPWM:!0,hasServo:!0},{number:26,name:"D26",displayName:"GPIO26",hasPWM:!0,hasServo:!0},{number:27,name:"D27",displayName:"GPIO27",hasPWM:!0,hasServo:!0},{number:28,name:"D28",displayName:"GPIO28",hasPWM:!0,hasServo:!0},{number:29,name:"D29",displayName:"GPIO29",hasPWM:!0,hasServo:!0}],analogPins:[{name:"A0",displayName:"ADC0",direction:"INPUT"},{name:"A1",displayName:"ADC1",direction:"INPUT"},{name:"A2",displayName:"ADC2",direction:"INPUT"},{name:"A3",displayName:"ADC3",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:"D3",SDA:"D2"},image:null},"generic-rp23xx":{boardName:"Generic RP23xx",mcuName:"RP23xx",referenceVoltage:3.3,displayName:"Generic RP23xx Board",vendor:"Generic",productURL:"",documentationURL:"",installMethod:"uf2",totalGPIOPins:30,totalAnalogPins:4,pins:[{number:0,name:"D0",displayName:"GPIO0",hasPWM:!0,hasServo:!0},{number:1,name:"D1",displayName:"GPIO1",hasPWM:!0,hasServo:!0},{number:2,name:"D2",displayName:"GPIO2",hasPWM:!0,hasServo:!0},{number:3,name:"D3",displayName:"GPIO3",hasPWM:!0,hasServo:!0},{number:4,name:"D4",displayName:"GPIO4",hasPWM:!0,hasServo:!0},{number:5,name:"D5",displayName:"GPIO5",hasPWM:!0,hasServo:!0},{number:6,name:"D6",displayName:"GPIO6",hasPWM:!0,hasServo:!0},{number:7,name:"D7",displayName:"GPIO7",hasPWM:!0,hasServo:!0},{number:8,name:"D8",displayName:"GPIO8",hasPWM:!0,hasServo:!0},{number:9,name:"D9",displayName:"GPIO9",hasPWM:!0,hasServo:!0},{number:10,name:"D10",displayName:"GPIO10",hasPWM:!0,hasServo:!0},{number:11,name:"D11",displayName:"GPIO11",hasPWM:!0,hasServo:!0},{number:12,name:"D12",displayName:"GPIO12",hasPWM:!0,hasServo:!0},{number:13,name:"D13",displayName:"GPIO13",hasPWM:!0,hasServo:!0},{number:14,name:"D14",displayName:"GPIO14",hasPWM:!0,hasServo:!0},{number:15,name:"D15",displayName:"GPIO15",hasPWM:!0,hasServo:!0},{number:16,name:"D16",displayName:"GPIO16",hasPWM:!0,hasServo:!0},{number:17,name:"D17",displayName:"GPIO17",hasPWM:!0,hasServo:!0},{number:18,name:"D18",displayName:"GPIO18",hasPWM:!0,hasServo:!0},{number:19,name:"D19",displayName:"GPIO19",hasPWM:!0,hasServo:!0},{number:20,name:"D20",displayName:"GPIO20",hasPWM:!0,hasServo:!0},{number:21,name:"D21",displayName:"GPIO21",hasPWM:!0,hasServo:!0},{number:22,name:"D22",displayName:"GPIO22",hasPWM:!0,hasServo:!0},{number:23,name:"D23",displayName:"GPIO23",hasPWM:!0,hasServo:!0},{number:24,name:"D24",displayName:"GPIO24",hasPWM:!0,hasServo:!0},{number:25,name:"D25",displayName:"GPIO25",hasPWM:!0,hasServo:!0},{number:26,name:"D26",displayName:"GPIO26",hasPWM:!0,hasServo:!0},{number:27,name:"D27",displayName:"GPIO27",hasPWM:!0,hasServo:!0},{number:28,name:"D28",displayName:"GPIO28",hasPWM:!0,hasServo:!0},{number:29,name:"D29",displayName:"GPIO29",hasPWM:!0,hasServo:!0}],analogPins:[{name:"A0",displayName:"ADC0",direction:"INPUT"},{name:"A1",displayName:"ADC1",direction:"INPUT"},{name:"A2",displayName:"ADC2",direction:"INPUT"},{name:"A3",displayName:"ADC3",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:"D3",SDA:"D2"},image:null},"metro-rp2350-sd":{boardName:"Adafruit Metro RP2350",mcuName:"RP2350",referenceVoltage:3.3,displayName:"Adafruit Metro RP2350 (with SD card)",vendor:"Adafruit",productURL:"https://www.adafruit.com/product/5786",documentationURL:"https://learn.adafruit.com/adafruit-metro-rp2350",installMethod:"uf2",totalGPIOPins:30,totalAnalogPins:4,pins:[{number:0,name:"D0",displayName:"GPIO0",hasPWM:!0,hasServo:!0},{number:1,name:"D1",displayName:"GPIO1",hasPWM:!0,hasServo:!0},{number:2,name:"D2",displayName:"GPIO2",hasPWM:!0,hasServo:!0},{number:3,name:"D3",displayName:"GPIO3",hasPWM:!0,hasServo:!0},{number:4,name:"D4",displayName:"GPIO4",hasPWM:!0,hasServo:!0},{number:5,name:"D5",displayName:"GPIO5",hasPWM:!0,hasServo:!0},{number:6,name:"D6",displayName:"GPIO6",hasPWM:!0,hasServo:!0},{number:7,name:"D7",displayName:"GPIO7",hasPWM:!0,hasServo:!0},{number:8,name:"D8",displayName:"GPIO8",hasPWM:!0,hasServo:!0},{number:9,name:"D9",displayName:"GPIO9",hasPWM:!0,hasServo:!0},{number:10,name:"D10",displayName:"GPIO10 (SD CS)",hasPWM:!0,hasServo:!0},{number:11,name:"D11",displayName:"GPIO11",hasPWM:!0,hasServo:!0},{number:12,name:"D12",displayName:"GPIO12",hasPWM:!0,hasServo:!0},{number:13,name:"D13",displayName:"GPIO13",hasPWM:!0,hasServo:!0},{number:14,name:"D14",displayName:"GPIO14",hasPWM:!0,hasServo:!0},{number:15,name:"D15",displayName:"GPIO15",hasPWM:!0,hasServo:!0},{number:16,name:"D16",displayName:"GPIO16",hasPWM:!0,hasServo:!0},{number:17,name:"D17",displayName:"GPIO17",hasPWM:!0,hasServo:!0},{number:18,name:"D18",displayName:"GPIO18",hasPWM:!0,hasServo:!0},{number:19,name:"D19",displayName:"GPIO19",hasPWM:!0,hasServo:!0},{number:20,name:"D20",displayName:"GPIO20",hasPWM:!0,hasServo:!0},{number:21,name:"D21",displayName:"GPIO21",hasPWM:!0,hasServo:!0},{number:22,name:"D22",displayName:"GPIO22",hasPWM:!0,hasServo:!0},{number:23,name:"D23",displayName:"GPIO23",hasPWM:!0,hasServo:!0},{number:24,name:"D24",displayName:"GPIO24",hasPWM:!0,hasServo:!0},{number:25,name:"D25",displayName:"GPIO25",hasPWM:!0,hasServo:!0},{number:26,name:"D26",displayName:"GPIO26",hasPWM:!0,hasServo:!0},{number:27,name:"D27",displayName:"GPIO27",hasPWM:!0,hasServo:!0},{number:28,name:"D28",displayName:"GPIO28",hasPWM:!0,hasServo:!0},{number:29,name:"D29",displayName:"GPIO29",hasPWM:!0,hasServo:!0}],analogPins:[{name:"A0",displayName:"ADC0",direction:"INPUT"},{name:"A1",displayName:"ADC1",direction:"INPUT"},{name:"A2",displayName:"ADC2",direction:"INPUT"},{name:"A3",displayName:"ADC3",direction:"INPUT"}],defaultI2C:{i2cPortId:0,SCL:"D3",SDA:"D2"},sdCardCS:10,image:null}}};window.jsonComponentsObject={components:{ds18x20:[{id:"ds18b20",name:"ds18b20",description:"",category:"ds18x20",dataTypes:["ambient-temp","ambient-temp-fahrenheit"],image:"https://www.adafruit.com/images/480x360/374-01.jpg",productUrl:"https://www.adafruit.com/product/374"},{id:"ds18b20_hi_temp_waterproof",name:"ds18b20_hi_temp_waterproof",description:"",category:"ds18x20",dataTypes:["ambient-temp","ambient-temp-fahrenheit"],image:"https://www.adafruit.com/images/480x360/642-00.jpg",productUrl:"https://www.adafruit.com/product/642"},{id:"ds18b20_waterproof",name:"ds18b20_waterproof",description:"",category:"ds18x20",dataTypes:["ambient-temp","ambient-temp-fahrenheit"],image:"https://www.adafruit.com/images/480x360/381-01.jpg",productUrl:"https://www.adafruit.com/product/381"}],i2c:[{id:"adt7410",name:"adt7410",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit"],image:"https://www.adafruit.com/images/480x360/4089-05.jpg",productUrl:"https://www.adafruit.com/product/4089",address:"0x48",addresses:["0x48","0x49","0x4A","0x4B"]},{id:"aht20",name:"aht20",description:"Inexpensive temperature and humidity sensor for I2C-capable boards.",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","relative-humidity"],image:"https://www.adafruit.com/images/480x360/4566-04.jpg",productUrl:"https://www.adafruit.com/product/4566",address:"0x38",addresses:["0x38"]},{id:"aht21",name:"aht21",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","relative-humidity"],image:"components/i2c/aht21/image.jpg",address:"0x38",addresses:["0x38"]},{id:"am2301b",name:"am2301b",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","relative-humidity"],image:"https://www.adafruit.com/images/480x360/5181-05.jpg",productUrl:"https://www.adafruit.com/product/5181",address:"0x38",addresses:["0x38"]},{id:"am2315c",name:"am2315c",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","relative-humidity"],image:"https://www.adafruit.com/images/480x360/5182-05.jpg",productUrl:"https://www.adafruit.com/product/5182",address:"0x38",addresses:["0x38"]},{id:"bh1750",name:"bh1750",description:"",category:"i2c",dataTypes:["light"],image:"https://www.adafruit.com/images/480x360/4681-00.jpg",productUrl:"https://www.adafruit.com/product/4681",address:"0x23",addresses:["0x23","0x5C"]},{id:"bme280",name:"bme280",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","relative-humidity","pressure","altitude"],image:"https://www.adafruit.com/images/480x360/2652-04.jpg",productUrl:"https://www.adafruit.com/product/2652",address:"0x76",addresses:["0x76","0x77"]},{id:"bme680",name:"bme680",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","relative-humidity","pressure","altitude","gas-resistance"],image:"https://www.adafruit.com/images/480x360/3660-08.jpg",productUrl:"https://www.adafruit.com/product/3660",address:"0x76",addresses:["0x76","0x77"]},{id:"bme688",name:"bme688",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","relative-humidity","pressure","altitude","gas-resistance"],image:"https://www.adafruit.com/images/480x360/5046-05.jpg",productUrl:"https://www.adafruit.com/product/5046",address:"0x76",addresses:["0x76","0x77"]},{id:"bmp280",name:"bmp280",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","pressure","altitude"],image:"https://www.adafruit.com/images/480x360/2651-08.jpg",productUrl:"https://www.adafruit.com/product/2651",address:"0x76",addresses:["0x76","0x77"]},{id:"bmp388",name:"bmp388",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","pressure","altitude"],image:"https://www.adafruit.com/images/480x360/3966-10.jpg",productUrl:"https://www.adafruit.com/product/3966",address:"0x76",addresses:["0x76","0x77"]},{id:"bmp390",name:"bmp390",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","pressure","altitude"],image:"https://www.adafruit.com/images/480x360/4816-05.jpg",productUrl:"https://www.adafruit.com/product/4816",address:"0x76",addresses:["0x76","0x77"]},{id:"dht20",name:"dht20",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","relative-humidity"],image:"https://www.adafruit.com/images/480x360/5183-04.jpg",productUrl:"https://www.adafruit.com/product/5183",address:"0x38",addresses:["0x38"]},{id:"dps310",name:"dps310",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","pressure"],image:"https://www.adafruit.com/images/480x360/4494-05.jpg",productUrl:"https://www.adafruit.com/product/4494",address:"0x76",addresses:["0x76","0x77"]},{id:"ds2484",name:"ds2484",description:"Adafruit DS2484 I2C to 1-Wire Bus Adapter Breakout - Converts a single DS18b20 temperature sensor to I2C",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit"],image:"https://www.adafruit.com/images/480x360/5976-00.jpg",productUrl:"https://www.adafruit.com/product/5976",address:"0x18",addresses:["0x18"]},{id:"ens160",name:"ens160",description:"",category:"i2c",dataTypes:["tvoc","eco2",{displayName:"AQI",sensorType:"raw"}],image:"components/i2c/ens160/image.jpg",productUrl:"https://www.adafruit.com/product/5606",address:"0x52",addresses:["0x52","0x53"]},{id:"hdc302x",name:"hdc302x",description:"Precision temperature (\xC2\xB10.1\xC2\xB0C typical) and humidity sensors (\xC2\xB10.5% typ). HDC3020 / HDC3021 / HDC3022",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","relative-humidity"],image:"https://www.adafruit.com/images/480x360/5989-07.jpg",productUrl:"https://www.adafruit.com/product/5989",address:"0x44",addresses:["0x44","0x45","0x46","0x47"]},{id:"hts221",name:"hts221",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","relative-humidity"],image:"https://www.adafruit.com/images/480x360/4535-04.jpg",productUrl:"https://www.adafruit.com/product/4535",address:"0x5F",addresses:["0x5F"]},{id:"htu21d",name:"htu21d",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","relative-humidity"],image:"https://www.adafruit.com/images/480x360/1899-04.jpg",productUrl:"https://www.adafruit.com/product/1899",address:"0x40",addresses:["0x40"]},{id:"htu31d",name:"htu31d",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","relative-humidity"],image:"https://www.adafruit.com/images/480x360/2857-03.jpg",productUrl:"https://www.adafruit.com/product/2857",address:"0x40",addresses:["0x40","0x41"]},{id:"ina219",name:"ina219",description:"",category:"i2c",dataTypes:["voltage","current"],image:"https://www.adafruit.com/images/480x360/904-09.jpg",productUrl:"https://www.adafruit.com/product/904",address:"0x40",addresses:["0x40","0x41","0x44","0x45"]},{id:"lc709203f",name:"lc709203f",description:"",category:"i2c",dataTypes:[{displayName:"Battery Cell Voltage",sensorType:"voltage"},{displayName:"Battery Cell Percent",sensorType:"unitless-percent"}],image:"https://www.adafruit.com/images/480x360/4712-07.jpg",productUrl:"https://www.adafruit.com/product/4712",address:"0x0B",addresses:["0x0B"]},{id:"lps22hb",name:"lps22hb",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","pressure"],image:"https://www.adafruit.com/images/480x360/4633-09.jpg",productUrl:"https://www.adafruit.com/product/4633",address:"0x5C",addresses:["0x5C","0x5D"]},{id:"lps25hb",name:"lps25hb",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","pressure"],image:"components/i2c/lps25hb/image.jpg",productUrl:"https://www.adafruit.com/product/4530",address:"0x5C",addresses:["0x5C","0x5D"]},{id:"lps28dfw",name:"lps28dfw",description:"From 260 to 4060 hPa, this is our largest range pressure sensor (24bit).",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","pressure"],image:"components/i2c/lps28dfw/image.jpg",productUrl:"https://www.adafruit.com/product/6067",address:"0x5C",addresses:["0x5C","0x5D"]},{id:"lps33hw",name:"lps33hw",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","pressure"],image:"components/i2c/lps33hw/image.jpg",productUrl:"https://www.adafruit.com/product/4414",address:"0x5C",addresses:["0x5C","0x5D"]},{id:"lps35hw",name:"lps35hw",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","pressure"],image:"https://www.adafruit.com/images/480x360/4258-10.jpg",productUrl:"https://www.adafruit.com/product/4258",address:"0x5C",addresses:["0x5C","0x5D"]},{id:"ltr303",name:"ltr303",description:"",category:"i2c",dataTypes:[{displayName:"Ambient Light",sensorType:"light"},{displayName:"Infrared",sensorType:"raw"}],image:"components/i2c/ltr303/image.jpg",productUrl:"https://www.adafruit.com/product/5610",address:"0x29",addresses:["0x29"]},{id:"ltr329",name:"ltr329",description:"",category:"i2c",dataTypes:[{displayName:"Ambient Light",sensorType:"light"},{displayName:"Infrared",sensorType:"raw"}],image:"components/i2c/ltr329/image.jpg",productUrl:"https://www.adafruit.com/product/5591",address:"0x29",addresses:["0x29"]},{id:"ltr390",name:"ltr390",description:"",category:"i2c",dataTypes:[{displayName:"Ambient Light",sensorType:"light"},{displayName:"UV Count",sensorType:"raw"}],image:"components/i2c/ltr390/image.jpg",productUrl:"https://www.adafruit.com/product/4831",address:"0x53",addresses:["0x53"]},{id:"max17048",name:"max17048",description:"",category:"i2c",dataTypes:[{displayName:"Battery Cell Voltage",sensorType:"voltage"},{displayName:"Battery Cell Percent",sensorType:"unitless-percent"}],image:"https://www.adafruit.com/images/480x360/5580-06.jpg",productUrl:"https://www.adafruit.com/product/5580",address:"0x36",addresses:["0x36"]},{id:"mcp3421",name:"mcp3421",description:"18-bit ADC. Great for Strain Gauges, Thermocouples and Pressure sensors, between 0 and 2.048 volts",category:"i2c",dataTypes:[{displayName:"ADC Reading",sensorType:"raw"}],image:"components/i2c/mcp3421/image.jpg",productUrl:"https://www.adafruit.com/product/5870",address:"0x68",addresses:["0x68"]},{id:"mcp9601",name:"mcp9601",description:"Thermocouple / ambient temperature sensor. *Note* Needs hotplugging after i2c scans + selecting component!",category:"i2c",dataTypes:[{displayName:"Ambient Temperature (\xC2\xB0C)",sensorType:"ambient-temp"},{displayName:"Ambient Temperature (\xC2\xB0F)",sensorType:"ambient-temp-fahrenheit"},{displayName:"Type K Thermocouple (\xC2\xB0C)",sensorType:"raw"}],image:"https://www.adafruit.com/images/480x360/5165-05",productUrl:"https://www.adafruit.com/product/5165",address:"0x60",addresses:["0x60","0x61","0x62","0x63","0x64","0x65","0x66","0x67"]},{id:"mcp9808",name:"mcp9808",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit"],image:"https://www.adafruit.com/images/480x360/1782-03.jpg",productUrl:"https://www.adafruit.com/product/1782",address:"0x18",addresses:["0x18","0x19","0x1A","0x1B","0x1C","0x1D","0x1E","0x1F"]},{id:"mpl115a2",name:"mpl115a2",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","pressure"],image:"https://www.adafruit.com/images/480x360/992-06.jpg",productUrl:"https://www.adafruit.com/product/992",address:"0x60",addresses:["0x60"]},{id:"mprls",name:"mprls",description:"",category:"i2c",dataTypes:["pressure"],image:"https://www.adafruit.com/images/480x360/3965-04.jpg",productUrl:"https://www.adafruit.com/product/3965",address:"0x18",addresses:["0x18"]},{id:"ms8607",name:"ms8607",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","relative-humidity","pressure"],image:"https://www.adafruit.com/images/480x360/4716-01.jpg",productUrl:"https://www.adafruit.com/product/4716",address:"0x40",addresses:["0x40","0x76"]},{id:"nau7802",name:"nau7802",description:"24-bit ADC with 128x gain, used with a load cell for weight/force sensing",category:"i2c",dataTypes:[{displayName:"Weight Sensor",sensorType:"raw"}],image:"components/i2c/nau7802/image.jpg",productUrl:"https://www.adafruit.com/product/4538",address:"0x2A",addresses:["0x2A"]},{id:"pct2075",name:"pct2075",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit"],image:"components/i2c/pct2075/image.jpg",productUrl:"https://www.adafruit.com/product/4369",address:"0x48",addresses:["0x48","0x49","0x4A","0x4B","0x4C","0x4D","0x4E","0x4F","0x70","0x71","0x72","0x73","0x74","0x75","0x76","0x77","0x28","0x29","0x2A","0x2B","0x2C","0x2D","0x2E","0x2F","0x35","0x36","0x37"]},{id:"pmsa003i",name:"pmsa003i",description:"",category:"i2c",dataTypes:["pm10-std","pm25-std","pm100-std"],image:"https://www.adafruit.com/images/480x360/4632-10.jpg",productUrl:"https://www.adafruit.com/product/4632",address:"0x12",addresses:["0x12"]},{id:"rotary_encoder",name:"rotary_encoder",description:"",category:"i2c",dataTypes:[{displayName:"Rotary Encoder Value",sensorType:"raw"}],image:"components/i2c/rotary_encoder/image.jpeg",productUrl:"https://www.adafruit.com/product/4991",address:"0x36",addresses:["0x36","0x37","0x38","0x39","0x3A","Ox3B","0x3C","0x3D"]},{id:"scd30",name:"scd30",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","relative-humidity","co2"],image:"https://www.adafruit.com/images/480x360/4867-05",productUrl:"https://www.adafruit.com/product/4867",address:"0x61",addresses:["0x61"]},{id:"scd40",name:"scd40",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","relative-humidity","co2"],image:"https://www.adafruit.com/images/480x360/5187-08.jpg",productUrl:"https://www.adafruit.com/product/5187",address:"0x62",addresses:["0x62"]},{id:"sen50",name:"sen50",description:"",category:"i2c",dataTypes:["pm10-std","pm25-std","pm100-std"],image:"components/i2c/sen50/image.png",productUrl:"https://www.digikey.com/en/products/filter/gas-sensors/530?s=N4IgjCBcoLQCxVAYygMwIYBsDOBTANCAPZQDa4ADFRQgLoC%2BjQA",address:"0x69",addresses:["0x69"]},{id:"sen54",name:"sen54",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","relative-humidity","pm10-std","pm25-std","pm100-std","voc-index"],image:"components/i2c/sen54/image.png",productUrl:"https://www.digikey.com/en/products/filter/gas-sensors/530?s=N4IgjCBcoLQCxVAYygMwIYBsDOBTANCAPZQDa4ADFRQgLoC%2BjQA",address:"0x69",addresses:["0x69"]},{id:"sen55",name:"sen55",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","relative-humidity","pm10-std","pm25-std","pm100-std","voc-index","nox-index"],image:"components/i2c/sen55/image.png",productUrl:"https://www.digikey.com/en/products/filter/gas-sensors/530?s=N4IgjCBcoLQCxVAYygMwIYBsDOBTANCAPZQDa4ADFRQgLoC%2BjQA",address:"0x69",addresses:["0x69"]},{id:"sen5x",name:"sen5x",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","relative-humidity","pm10-std","pm25-std","pm100-std","voc-index","nox-index"],image:"components/i2c/sen5x/image.png",productUrl:"https://www.digikey.com/en/products/filter/gas-sensors/530?s=N4IgjCBcoLQCxVAYygMwIYBsDOBTANCAPZQDa4ADFRQgLoC%2BjQA",address:"0x69",addresses:["0x69"]},{id:"sen66",name:"sen66",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","relative-humidity","pm10-std","pm25-std","pm100-std","voc-index","nox-index","co2"],image:"components/i2c/sen66/image.png",productUrl:"https://www.digikey.com/en/products/detail/sensirion-ag/SEN66-SIN-T/25700945?s=N4IgTCBcDaIMoFEByA2FIC6BfIA",address:"0x6B",addresses:["0x6B"]},{id:"sgp30",name:"sgp30",description:"",category:"i2c",dataTypes:["eco2","tvoc"],image:"https://www.adafruit.com/images/480x360/3709-07.jpg",productUrl:"https://www.adafruit.com/product/3709",address:"0x58",addresses:["0x58"]},{id:"sgp40",name:"sgp40",description:"",category:"i2c",dataTypes:["voc-index",{displayName:"Raw (For Reference Only)",sensorType:"raw"}],image:"https://www.adafruit.com/images/480x360/4829-06.jpg",productUrl:"https://www.adafruit.com/product/4829",address:"0x59",addresses:["0x59"]},{id:"sht20",name:"sht20",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","relative-humidity"],image:"components/i2c/sht20/image.jpg",productUrl:"https://www.digikey.com/en/products/detail/dfrobot/SEN0227/7897986",address:"0x40",addresses:["0x40"]},{id:"sht30_mesh",name:"sht30_mesh",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","relative-humidity"],image:"https://www.adafruit.com/images/480x360/4099-09.jpg",productUrl:"https://www.adafruit.com/product/4099",address:"0x44",addresses:["0x44"]},{id:"sht30_shell",name:"sht30_shell",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","relative-humidity"],image:"https://www.adafruit.com/images/480x360/5064-00.jpg",productUrl:"https://www.adafruit.com/product/5064",address:"0x44",addresses:["0x44"]},{id:"sht3x",name:"sht3x",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","relative-humidity"],image:"https://www.adafruit.com/images/480x360/2857-03.jpg",productUrl:"https://www.adafruit.com/product/2857",address:"0x44",addresses:["0x44","0x45"]},{id:"sht40",name:"sht40",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","relative-humidity"],image:"https://www.adafruit.com/images/480x360/4885-05.jpg",productUrl:"https://www.adafruit.com/product/4885",address:"0x44",addresses:["0x44"]},{id:"sht41",name:"sht41",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","relative-humidity"],image:"https://www.adafruit.com/images/480x360/5776-05.jpg",productUrl:"https://www.adafruit.com/product/5776",address:"0x44",addresses:["0x44"]},{id:"sht45",name:"sht45",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","relative-humidity"],image:"https://www.adafruit.com/images/480x360/5665-00.jpg",productUrl:"https://www.adafruit.com/product/5665",address:"0x44",addresses:["0x44"]},{id:"shtc3",name:"shtc3",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","relative-humidity"],image:"https://www.adafruit.com/images/480x360/4636-05.jpg",productUrl:"https://www.adafruit.com/product/4636",address:"0x70",addresses:["0x70"]},{id:"si7021",name:"si7021",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit","relative-humidity"],image:"https://www.adafruit.com/images/480x360/3251-08.jpg",productUrl:"https://www.adafruit.com/product/3251",address:"0x40",addresses:["0x40"]},{id:"stemma_soil",name:"stemma_soil",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit",{displayName:"Capacitive Sensor",sensorType:"raw"}],image:"https://www.adafruit.com/images/480x360/4026-01.jpg",productUrl:"https://www.adafruit.com/product/4026",address:"0x36",addresses:["0x36","0x37","0x38","0x39"]},{id:"tc74a0",name:"tc74a0",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit"],image:"https://www.adafruit.com/images/480x360/4375-03.jpg",productUrl:"https://www.adafruit.com/product/4375",address:"0x48",addresses:["0x48"]},{id:"tmp117",name:"tmp117",description:"",category:"i2c",dataTypes:["ambient-temp","ambient-temp-fahrenheit"],image:"components/i2c/tmp117/image.jpg",productUrl:"https://www.adafruit.com/product/4821",address:"0x48",addresses:["0x48","0x49","0x4A","0x4B"]},{id:"tsl2591",name:"tsl2591",description:"",category:"i2c",dataTypes:["light"],image:"https://www.adafruit.com/images/480x360/1980-08.jpg",productUrl:"https://www.adafruit.com/product/1980",address:"0x29",addresses:["0x29","0x39","0x49"]},{id:"vcnl4020",name:"vcnl4020",description:"Proximity sensor works from 0 to 200mm (about 7.5 inches) & light sensor with range of 0.26 to 16,000 lux.",category:"i2c",dataTypes:["light","proximity"],image:"components/i2c/vcnl4020/image.jpg",productUrl:"https://www.adafruit.com/product/5810",address:"0x13",addresses:["0x13"]},{id:"vcnl4040",name:"vcnl4040",description:"Proximity sensor works from 0 to 200mm (about 7.5 inches) & light sensor with range of 0.0125 to 6,553.5 lux",category:"i2c",dataTypes:["light","proximity"],image:"https://www.adafruit.com/images/480x360/4161-06.jpg",productUrl:"https://www.adafruit.com/product/4161",address:"0x60",addresses:["0x60"]},{id:"vcnl4200",name:"vcnl4200",description:"Proximity sensor works from 0 to 1.5m (about 59 inches) & light sensor with range of 0.003 to 1570 lux",category:"i2c",dataTypes:["light","proximity"],image:"https://www.adafruit.com/images/480x360/6064-00.jpg",productUrl:"https://www.adafruit.com/product/6064",address:"0x51",addresses:["0x51"]},{id:"veml7700",name:"veml7700",description:"",category:"i2c",dataTypes:["light"],image:"https://www.adafruit.com/images/480x360/4162-10.jpg",productUrl:"https://www.adafruit.com/product/4162",address:"0x10",addresses:["0x10"]},{id:"vl53l0x",name:"vl53l0x",description:"Time of Flight (ToF) distance sensor with about ~50 to 1200mm range",category:"i2c",dataTypes:[{displayName:"ToF Sensor",sensorType:"proximity"}],image:"components/i2c/vl53l0x/image.jpg",productUrl:"https://www.adafruit.com/product/3317",address:"0x29",addresses:["0x29"]},{id:"vl53l1x",name:"vl53l1x",description:"Time of Flight (ToF) distance sensor with about ~30 to 4000mm range",category:"i2c",dataTypes:[{displayName:"ToF Sensor",sensorType:"proximity"}],image:"components/i2c/vl53l1x/image.jpg",productUrl:"https://www.adafruit.com/product/3967",address:"0x29",addresses:["0x29"]},{id:"vl53l4cd",name:"vl53l4cd",description:"Time of Flight (ToF) distance sensor with about ~1 to 1300mm range",category:"i2c",dataTypes:[{displayName:"ToF Sensor",sensorType:"proximity"}],image:"components/i2c/vl53l4cd/image.jpg",productUrl:"https://www.adafruit.com/product/5396",address:"0x29",addresses:["0x29"]},{id:"vl53l4cx",name:"vl53l4cx",description:"Time of Flight (ToF) distance sensor with about ~1 to 6000mm range + 'multi object detection'",category:"i2c",dataTypes:[{displayName:"ToF Sensor - Object 1",sensorType:"proximity"},{displayName:"ToF Sensor - Object 2",sensorType:"raw"}],image:"https://www.adafruit.com/images/480x360/5425-02.jpg",productUrl:"https://www.adafruit.com/product/5425",address:"0x29",addresses:["0x29"]},{id:"vl6180x",name:"vl6180x",description:"Time of Flight (ToF) distance sensor with about ~5 to 200mm range",category:"i2c",dataTypes:[{displayName:"ToF Sensor",sensorType:"proximity"},"light"],image:"components/i2c/vl6180x/image.jpg",productUrl:"https://www.adafruit.com/product/3316",address:"0x29",addresses:["0x29"]}],pin:[{id:"analog_pin",name:"analog_pin",description:"",category:"pin",dataTypes:[],image:"components/pin/analog_pin/image.png"},{id:"beam_break_sensor",name:"beam_break_sensor",description:"",category:"pin",dataTypes:[],image:"https://www.adafruit.com/images/480x360/2168-04.jpg",productUrl:"https://www.adafruit.com/product/2168"},{id:"buzzer_5v",name:"buzzer_5v",description:"",category:"pin",dataTypes:[],image:"https://www.adafruit.com/images/480x360/1536-06.jpg",productUrl:"https://www.adafruit.com/product/1536"},{id:"etape_liquid_level_sensor",name:"etape_liquid_level_sensor",description:"",category:"pin",dataTypes:[],image:"https://www.adafruit.com/images/480x360/2656-03",productUrl:"https://www.adafruit.com/product/2656"},{id:"flat_vibration_switch",name:"flat_vibration_switch",description:"",category:"pin",dataTypes:[],image:"https://www.adafruit.com/images/480x360/4081-00.jpg",productUrl:"https://www.adafruit.com/product/4081"},{id:"hall_effect_sensor",name:"hall_effect_sensor",description:"",category:"pin",dataTypes:[],image:"https://www.adafruit.com/images/480x360/158-00.jpg",productUrl:"https://www.adafruit.com/product/158"},{id:"led",name:"led",description:"",category:"pin",dataTypes:[],image:"https://www.adafruit.com/images/480x360/301-00.jpg",productUrl:"https://www.adafruit.com/product/301"},{id:"light_sensor",name:"light_sensor",description:"",category:"pin",dataTypes:[],image:"https://www.adafruit.com/images/480x360/161-00.jpg",productUrl:"https://www.adafruit.com/product/161"},{id:"mosfet_driver",name:"mosfet_driver",description:"",category:"pin",dataTypes:[],image:"https://www.adafruit.com/images/480x360/5648-07",productUrl:"https://www.adafruit.com/product/5648"},{id:"non_latching_relay",name:"non_latching_relay",description:"",category:"pin",dataTypes:[],image:"https://www.adafruit.com/images/480x360/4409-05",productUrl:"https://www.adafruit.com/product/4409"},{id:"pir_sensor",name:"pir_sensor",description:"",category:"pin",dataTypes:[],image:"https://www.adafruit.com/images/480x360/189-00.jpg",productUrl:"https://www.adafruit.com/product/189"},{id:"potentiometer",name:"potentiometer",description:"",category:"pin",dataTypes:[],image:"https://www.adafruit.com/images/480x360/356-03.jpg",productUrl:"https://www.adafruit.com/product/356"},{id:"power_switch_tail",name:"power_switch_tail",description:"",category:"pin",dataTypes:[],image:"https://www.adafruit.com/images/480x360/2935-13.jpg",productUrl:"https://www.adafruit.com/product/2935"},{id:"push_button",name:"push_button",description:"",category:"pin",dataTypes:[],image:"https://www.adafruit.com/images/480x360/367-01.jpg",productUrl:"https://www.adafruit.com/product/367"},{id:"reed_switch",name:"reed_switch",description:"",category:"pin",dataTypes:[],image:"https://www.adafruit.com/images/480x360/375-01.jpg",productUrl:"https://www.adafruit.com/product/375"},{id:"tctr1000",name:"tctr1000",description:"Optical reflective sensor with digital output, 1-30mm range, and adjustable LED emitter brightness",category:"pin",dataTypes:[],image:"components/pin/tctr1000/image.jpg",productUrl:"https://www.adafruit.com/product/5913"},{id:"toggle_switch",name:"toggle_switch",description:"",category:"pin",dataTypes:[],image:"https://www.adafruit.com/images/480x360/3221-01.jpg",productUrl:"https://www.adafruit.com/product/3221"},{id:"water_sensor",name:"water_sensor",description:"",category:"pin",dataTypes:[],image:"https://www.adafruit.com/images/480x360/4965-03",productUrl:"https://www.adafruit.com/product/4965"}],pixel:[{id:"dotstar",name:"dotstar",description:"",category:"pixel",dataTypes:[],image:"https://www.adafruit.com/images/480x360/2343-03.jpg",productUrl:"https://www.adafruit.com/product/2343"},{id:"neopixel",name:"neopixel",description:"",category:"pixel",dataTypes:[],image:"components/pixel/neopixel/image.jpg",productUrl:"http://www.adafruit.com/category/168"},{id:"neorgb",name:"neorgb",description:"Speak NeoPixel to your RGB strips! Treat PWM-able common-anode LEDs as a NeoPixel [16V/3A/channel]",category:"pixel",dataTypes:[],image:"https://www.adafruit.com/images/480x360/5888-10.jpg",productUrl:"https://www.adafruit.com/product/5888"}],pwm:[{id:"dimmable_led",name:"dimmable_led",description:"",category:"pwm",dataTypes:[],image:"https://www.adafruit.com/images/480x360/301-00.jpg",productUrl:"https://www.adafruit.com/product/301"},{id:"piezo_buzzer",name:"piezo_buzzer",description:"",category:"pwm",dataTypes:[],image:"https://www.adafruit.com/images/480x360/160-01.jpg",productUrl:"https://www.adafruit.com/product/160"},{id:"rgb_led",name:"rgb_led",description:"",category:"pwm",dataTypes:[],image:"https://www.adafruit.com/images/480x360/302-00.jpg",productUrl:"https://www.adafruit.com/product/302"}],servo:[{id:"servo",name:"servo",description:"",category:"servo",dataTypes:[],image:"https://www.adafruit.com/images/480x360/169-06.jpg",productUrl:"https://www.adafruit.com/product/169"}],uart:[{id:"pm1006",name:"pm1006",description:"",category:"uart",dataTypes:["pm25-env"],image:"components/uart/pm1006/image.png",productUrl:"https://www.ikea.com/us/en/p/vindriktning-air-quality-sensor-60515911/"},{id:"pms5003",name:"pms5003",description:"",category:"uart",dataTypes:["pm10-std","pm25-std","pm100-std","pm10-env","pm25-env","pm100-env"],image:"https://www.adafruit.com/images/480x360/3686-04",productUrl:"https://www.adafruit.com/product/3686"}],ds18x20_metadata:{title:"DS18X20 Component Definition",description:"A DS18X20 WipperSnapper component for use in Adafruit IO",required:["displayName","vendor","subcomponents","sensorResolution"],properties:{displayName:{description:"The human-friendly name of this component.",type:"string",minLength:3,maxLength:30},published:{description:"If true, this component is supported by the current firmware version and will be displayed to all users. If false, it is hidden behind a developer toggle so that contributors can still work on it against the production site.",type:"boolean"},description:{description:"A brief description describing this component's capabilities.",type:"string",minLength:3,maxLength:255},productURL:{description:"Link to this component's homepage.",type:"string",format:"uri"},documentationURL:{description:"Link to this component's documentation.",type:"string",format:"uri"},vendor:{description:"Name of the company that makes this component.",type:"string",minLength:3,maxLength:24},subcomponents:{description:"The ambient temperature sensor (and its fahrenheit counterpart) standard on DS18X20 Components",type:"array",items:{type:"string",pattern:"^ambient-temp(-fahrenheit)?$"}},sensorResolution:{description:"The DS18X20's desired sensor read resolution, in bits.",type:"number",minimum:9,maximum:12}}},i2c_metadata:{title:"I2C Component Definition",description:"An I2C-based WipperSnapper component for use in Adafruit IO",required:["displayName","vendor","i2cAddresses","subcomponents"],properties:{displayName:{description:"The human-friendly name of this component.",type:"string",minLength:3,maxLength:24},published:{description:"If true, this component is supported by the current firmware version and will be displayed to all users. If false, it is hidden behind a developer toggle so that contributors can still work on it against the production site.",type:"boolean"},description:{description:"A brief description describing this component's capabilities.",type:"string",minLength:3,maxLength:255},productURL:{description:"Link to this component's homepage.",type:"string",format:"uri"},documentationURL:{description:"Link to this component's documentation.",type:"string",format:"uri"},vendor:{description:"Name of the company that makes this component.",type:"string",minLength:3,maxLength:24},i2cAddresses:{description:"List of I2C addresses (as hex string, like \"0x38\") this component can appear on.",type:"array",items:{type:"string"}},subcomponents:{description:"List of sensors on this I2C component.",type:"array",items:{$ref:"#/$defs/subcomponent"}}}},pin_metadata:{title:"Pin Component Definition",description:"A pin-based WipperSnapper component for use in Adafruit IO",required:["displayName","vendor","mode","direction"],properties:{displayName:{description:"The human-friendly name of this component.",type:"string",minLength:3,maxLength:24},published:{description:"If true, this component is supported by the current firmware version and will be displayed to all users. If false, it is hidden behind a developer toggle so that contributors can still work on it against the production site.",type:"boolean"},description:{description:"A brief description describing this component's capabilities.",type:"string",minLength:3,maxLength:255},productURL:{description:"Link to this component's homepage.",type:"string",format:"uri"},documentationURL:{description:"Link to this component's documentation.",type:"string",format:"uri"},vendor:{description:"Name of the company that makes this component.",type:"string",minLength:3,maxLength:24},mode:{description:"This component's mode, either DIGITAL or ANALOG.",type:"string",pattern:"^(DIGITAL|ANALOG)$"},direction:{description:"This component's direction, either INPUT or OUTPUT.",type:"string",pattern:"^(INPUT|OUTPUT)$"},autoSelectString:{description:"A hint for automatically looking up pin names that may be appropriate for this kind of component.",type:"string",minLength:3,maxLength:24},selectPullUp:{description:"If true, the user will be able to select pull up or down options.",type:"boolean"},pull:{description:"This component's pull setting, either UP or DOWN.",type:"string",pattern:"^(UP|DOWN)$"},selectReadMode:{description:"If true, the user will be able to select the read mode between pin and voltage options.",type:"boolean"},analogReadMode:{description:"For ANALOG mode components, specifies whether to read values (PIN_VALUE) or voltages (PIN_VOLTAGE). Will be a default if `selectReadMode` option is true.",type:"string",pattern:"^(PIN_VALUE|PIN_VOLTAGE)$"},defaultPeriod:{description:"If present, the component form will allow the user to set its period, with this value as the default (in seconds)",type:"number",minimum:30,maximum:86400},forceOnPeriod:{description:"If true, the user must specify a period (won't be optional in the form).",type:"boolean"},visualization:{description:"Specifies which visual component to use in the WipperSnapper interface and how to configure it",type:"object",discriminator:{propertyName:"type"},required:["type"],oneOf:[{properties:{type:{const:"switch"},offLabel:{type:"string"},offIcon:{type:"string"},onLabel:{type:"string"},onIcon:{type:"string"}},additionalProperties:!1},{properties:{type:{const:"button"},pressedLabel:{type:"string"},unpressedLabel:{type:"string"}},additionalProperties:!1},{properties:{type:{const:"slider"}},additionalProperties:!1}]}}},pixel_metadata:{title:"Pixel Component Definition",description:"Addressable Pixel WipperSnapper component for use in Adafruit IO",required:["displayName","vendor","pixelsType","defaultPixelsOrder"],properties:{displayName:{description:"The human-friendly name of this component.",type:"string",minLength:3,maxLength:24},published:{description:"If True, this component is supported by the current firmware version and will be displayed to all users. Otherwise, it is hidden behind a developer toggle so that contributors can still work on it against the production site.",type:"boolean"},description:{description:"A brief description describing this component's capabilities.",type:"string",minLength:3,maxLength:255},productURL:{description:"Link to this component's homepage.",type:"string",format:"uri"},documentationURL:{description:"Link to this component's documentation.",type:"string",format:"uri"},vendor:{description:"Name of the company that makes this component.",type:"string",minLength:3,maxLength:24},pixelsType:{description:"The type of addressable pixel: NEOPIXEL or DOTSTAR. Corresponds to `PixelsType` in pixels.proto",type:"string",pattern:"^(NEOPIXEL|DOTSTAR)$"},defaultPixelsOrder:{description:"The pixel strand's color ordering. Corresponds to `PixelsOrder` in pixels.proto.",type:"string",pattern:"^(GRB|GRBW|RGB|RGBW|BRG)$"},autoSelectString:{description:"A hint for automatically looking up pin names that may be appropriate for this kind of component.",type:"string",minLength:3,maxLength:24}}},pwm_metadata:{title:"PWM Component Definition",description:"A PWM WipperSnapper component for use in Adafruit IO",required:["displayName","vendor","pwmSetting"],properties:{displayName:{description:"The human-friendly name of this component.",type:"string",minLength:3,maxLength:24},published:{description:"If true, this component is supported by the current firmware version and will be displayed to all users. If false, it is hidden behind a developer toggle so that contributors can still work on it against the production site.",type:"boolean"},description:{description:"A brief description describing this component's capabilities.",type:"string",minLength:3,maxLength:255},productURL:{description:"Link to this component's homepage.",type:"string",format:"uri"},documentationURL:{description:"Link to this component's documentation.",type:"string",format:"uri"},vendor:{description:"Name of the company that makes this component.",type:"string",minLength:3,maxLength:24},pwmSetting:{description:"The component's pulse-width modulation setting. Either fixed frequency (variable duty cycle) or variable frequency (fixed duty cycle)",type:"string",pattern:"^(fixed|variable)Frequency$"},visualization:{description:"Specifies which visual component to use in the WipperSnapper interface and how to configure it",type:"object",discriminator:{propertyName:"type"},required:["type"],oneOf:[{properties:{type:{const:"switch-pwm"},offLabel:{type:"string"},offIcon:{type:"string"},onLabel:{type:"string"},onIcon:{type:"string"}},additionalProperties:!1},{properties:{type:{const:"button"},pressedLabel:{type:"string"},unpressedLabel:{type:"string"}},additionalProperties:!1},{properties:{type:{const:"slider-pwm"}},additionalProperties:!1},{properties:{type:{const:"color-picker"}},additionalProperties:!1}]}}},servo_metadata:{title:"Servo Component Definition",description:"A servo motor WipperSnapper component for use in Adafruit IO",required:["displayName","vendor","frequency","minPulseWidth","maxPulseWidth"],properties:{displayName:{description:"The human-friendly name of the servo component.",type:"string",minLength:3,maxLength:24},published:{description:"If true, this component is supported by the current firmware version and will be displayed to all users. If false, it is hidden behind a developer toggle so that contributors can still work on it against the production site.",type:"boolean"},description:{description:"A brief description describing this component's capabilities.",type:"string",minLength:3,maxLength:255},productURL:{description:"Link to this component's homepage.",type:"string",format:"uri"},documentationURL:{description:"Link to this component's documentation.",type:"string",format:"uri"},vendor:{description:"Name of the company that makes this component.",type:"string",minLength:3,maxLength:24},frequency:{description:"The desired frequency of the PWM signal, in Hz.",type:"number",default:50,minimum:40,maximum:200},minPulseWidth:{description:"The minimum pulse width of the servo, in uS.",type:"number"},maxPulseWidth:{description:"The maximum pulse width of the servo, in uS.",type:"number"},visualization:{description:"Specifies the servo's specific visualization.",type:"object",required:["type"],additionalProperties:!1,properties:{type:{const:"slider-servo"}}}}},uart_metadata:{title:"UART Component Definition",description:"A UART WipperSnapper component for use in Adafruit IO",required:["displayName","vendor","subcomponents","baudRate"],properties:{displayName:{description:"The human-friendly name of this component.",type:"string",minLength:3,maxLength:30},published:{description:"If True, this component is supported by the current firmware version and will be displayed to all users. Otherwise, it is hidden behind a developer toggle so that contributors can still work on it against the production site.",type:"boolean"},description:{description:"A brief description describing this component's capabilities.",type:"string",minLength:3,maxLength:255},productURL:{description:"Link to this component's homepage.",type:"string",format:"uri"},documentationURL:{description:"Link to this component's documentation.",type:"string",format:"uri"},vendor:{description:"Name of the company that makes this component.",type:"string",minLength:3,maxLength:24},subcomponents:{description:"List of sensor subcomponents comprising the primary UART component.",type:"array",items:{$ref:"#/$defs/subcomponent"}},baudRate:{description:"The desired UART bus baud rate, in bps.",type:"number",minimum:1200,maximum:256e3},inverted:{description:"When True, this component will invert TX/RX signals on the UART bus.",type:"boolean"}}}}};const companionBoardConfigs={adalogger:{rtc:"PCF8523",sdCardCS:10,extras:"SD Card"},"datalogger-m0":{rtc:"PCF8523",sdCardCS:10,extras:"SD Card"},"ds3231-precision":{rtc:"DS3231",sdCardCS:null,extras:"Precision RTC"},"picowbell-adalogger":{rtc:"PCF8523",sdCardCS:9,extras:"SD Card, STEMMA QT"},"datalogger-shield-revb":{rtc:"PCF8523",sdCardCS:10,extras:"SD Card"},"datalogger-shield-reva":{rtc:"DS1307",sdCardCS:10,extras:"SD Card"},"audio-bff":{rtc:null,sdCardCS:"A0",extras:"Audio"},"microsd-bff":{rtc:null,sdCardCS:"TX",extras:"SD Card"},"winc1500-shield":{rtc:null,sdCardCS:"D4",extras:"WiFi"},"airlift-shield":{rtc:null,sdCardCS:"D4",extras:"WiFi"}};let customBoardsCollection={};function addCustomBoard(e,a){if(!e||"string"!=typeof e)return console.error("Invalid board ID"),!1;customBoardsCollection[e]={name:a.name||e,referenceVoltage:a.referenceVoltage||3.3,totalGPIOPins:a.totalGPIOPins||0,totalAnalogPins:a.totalAnalogPins||0,defaultI2C:{scl:a.defaultI2C?.scl||"SCL",sda:a.defaultI2C?.sda||"SDA"},pins:a.pins||[]},appState.boardsData[e]=customBoardsCollection[e];const s=document.getElementById("board-select");if(s){const t=document.createElement("option");t.value=e,t.textContent=a.name||`Custom Board: ${e}`,s.appendChild(t)}return!0}"undefined"==typeof appState&&(window.appState={selectedBoard:null,companionBoard:null,sdCardCS:null,rtcType:"soft",statusLEDBrightness:.5,i2cBuses:[],i2cMultiplexers:[],selectedComponents:[],usedPins:new Set,nextComponentId:1,componentsData:{i2c:[],ds18x20:[],pin:[],pixel:[],pwm:[],servo:[],uart:[]},boardsData:{},isImporting:!1});let componentsData=appState.componentsData;document.addEventListener("DOMContentLoaded",function(){document.getElementById("loading-indicator").classList.add("hidden"),document.getElementById("board-select").addEventListener("change",function(){const e=this.value;if(!e)return document.getElementById("board-details").classList.add("hidden"),void hideSubsequentSections();const a=appState.boardsData[e];appState.selectedBoard={id:e,...a},document.getElementById("ref-voltage").textContent=a.referenceVoltage,document.getElementById("total-gpio").textContent=a.totalGPIOPins,document.getElementById("total-analog").textContent=a.totalAnalogPins,document.getElementById("default-scl").textContent=a.defaultI2C.scl,document.getElementById("default-sda").textContent=a.defaultI2C.sda,document.getElementById("board-details").classList.remove("hidden"),appState.i2cBuses=[{id:"default",scl:a.defaultI2C.scl,sda:a.defaultI2C.sda}],document.getElementById("default-i2c-scl").textContent=a.defaultI2C.scl,document.getElementById("default-i2c-sda").textContent=a.defaultI2C.sda,appState.usedPins.add(a.defaultI2C.scl),appState.usedPins.add(a.defaultI2C.sda),document.getElementById("companion-board-section").classList.remove("hidden"),document.getElementById("manual-config-section").classList.remove("hidden"),document.getElementById("i2c-bus-section").classList.remove("hidden"),document.getElementById("components-section").classList.remove("hidden"),document.getElementById("selected-components-section").classList.remove("hidden"),document.getElementById("generate-section").classList.remove("hidden"),document.getElementById("companion-board-select").value="",document.getElementById("companion-details").classList.add("hidden"),initializeManualConfig(),populatePinsLists(),populateComponentLists()}),document.getElementById("companion-board-select").addEventListener("change",function(){const e=this.value;if(appState.companionBoard=e?{id:e,...companionBoardConfigs[e]}:null,e){const a=companionBoardConfigs[e];document.getElementById("companion-rtc").textContent=a.rtc||"None",document.getElementById("companion-sd-cs").textContent=null===a.sdCardCS?"None":a.sdCardCS,document.getElementById("companion-extras").textContent=a.extras,document.getElementById("companion-details").classList.remove("hidden"),null===a.sdCardCS?(document.getElementById("sd-missing").classList.remove("hidden"),document.getElementById("sd-present").classList.add("hidden"),appState.sdCardCS=null):(appState.sdCardCS=a.sdCardCS,document.getElementById("sd-missing").classList.add("hidden"),document.getElementById("sd-present").classList.remove("hidden"),document.getElementById("sd-cs-pin").textContent=a.sdCardCS,appState.usedPins.add(a.sdCardCS)),a.rtc?(appState.rtcType=a.rtc,document.getElementById("rtc-missing").classList.add("hidden"),document.getElementById("rtc-present").classList.remove("hidden"),document.getElementById("rtc-type").textContent=a.rtc):(document.getElementById("rtc-missing").classList.remove("hidden"),document.getElementById("rtc-present").classList.add("hidden"),appState.rtcType="soft",document.getElementById("rtc-select").value="soft")}else document.getElementById("companion-details").classList.add("hidden"),document.getElementById("sd-missing").classList.remove("hidden"),document.getElementById("sd-present").classList.add("hidden"),document.getElementById("rtc-missing").classList.remove("hidden"),document.getElementById("rtc-present").classList.add("hidden"),appState.sdCardCS=null,appState.rtcType="soft",document.getElementById("rtc-select").value="soft";populatePinsLists()}),document.getElementById("add-sd-card").addEventListener("change",function(){this.checked?document.getElementById("sd-card-pin-select").classList.remove("hidden"):(document.getElementById("sd-card-pin-select").classList.add("hidden"),appState.sdCardCS=null)}),document.getElementById("rtc-select").addEventListener("change",function(){appState.rtcType=this.value}),document.getElementById("led-brightness").addEventListener("input",function(){const e=parseFloat(this.value);appState.statusLEDBrightness=e,document.getElementById("brightness-value").textContent=e.toFixed(1)}),document.getElementById("add-i2c-bus").addEventListener("change",function(){if(this.checked)document.getElementById("additional-i2c-config").classList.remove("hidden");else{document.getElementById("additional-i2c-config").classList.add("hidden");const e=appState.i2cBuses.findIndex(e=>"default"!==e.id);if(-1!==e){const a=appState.i2cBuses[e];appState.usedPins.delete(a.scl),appState.usedPins.delete(a.sda),appState.i2cBuses.splice(e,1),updateI2CBusOptions()}}}),document.getElementById("add-mux-btn").addEventListener("click",function(){showAddMultiplexerModal()}),document.getElementById("generate-config-btn").addEventListener("click",function(){generateConfiguration()}),document.getElementById("download-config-btn").addEventListener("click",function(){downloadConfiguration()}),document.getElementById("import-btn").addEventListener("click",function(){const a=document.getElementById("import-file");if(!a.files||0===a.files.length)return void alert("Please select a file to import.");const s=a.files[0],t=new FileReader;t.onload=function(s){try{const e=s.target.result;document.getElementById("import-json").value=e,document.getElementById("import-json-btn").click(),a.value=""}catch(e){alert("Error reading file: "+e.message)}},t.onerror=function(){alert("Error reading file.")},t.readAsText(s)}),document.getElementById("import-json-btn").addEventListener("click",function(){importConfiguration()}),document.getElementById("export-btn").addEventListener("click",function(){downloadConfiguration(!0)}),document.querySelectorAll(".reset-btn").forEach(e=>{e.addEventListener("click",function(){confirm("Are you sure you want to reset the configurator? All your current configuration will be lost.")&&(resetAppState(),window.location.reload())})}),document.getElementById("modal-cancel").addEventListener("click",function(){closeModal()}),document.getElementById("modal-save").addEventListener("click",function(){saveModalData()}),document.querySelectorAll(".component-search").forEach(e=>{e.addEventListener("input",function(){const e=this.value.toLowerCase(),a=this.id.split("-")[0],s=document.getElementById(`${a}-component-list`),t=s.querySelectorAll(".component-card");t.forEach(a=>{const s=a.querySelector("h4").textContent.toLowerCase(),t=s.includes(e);a.style.display=t?"block":"none"})})}),document.getElementById("add-custom-board-btn").addEventListener("click",function(){const e=document.getElementById("custom-board-name").value.trim();if(!e)return void alert("Please enter a board name");const a="custom-"+e.toLowerCase().replace(/\s+/g,"-"),s=parseFloat(document.getElementById("custom-board-ref-voltage").value)||3.3,t=parseInt(document.getElementById("custom-board-gpio").value)||0,n=parseInt(document.getElementById("custom-board-analog").value)||0,i=document.getElementById("custom-board-scl").value.trim()||"SCL",d=document.getElementById("custom-board-sda").value.trim()||"SDA";if(addCustomBoard(a,{name:e,referenceVoltage:s,totalGPIOPins:t,totalAnalogPins:n,defaultI2C:{scl:i,sda:d},pins:[]})){alert("Custom board added successfully!"),document.getElementById("custom-board-name").value="",document.getElementById("custom-board-ref-voltage").value="3.3",document.getElementById("custom-board-gpio").value="0",document.getElementById("custom-board-analog").value="0",document.getElementById("custom-board-scl").value="",document.getElementById("custom-board-sda").value="",document.getElementById("custom-boards-list").classList.remove("hidden");const s=document.createElement("li");s.textContent=`${e} (ID: ${a})`,document.getElementById("custom-boards-items").appendChild(s)}else alert("Failed to add custom board. Please try again.")})});function hideSubsequentSections(){document.getElementById("companion-board-section").classList.add("hidden"),document.getElementById("manual-config-section").classList.add("hidden"),document.getElementById("i2c-bus-section").classList.add("hidden"),document.getElementById("components-section").classList.add("hidden"),document.getElementById("selected-components-section").classList.add("hidden"),document.getElementById("generate-section").classList.add("hidden")}function resetSubsequentSelections(){document.getElementById("companion-board-select").value="",document.getElementById("companion-details").classList.add("hidden"),document.getElementById("add-sd-card").checked=!1,document.getElementById("sd-card-pin-select").classList.add("hidden"),document.getElementById("rtc-select").value="soft",document.getElementById("led-brightness").value=.5,document.getElementById("brightness-value").textContent="0.5",document.getElementById("add-i2c-bus").checked=!1,document.getElementById("additional-i2c-config").classList.add("hidden"),appState.selectedComponents=[],appState.i2cMultiplexers=[],updateSelectedComponentsList(),appState.usedPins=new Set,appState.selectedBoard&&(appState.usedPins.add(appState.selectedBoard.defaultI2C.scl),appState.usedPins.add(appState.selectedBoard.defaultI2C.sda))}function initializeManualConfig(){document.getElementById("sd-missing").classList.remove("hidden"),document.getElementById("sd-present").classList.add("hidden"),document.getElementById("rtc-missing").classList.remove("hidden"),document.getElementById("rtc-present").classList.add("hidden"),document.getElementById("led-brightness").value=.5,document.getElementById("brightness-value").textContent="0.5",appState.statusLEDBrightness=.5}function populatePinsLists(){if(!appState.selectedBoard)return;const e=appState.selectedBoard.pins,a=document.getElementById("sd-pins-list");a.innerHTML="",e.forEach(e=>{const s=document.createElement("div");s.className="pin"+(appState.usedPins.has(e)?" used":""),s.textContent=e,appState.usedPins.has(e)||s.addEventListener("click",function(){null!==appState.sdCardCS&&appState.usedPins.delete(appState.sdCardCS),appState.sdCardCS=e,appState.usedPins.add(e);const t=a.querySelectorAll(".pin");t.forEach(e=>e.classList.remove("selected")),s.classList.add("selected"),populatePinsLists()}),a.appendChild(s)});const s=document.getElementById("scl-pins-list");s.innerHTML="",e.forEach(e=>{const a=document.createElement("div");a.className="pin"+(appState.usedPins.has(e)?" used":""),a.textContent=e,appState.usedPins.has(e)||a.addEventListener("click",function(){let t=appState.i2cBuses.find(e=>"default"!==e.id);t?(t.scl!==void 0&&appState.usedPins.delete(t.scl),t.scl=e):(t={id:"additional",scl:e,sda:void 0},appState.i2cBuses.push(t)),appState.usedPins.add(e);const n=s.querySelectorAll(".pin");n.forEach(e=>e.classList.remove("selected")),a.classList.add("selected"),populatePinsLists(),t.sda!==void 0&&updateI2CBusOptions()}),s.appendChild(a)});const t=document.getElementById("sda-pins-list");t.innerHTML="",e.forEach(e=>{const a=document.createElement("div");a.className="pin"+(appState.usedPins.has(e)?" used":""),a.textContent=e,appState.usedPins.has(e)||a.addEventListener("click",function(){let s=appState.i2cBuses.find(e=>"default"!==e.id);s?(s.sda!==void 0&&appState.usedPins.delete(s.sda),s.sda=e):(s={id:"additional",scl:void 0,sda:e},appState.i2cBuses.push(s)),appState.usedPins.add(e);const n=t.querySelectorAll(".pin");n.forEach(e=>e.classList.remove("selected")),a.classList.add("selected"),populatePinsLists(),s.scl!==void 0&&updateI2CBusOptions()}),t.appendChild(a)})}function updateI2CBusOptions(){const e=document.getElementById("i2c-bus-select");e.innerHTML="",appState.i2cBuses.forEach(a=>{if(a.scl!==void 0&&a.sda!==void 0){const s=document.createElement("option");s.value=a.id,s.textContent="default"===a.id?"Default I2C Bus (SCL: "+a.scl+", SDA: "+a.sda+")":"Additional I2C Bus (SCL: "+a.scl+", SDA: "+a.sda+")",e.appendChild(s)}}),appState.i2cMultiplexers.forEach(a=>{for(let s=0;s<a.channels;s++){const t=document.createElement("option"),n=`mux-${a.id}-ch-${s}`;t.value=n,t.textContent=`Multiplexer ${a.address} - Channel ${s}`,e.appendChild(t)}})}function populateComponentLists(){const e=document.getElementById("all-component-list");e.innerHTML="",appState.componentsData.i2c.forEach(a=>{const s=createComponentCard(a,"i2c");e.appendChild(s)}),appState.componentsData.ds18x20.forEach(a=>{const s=createComponentCard(a,"ds18x20");e.appendChild(s)}),appState.componentsData.pin.forEach(a=>{const s=createComponentCard(a,"pin");e.appendChild(s)}),appState.componentsData.pixel.forEach(a=>{const s=createComponentCard(a,"pixel");e.appendChild(s)}),appState.componentsData.pwm.forEach(a=>{const s=createComponentCard(a,"pwm");e.appendChild(s)}),appState.componentsData.servo.forEach(a=>{const s=createComponentCard(a,"servo");e.appendChild(s)}),appState.componentsData.uart.forEach(a=>{const s=createComponentCard(a,"uart");e.appendChild(s)});const a=document.getElementById("i2c-component-list");a.innerHTML="",appState.componentsData.i2c.forEach(e=>{const s=createComponentCard(e,"i2c");a.appendChild(s)});const s=document.getElementById("ds18x20-component-list");s.innerHTML="",appState.componentsData.ds18x20.forEach(e=>{const a=createComponentCard(e,"ds18x20");s.appendChild(a)});const t=document.getElementById("pin-component-list");t.innerHTML="",appState.componentsData.pin.forEach(e=>{const a=createComponentCard(e,"pin");t.appendChild(a)});const n=document.getElementById("pixel-component-list");n.innerHTML="",appState.componentsData.pixel.forEach(e=>{const a=createComponentCard(e,"pixel");n.appendChild(a)});const i=document.getElementById("pwm-component-list");i.innerHTML="",appState.componentsData.pwm.forEach(e=>{const a=createComponentCard(e,"pwm");i.appendChild(a)});const d=document.getElementById("servo-component-list");d.innerHTML="",appState.componentsData.servo.forEach(e=>{const a=createComponentCard(e,"servo");d.appendChild(a)});const r=document.getElementById("uart-component-list");r.innerHTML="",appState.componentsData.uart.forEach(e=>{const a=createComponentCard(e,"uart");r.appendChild(a)}),updateI2CBusOptions(),document.getElementById("all-search").addEventListener("input",function(){const e=this.value.toLowerCase(),a=document.querySelectorAll("#all-component-list .component-card");a.forEach(a=>{const s=a.querySelector("h3").textContent.toLowerCase();a.style.display=s.includes(e)?"block":"none"})})}function createComponentCard(e,a){const s=document.createElement("div");if(s.className="component-card",s.dataset.id=e.id,s.dataset.type=a,e.image){const a=document.createElement("img");a.src=e.image.startsWith("http")?e.image:"https://raw.githubusercontent.com/adafruit/Wippersnapper_Components/refs/heads/main/"+e.image,a.alt=e.name,s.appendChild(a)}const t=document.createElement("h4");if(t.textContent=e.name,s.appendChild(t),"i2c"===a&&e.address){const a=document.createElement("p");a.textContent=`Address: ${e.address}`,s.appendChild(a)}if(e.dataTypes&&0<e.dataTypes.length){const a=document.createElement("p");a.textContent=`Data Types: ${e.dataTypes.length}`,s.appendChild(a)}const n=document.createElement("button");return n.textContent="Add Component",n.addEventListener("click",function(){showComponentConfigModal(e,a)}),s.appendChild(n),s}function showComponentConfigModal(e,a){const s=document.getElementById("component-modal"),t=document.getElementById("modal-title"),n=document.getElementById("modal-content");t.textContent=`Configure ${e.name}`,n.innerHTML="";let d="<form id=\"component-config-form\">";if(d+=`
        <div>
            <label for="component-name">Component Name:</label>
            <input type="text" id="component-name" value="${e.name}" required>
        </div>
        <div>
            <label for="component-period">Polling Period (seconds):</label>
            <input type="number" id="component-period" value="30" min="1" required>
        </div>
    `,"i2c"!==a)"ds18x20"===a?(d+=`
            <div>
                <label for="modal-pin-select">Select Pin:</label>
                <select id="modal-pin-select" required>
                    <option value="">-- Select a Pin --</option>
        `,appState.selectedBoard&&appState.selectedBoard.pins.forEach(e=>{appState.usedPins.has(e)||(d+=`<option value="${e}">Pin ${e}</option>`)}),d+=`
                </select>
            </div>
        `,d+=`
            <div>
                <label for="modal-resolution">Resolution:</label>
                <select id="modal-resolution" required>
                    <option value="9">9-bit</option>
                    <option value="10">10-bit</option>
                    <option value="11">11-bit</option>
                    <option value="12">12-bit</option>
                </select>
            </div>
        `):"pin"===a||"pwm"===a||"servo"===a?(d+=`
            <div>
                <label for="modal-pin-select">Select Pin:</label>
                <select id="modal-pin-select" required>
                    <option value="">-- Select a Pin --</option>
        `,appState.selectedBoard&&appState.selectedBoard.pins.forEach(e=>{appState.usedPins.has(e)||(d+=`<option value="${e}">Pin ${e}</option>`)}),d+=`
                </select>
            </div>
        `):"pixel"===a?(d+=`
            <div>
                <label for="modal-pin-select">Select Pin:</label>
                <select id="modal-pin-select" required>
                    <option value="">-- Select a Pin --</option>
        `,appState.selectedBoard&&appState.selectedBoard.pins.forEach(e=>{appState.usedPins.has(e)||(d+=`<option value="${e}">Pin ${e}</option>`)}),d+=`
                </select>
            </div>
            <div>
                <label for="modal-pixel-count">Number of Pixels:</label>
                <input type="number" id="modal-pixel-count" value="1" min="1" required>
            </div>
        `):"uart"===a&&(d+=`
            <div>
                <label for="modal-uart-tx">TX Pin:</label>
                <select id="modal-uart-tx" required>
                    <option value="">-- Select TX Pin --</option>
        `,appState.selectedBoard&&appState.selectedBoard.pins.forEach(e=>{appState.usedPins.has(e)||(d+=`<option value="${e}">Pin ${e}</option>`)}),d+=`
                </select>
            </div>
            <div>
                <label for="modal-uart-rx">RX Pin:</label>
                <select id="modal-uart-rx" required>
                    <option value="">-- Select RX Pin --</option>
        `,appState.selectedBoard&&appState.selectedBoard.pins.forEach(e=>{appState.usedPins.has(e)||e===parseInt(document.getElementById("modal-uart-tx")?.value)||(d+=`<option value="${e}">Pin ${e}</option>`)}),d+=`
                </select>
            </div>
        `);else if(d+=`
            <div>
                <label for="modal-i2c-bus">I2C Bus:</label>
                <select id="modal-i2c-bus" required>
        `,appState.i2cBuses.forEach(e=>{void 0!==e.scl&&void 0!==e.sda&&(d+=`<option value="${e.id}">${"default"===e.id?"Default I2C Bus (SCL: "+e.scl+", SDA: "+e.sda+")":"Additional I2C Bus (SCL: "+e.scl+", SDA: "+e.sda+")"}</option>`)}),appState.i2cMultiplexers.forEach(e=>{for(let a=0;a<e.channels;a++){const s=`mux-${e.id}-ch-${a}`;d+=`<option value="${s}">Multiplexer ${e.address} - Channel ${a}</option>`}}),d+=`
            </select>
        </div>
        `,d+=`
            <div>
                <label for="modal-i2c-address">I2C Address:</label>
                <select id="modal-i2c-address" required>
        `,e.addresses&&0<e.addresses.length?e.addresses.forEach(a=>{d+=`<option value="${a}" ${a===e.address?"selected":""}>${a}</option>`}):d+=`<option value="${e.address}">${e.address}</option>`,d+=`
                </select>
            </div>
        `,"pca9546"===e.id||"pca9548"===e.id||"tca9546"===e.id||"tca9548"===e.id){const a=e.id.includes("9548")?8:4;d+=`
                <div>
                    <label for="modal-mux-channels">Number of Channels:</label>
                    <input type="number" id="modal-mux-channels" value="${e.channels||a}" min="1" max="${a}" required readonly>
                    <p><small>This multiplexer has ${a} channels</small></p>
                </div>
            `}e.dataTypes&&0<e.dataTypes.length&&(d+=`
            <div>
                <h4>Select Data Types:</h4>
                <div id="data-type-checkboxes">
        `,e.dataTypes.forEach(e=>{const a="string"==typeof e?e:e.displayName||e.sensorType,s="string"==typeof e?e:JSON.stringify(e);d+=`
                <div>
                    <label>
                        <input type="checkbox" name="data-type" value='${s}' checked>
                        ${a}
                    </label>
                </div>
            `}),d+=`
                </div>
            </div>
        `),d+="</form>",n.innerHTML=d,n.dataset.componentId=e.id,n.dataset.componentType=a,s.style.display="block"}function showAddMultiplexerModal(){if(0===appState.i2cBuses.length)return void alert("No I2C buses available. Please configure an I2C bus first.");const e=appState.componentsData.i2c.filter(e=>"pca9546"===e.id||"pca9548"===e.id||"tca9546"===e.id||"tca9548"===e.id);if(0===e.length)return void alert("No multiplexer components found in the component data.");const a=document.getElementById("component-modal"),s=document.getElementById("modal-title"),t=document.getElementById("modal-content");s.textContent="Add I2C Multiplexer";let n=`
        <div class="form-group">
            <label for="multiplexer-select">Select Multiplexer Type:</label>
            <select id="multiplexer-select" class="form-control">
    `;e.forEach(e=>{n+=`<option value="${e.id}">${e.name} (${e.channels} channels)</option>`}),n+=`
            </select>
        </div>
        <div class="form-group mt-3">
            <button id="select-multiplexer-btn" class="btn btn-primary">Continue</button>
            <button id="cancel-multiplexer-btn" class="btn btn-secondary">Cancel</button>
        </div>
    `,t.innerHTML=n,document.getElementById("select-multiplexer-btn").addEventListener("click",function(){const s=document.getElementById("multiplexer-select").value,t=e.find(e=>e.id===s);a.style.display="none",showComponentConfigModal(t,"i2c")}),document.getElementById("cancel-multiplexer-btn").addEventListener("click",function(){a.style.display="none"}),a.style.display="block"}function closeModal(){const e=document.getElementById("component-modal");e.style.display="none"}function saveModalData(){const e=document.getElementById("modal-content"),a=e.dataset.componentId,s=e.dataset.componentType,t=appState.componentsData[s].find(e=>e.id===a),n=document.getElementById("component-name").value,i=parseInt(document.getElementById("component-period").value),d={instanceId:appState.nextComponentId++,name:n,componentAPI:s,period:i};if("i2c"===s){const e=document.getElementById("modal-i2c-bus").value,s=document.getElementById("modal-i2c-address").value;if(d.i2cDeviceName=a,d.i2cDeviceAddress=s,e.startsWith("mux-")){const[a,s,t,n]=e.split("-"),i=appState.i2cMultiplexers.find(e=>e.id===parseInt(s));i&&(d.i2cMuxAddress=i.address,d.i2cMuxChannel=n)}else if("additional"===e){const e=appState.i2cBuses.find(e=>"additional"===e.id);e&&(d.i2cBusScl=e.scl.toString(),d.i2cBusSda=e.sda.toString())}if("pca9546"===a||"pca9548"===a||"tca9546"===a||"tca9548"===a){const e=parseInt(document.getElementById("modal-mux-channels").value),a={id:appState.nextComponentId-1,address:s,channels:e};appState.i2cMultiplexers.push(a),updateI2CBusOptions(),appState.selectedComponents=appState.selectedComponents.filter(e=>!(e.i2cMuxAddress&&e.i2cMuxAddress===d.i2cDeviceAddress))}else{const e=document.querySelectorAll("input[name=\"data-type\"]:checked");0<e.length&&(d.i2cDeviceSensorTypes=Array.from(e).map(a=>{try{return{type:JSON.parse(a.value)}}catch(s){return{type:a.value}}}))}}else if("ds18x20"===s){const e=document.getElementById("modal-pin-select").value,a=document.getElementById("modal-resolution").value;d.pinName=`D${e}`,d.sensorResolution=parseInt(a),appState.usedPins.add(parseInt(e));const s=document.querySelectorAll("input[name=\"data-type\"]:checked");0<s.length&&(d.sensorTypeCount=s.length,Array.from(s).forEach((e,a)=>{const s=e.value.replace(/"/g,"");d[`sensorType${a+1}`]=s}))}else if("pin"===s||"pwm"===s||"servo"===s){const e=document.getElementById("modal-pin-select").value;d.pinName=`D${e}`,appState.usedPins.add(parseInt(e))}else if("pixel"===s){const e=document.getElementById("modal-pin-select").value,a=document.getElementById("modal-pixel-count").value;d.pinName=`D${e}`,d.numPixels=parseInt(a),appState.usedPins.add(parseInt(e))}else if("uart"===s){const e=document.getElementById("modal-uart-tx").value,a=document.getElementById("modal-uart-rx").value;d.txPin=`D${e}`,d.rxPin=`D${a}`,appState.usedPins.add(parseInt(e)),appState.usedPins.add(parseInt(a));const s=document.querySelectorAll("input[name=\"data-type\"]:checked");0<s.length&&(d.sensorTypes=Array.from(s).map(a=>{try{return JSON.parse(a.value)}catch(s){return a.value}}))}appState.selectedComponents.push(d),updateSelectedComponentsList(),populatePinsLists(),closeModal()}function updateSelectedComponentsList(){const e=document.getElementById("selected-components-list");if(0===appState.selectedComponents.length)return void(e.innerHTML="<p>No components selected yet.</p>");let a="<ul class=\"component-details-list\">";appState.selectedComponents.forEach(e=>{let s="";if("i2c"===e.componentAPI){if(s+=`<br>Address: ${e.i2cDeviceAddress}`,e.i2cBusScl&&e.i2cBusSda)s+=`<br>Bus: Custom (SCL: ${e.i2cBusScl}, SDA: ${e.i2cBusSda})`;else if(e.i2cMuxAddress)s+=`<br>Connected to: Multiplexer ${e.i2cMuxAddress} - Channel ${e.i2cMuxChannel}`;else{const e=appState.i2cBuses.find(e=>"default"===e.id);e&&(s+=`<br>Bus: Default (SCL: ${e.scl}, SDA: ${e.sda})`)}e.i2cDeviceSensorTypes&&0<e.i2cDeviceSensorTypes.length&&(s+="<br>Data types: ",e.i2cDeviceSensorTypes.forEach((e,a)=>{const t="object"==typeof e.type?e.type.displayName||e.type.sensorType:e.type;s+=(0<a?", ":"")+t}))}else if("ds18x20"===e.componentAPI){s+=`<br>Pin: ${e.pinName}`,s+=`<br>Resolution: ${e.sensorResolution}-bit`;const a=[];for(let s=1;s<=e.sensorTypeCount;s++)e[`sensorType${s}`]&&a.push(e[`sensorType${s}`]);0<a.length&&(s+="<br>Data types: "+a.join(", "))}else"pin"===e.componentAPI||"pwm"===e.componentAPI||"servo"===e.componentAPI?s+=`<br>Pin: ${e.pinName}`:"pixel"===e.componentAPI?(s+=`<br>Pin: ${e.pinName}`,s+=`<br>Pixels: ${e.numPixels}`):"uart"===e.componentAPI&&(s+=`<br>TX Pin: ${e.txPin}, RX Pin: ${e.rxPin}`,e.sensorTypes&&0<e.sensorTypes.length&&(s+="<br>Data types: ",e.sensorTypes.forEach((e,a)=>{const t="object"==typeof e?e.displayName||e.sensorType:e;s+=(0<a?", ":"")+t})));s+=`<br>Polling period: ${e.period} seconds`,a+=`<li>
            <div class="component-item">
                <div class="component-info">
                    <strong>${e.name}</strong> (${e.componentAPI})
                    ${s}
                </div>
                <div class="component-actions">
                    <button onclick="removeComponent(${e.instanceId})">Remove</button>
                </div>
            </div>
        </li>`}),a+="</ul>",e.innerHTML=a}function removeComponent(e){const a=appState.selectedComponents.findIndex(a=>a.instanceId===e);if(-1===a)return;const s=appState.selectedComponents[a];if(s.pinName){const e=parseInt(s.pinName.replace("D",""));appState.usedPins.delete(e)}if(s.txPin){const e=parseInt(s.txPin.replace("D",""));appState.usedPins.delete(e)}if(s.rxPin){const e=parseInt(s.rxPin.replace("D",""));appState.usedPins.delete(e)}if("i2c"===s.componentAPI&&("pca9546"===s.i2cDeviceName||"pca9548"===s.i2cDeviceName||"tca9546"===s.i2cDeviceName||"tca9548"===s.i2cDeviceName)){const e=appState.i2cMultiplexers.findIndex(e=>e.id===s.instanceId);-1!==e&&(appState.i2cMultiplexers.splice(e,1),updateI2CBusOptions(),appState.selectedComponents=appState.selectedComponents.filter(e=>!(e.i2cMuxAddress&&e.i2cMuxAddress===s.i2cDeviceAddress)))}appState.selectedComponents.splice(a,1),updateSelectedComponentsList(),populatePinsLists()}function generateConfiguration(){if(!appState.selectedBoard)return void alert("Please select a board before generating configuration.");if(0===appState.selectedComponents.length)return void alert("Please add at least one component before generating configuration.");const e={exportedFromDevice:{referenceVoltage:appState.selectedBoard.referenceVoltage,totalGPIOPins:appState.selectedBoard.totalGPIOPins,totalAnalogPins:appState.selectedBoard.totalAnalogPins,statusLEDBrightness:appState.statusLEDBrightness},components:[]};null!==appState.sdCardCS&&(e.exportedFromDevice.sd_cs_pin=appState.sdCardCS),"soft"!==appState.rtcType&&(e.exportedFromDevice.rtc=appState.rtcType),appState.selectedComponents.forEach(a=>{const s={...a};delete s.instanceId,e.components.push(s)});const a=JSON.stringify(e,null,4);document.getElementById("config-output").textContent=a,document.getElementById("config-output-container").classList.remove("hidden"),document.getElementById("export-config").textContent=a}function downloadConfiguration(e=!1){const s=e?document.getElementById("export-config").textContent:document.getElementById("config-output").textContent;if("No configuration generated yet."===s)return void alert("Please generate a configuration first.");const t=new Blob([s],{type:"application/json"}),n=URL.createObjectURL(t),i=document.createElement("a");i.href=n,i.download="config.json",document.body.appendChild(i),i.click(),document.body.removeChild(i),URL.revokeObjectURL(n)}function importConfiguration(){const e=document.getElementById("import-json").value.trim();if(!e)return void alert("Please paste a valid JSON configuration.");try{const a=JSON.parse(e);resetAppState();const s=importConfigObject(a);appState.isImporting||(s?(alert("Configuration imported successfully. Please check the Build tab to see your configuration."),openTab(null,"BuildConfig")):(openTab(null,"BuildConfig"),setTimeout(()=>{const e=document.querySelector(".section");e&&e.scrollIntoView({behavior:"smooth"})},500)))}catch(e){alert("Error importing configuration: "+e.message)}}function resetAppState(){appState.selectedBoard=null,appState.companionBoard=null,appState.sdCardCS=null,appState.rtcType="soft",appState.statusLEDBrightness=.5,appState.i2cBuses=[],appState.i2cMultiplexers=[],appState.selectedComponents=[],appState.usedPins=new Set,appState.nextComponentId=1,appState.isImporting=!1,document.getElementById("board-select").value="",document.getElementById("companion-board-select").value="",document.getElementById("led-brightness").value=.5,document.getElementById("brightness-value").textContent="0.5",document.getElementById("add-sd-card").checked=!1,document.getElementById("add-i2c-bus").checked=!1,hideSubsequentSections(),document.getElementById("board-details").classList.add("hidden"),document.getElementById("sd-missing").classList.remove("hidden"),document.getElementById("sd-present").classList.add("hidden"),document.getElementById("rtc-missing").classList.remove("hidden"),document.getElementById("rtc-present").classList.add("hidden");const e=document.getElementById("selected-components-list");e.innerHTML="<p>No components selected yet.</p>"}function importConfigObject(e){function a(){if(this.value){if(console.log("Board selected, processing pending configurations..."),void 0!==appState.pendingSDCardPin&&setTimeout(()=>{document.getElementById("add-sd-card").checked=!0;const e=new Event("change");document.getElementById("add-sd-card").dispatchEvent(e);const a=document.getElementById("sd-cs-pin-select");a&&(a.value=appState.pendingSDCardPin,appState.sdCardCS=appState.pendingSDCardPin,appState.usedPins.add(appState.pendingSDCardPin)),document.getElementById("sd-missing").classList.add("hidden"),document.getElementById("sd-present").classList.remove("hidden"),document.getElementById("sd-cs-pin").textContent=appState.pendingSDCardPin},100),appState.pendingRTC){document.getElementById("rtc-select").value=appState.pendingRTC;const e=new Event("change");document.getElementById("rtc-select").dispatchEvent(e),document.getElementById("rtc-missing").classList.add("hidden"),document.getElementById("rtc-present").classList.remove("hidden"),document.getElementById("rtc-type").textContent=appState.pendingRTC}appState.pendingComponents&&0<appState.pendingComponents.length&&(appState.pendingComponents.forEach(e=>{if("i2c"===e.componentAPI&&("pca9546"===e.i2cDeviceName||"pca9548"===e.i2cDeviceName||"tca9546"===e.i2cDeviceName||"tca9548"===e.i2cDeviceName)){const a=e.i2cDeviceName.includes("9548")?8:4,s={id:appState.nextComponentId++,address:e.i2cMuxAddress||e.i2cDeviceAddress,channels:a};appState.i2cMultiplexers.push(s);const t={...e,instanceId:s.id};appState.selectedComponents.push(t)}}),appState.pendingComponents.forEach(e=>{if("i2c"!==e.componentAPI||"pca9546"!==e.i2cDeviceName&&"pca9548"!==e.i2cDeviceName&&"tca9546"!==e.i2cDeviceName&&"tca9548"!==e.i2cDeviceName){const a={...e,instanceId:appState.nextComponentId++};if(appState.selectedComponents.push(a),e.pinName){const a=parseInt(e.pinName.replace("D",""));appState.usedPins.add(a)}if(e.txPin){const a=parseInt(e.txPin.replace("D",""));appState.usedPins.add(a)}if(e.rxPin){const a=parseInt(e.rxPin.replace("D",""));appState.usedPins.add(a)}if(e.i2cBusScl&&e.i2cBusSda){const a=parseInt(e.i2cBusScl),s=parseInt(e.i2cBusSda),t=appState.i2cBuses.find(e=>e.scl===a&&e.sda===s);if(!t&&a&&s){const e=`bus_${appState.i2cBuses.length}`;appState.i2cBuses.push({id:e,scl:a,sda:s}),appState.usedPins.add(a),appState.usedPins.add(s)}}}}),updateSelectedComponentsList(),updateI2CBusOptions(),appState.pendingComponents=[]),i.removeEventListener("change",a)}}appState.isImporting=!0,console.log("Importing configuration...");const s=e.exportedFromDevice;let t=!1,n=null;for(const[a,i]of Object.entries(appState.boardsData))if(i.referenceVoltage===s.referenceVoltage&&i.totalGPIOPins===s.totalGPIOPins&&i.totalAnalogPins===s.totalAnalogPins){n=a,t=!0;break}if(n){document.getElementById("board-select").value=n;const e=new Event("change");document.getElementById("board-select").dispatchEvent(e)}else alert("Import successful! To complete the process, please select your microcontroller board from the Build Configuration tab."),setTimeout(()=>{const e=document.getElementById("board-select");if(e.style.boxShadow="0 0 10px #2e8b57",e.style.border="2px solid #2e8b57",e.style.animation="pulse 1.5s infinite",!document.getElementById("pulse-animation")){const e=document.createElement("style");e.id="pulse-animation",e.textContent=`
                    @keyframes pulse {
                        0% { box-shadow: 0 0 0 0 rgba(46, 139, 87, 0.7); }
                        70% { box-shadow: 0 0 0 10px rgba(46, 139, 87, 0); }
                        100% { box-shadow: 0 0 0 0 rgba(46, 139, 87, 0); }
                    }
                `,document.head.appendChild(e)}const a=document.querySelector(".section");if(a){const a=document.createElement("p");a.id="board-select-helper",a.style.color="#2e8b57",a.style.fontWeight="bold",a.textContent="Please select your microcontroller board to continue the import process.";const s=document.getElementById("board-select-helper");s&&s.remove(),((e,a)=>{a.parentNode.insertBefore(e,a.nextSibling)})(a,e)}e.addEventListener("change",function(){if(this.value){this.style.boxShadow="",this.style.border="",this.style.animation="";const e=document.getElementById("board-select-helper");e&&e.remove()}})},500);void 0!==s.sd_cs_pin&&(appState.sdCardCS=s.sd_cs_pin,document.getElementById("add-sd-card").checked=!0,appState.pendingSDCardPin=s.sd_cs_pin),s.rtc&&(appState.rtcType=s.rtc,appState.pendingRTC=s.rtc),void 0!==s.statusLEDBrightness&&(appState.statusLEDBrightness=s.statusLEDBrightness,document.getElementById("led-brightness").value=s.statusLEDBrightness,document.getElementById("brightness-value").textContent=s.statusLEDBrightness),appState.pendingComponents=[],e.components&&Array.isArray(e.components)&&(appState.pendingComponents=e.components.map(e=>({...e})));const i=document.getElementById("board-select");return i.removeEventListener("change",a),i.addEventListener("change",a),setTimeout(()=>{appState.isImporting=!1},500),t}function initializeSampleComponents(){appState.componentsData.i2c=[{id:"bme280",name:"BME280",address:"0x77",dataTypes:["ambient-temp","ambient-temp-fahrenheit","relative-humidity","pressure","altitude"]},{id:"sht30",name:"SHT30",address:"0x44",dataTypes:["ambient-temp","ambient-temp-fahrenheit","relative-humidity"]},{id:"mcp9808",name:"MCP9808",address:"0x18",dataTypes:["ambient-temp","ambient-temp-fahrenheit"]},{id:"bh1750",name:"BH1750",address:"0x23",dataTypes:["light"]},{id:"sgp30",name:"SGP30",address:"0x58",dataTypes:["eco2","tvoc"]},{id:"pca9546",name:"PCA9546 4-Channel Multiplexer",address:"0x70",channels:4},{id:"pca9548",name:"PCA9548 8-Channel Multiplexer",address:"0x70",channels:8},{id:"tca9546",name:"TCA9546 4-Channel Multiplexer",address:"0x70",channels:4},{id:"tca9548",name:"TCA9548 8-Channel Multiplexer",address:"0x70",channels:8}],appState.componentsData.ds18x20=[{id:"ds18b20",name:"DS18B20",dataTypes:["object-temp","object-temp-fahrenheit"]},{id:"ds18b20_waterproof",name:"DS18B20 Waterproof",dataTypes:["object-temp","object-temp-fahrenheit"]}],appState.componentsData.pin=[{id:"led",name:"LED",dataTypes:[]},{id:"push_button",name:"Push Button",dataTypes:["digital-input"]},{id:"toggle_switch",name:"Toggle Switch",dataTypes:["digital-input"]},{id:"potentiometer",name:"Potentiometer",dataTypes:["analog-input"]}],appState.componentsData.pixel=[{id:"neopixel",name:"NeoPixel",dataTypes:[]},{id:"dotstar",name:"DotStar",dataTypes:[]}],appState.componentsData.pwm=[{id:"dimmable_led",name:"Dimmable LED",dataTypes:[]},{id:"piezo_buzzer",name:"Piezo Buzzer",dataTypes:[]}],appState.componentsData.servo=[{id:"servo",name:"Servo Motor",dataTypes:[]}],appState.componentsData.uart=[{id:"pms5003",name:"PMS5003 Air Quality Sensor",dataTypes:["pm10-std","pm25-std","pm100-std"]}]}function initializeSampleBoards(){appState.boardsData={"feather-esp32":{referenceVoltage:3.3,totalGPIOPins:21,totalAnalogPins:14,defaultI2C:{scl:22,sda:23},pins:[0,2,4,5,12,13,14,15,16,17,18,19,21,22,23,25,26,27,32,33,34,35,36,39]},"feather-esp32s2":{referenceVoltage:3.3,totalGPIOPins:22,totalAnalogPins:6,defaultI2C:{scl:42,sda:41},pins:[0,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,33,34,35,36,37,38,39,41,42]},"feather-esp32s3-tft":{referenceVoltage:3.3,totalGPIOPins:18,totalAnalogPins:6,defaultI2C:{scl:9,sda:8},pins:[1,3,4,5,6,7,8,9,10,11,12,13,14,17,18,21,38,39,40,41,42]},"feather-esp32c3":{referenceVoltage:3.3,totalGPIOPins:13,totalAnalogPins:4,defaultI2C:{scl:5,sda:4},pins:[0,1,2,3,4,5,6,7,8,9,10,18,19,20,21]},"qtpy-esp32c3":{referenceVoltage:3.3,totalGPIOPins:11,totalAnalogPins:4,defaultI2C:{scl:5,sda:4},pins:[0,1,2,3,4,5,6,7,8,9,10]}}}"undefined"==typeof loadWippersnapperData&&(console.log("No data loader detected, initializing with sample data"),document.addEventListener("DOMContentLoaded",function(){document.getElementById("loading-indicator").classList.add("hidden"),initializeSampleBoards(),initializeSampleComponents()}));